{"source":"Set up a meeting for Monday of next week at 3 with Sarah and her boss","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Sarah \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Sarah \" ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( DowOfWeekNew :dow # ( DayOfWeek \" MONDAY \" ) :week ( NextWeekList ) ) :time ( NumberPM :number # ( Number 3 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Sarah \"),with_attendee(FindManager(\" Sarah \")),starts_at(DowOfWeekNew(dow=DayOfWeek(\" MONDAY \"),week=NextWeekList())),starts_at(NumberPM(3))))","qid":"7b6fd772-aaab-4015-9519-5b7c3459c2b6.0"}
{"source":"Make an event for Rob and his manager and invite Chris and his manager as well for next saturday at 1 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Rob \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Rob \" ) ) ) ) ) ) ) ) ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Chris \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Chris \" ) ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" SATURDAY \" ) ) :time ( NumberPM :number # ( Number 1 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Rob \"),with_attendee(FindManager(\" Rob \")),with_attendee(\" Chris \"),with_attendee(FindManager(\" Chris \")),starts_at(NextDOW(\" SATURDAY \")),starts_at(NumberPM(1))))","qid":"53a1d409-b78f-41b3-b0b7-c914edbf44c6.0"}
{"source":"Schedule a dinner with Caitlin 's boss later in the day .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Caitlin \" ) ) ) ) ) ) ) :start ( DateTimeConstraint :constraint ( Late ) :date ( Today ) ) :subject ( ?= # ( String \" dinner \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Caitlin \")),has_subject(\" dinner \"),starts_at(Late()),starts_at(Today())))","qid":"712020e1-219a-4325-a279-e258ae0a7208.3"}
{"source":"make an appointment with my manager for tomorrow","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),starts_at(Tomorrow())))","qid":"1cdc37bb-dd67-4b7f-9157-fe9f88319a8e.0"}
{"source":"create work meeting with my boss","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :subject ( ?= # ( String \" work meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),has_subject(\" work meeting \")))","qid":"e6dd6f11-b17c-459d-a3c7-92856e1424c1.1"}
{"source":"Add to my calendar on July 28 th at 2 pm Financial Reports with Trevor and his supervisor .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Trevor \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Trevor \" ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( MD :day # ( Number 28 ) :month # ( Month \" JULY \" ) ) :time ( NumberPM :number # ( Number 2 ) ) ) ) :subject ( ?= # ( String \" Financial Reports \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Trevor \"),with_attendee(FindManager(\" Trevor \")),has_subject(\" Financial Reports \"),starts_at(MD(month=\" JULY \",day=28)),starts_at(NumberPM(2))))","qid":"59c8e273-2274-4818-b409-511dc3594616.3"}
{"source":"Make a meeting with Abby and her team","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Abby \"),with_attendee(FindTeamOf(recipient=\" Abby \"))))","qid":"926a7b6d-a4f7-4370-9d3b-25c623f8f98d.0"}
{"source":"I 'll need to book a room at Cambridge for my team .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :location ( andConstraint ( ?= # ( LocationKeyphrase \" Cambridge \" ) ) ( roomRequest ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),at_location(\" Cambridge \"),at_location(roomRequest())))","qid":"2b7436f2-df65-476e-9b46-77ca5af8bfe7.2"}
{"source":"put the meeting with ben 's manager at 10 . 00 am","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" ben \" ) ) ) ) ) ) ) :start ( ?= ( NextTime :time ( NumberAM :number # ( Number 10.0 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" ben \")),starts_at(NextTime(time=NumberAM(10)))))","qid":"b670d70c-5d61-4a62-aa0a-53e3d1ce8299.1"}
{"source":"Schedule a meeting with Dan Schoffel and his reports .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Dan Schoffel \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindReports :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Dan Schoffel \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Dan Schoffel \"),with_attendee(FindReports(recipient=refer(Recipient?(name=LIKE(Dan Schoffel)))))))","qid":"e1b4561b-308f-4ed2-ad34-a19c043e63bb.4"}
{"source":"I will be with Jake and his boss at the County Fair tomorrow","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) ) ) :location ( ?= # ( LocationKeyphrase \" County Fair \" ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jake \"),with_attendee(FindManager(\" Jake \")),at_location(\" County Fair \"),starts_at(Tomorrow())))","qid":"dc36820b-3417-4c56-95d3-bcf976f4b3bc.2"}
{"source":"Put on calendar to meet with Ron 's manager Dan Schoffel to talk about partnership options on Monday at 3 : 00 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Ron \" ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :time ( NumberPM :number # ( Number 3 ) ) ) ) :subject ( ?= # ( String \" talk about partnership options \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Ron \")),has_subject(\" talk about partnership options \"),starts_at(NextDOW(\" MONDAY \")),starts_at(NumberPM(3))))","qid":"a8aed6a5-6fd7-48ee-ad81-8efa4cc4882f.2"}
{"source":"I have a meeting with David Lax 's team next week","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" David Lax \" ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( NextWeekList ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=\" David Lax \")),starts_at(NextWeekList())))","qid":"fef2f8a3-9157-4eb7-a83d-bda8bc373ae2.3"}
{"source":"Set up a meeting with Tom and his Manager at the Starbucks on 5 th street instead please .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Tom \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Tom \" ) ) ) ) ) ) ) ) :location ( ?= # ( LocationKeyphrase \" Starbucks on 5th street \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Tom \"),with_attendee(FindManager(\" Tom \")),at_location(\" Starbucks on 5th street \")))","qid":"555a5775-5fe3-4eae-a7da-be05bd666c99.4"}
{"source":"Please set up a meeting with David Lax 's reports on Monday at 8 : 30 AM .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindReports :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" David Lax \" ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :time ( HourMinuteAm :hours # ( Number 8 ) :minutes # ( Number 30.0 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindReports(recipient=refer(Recipient?(name=LIKE(David Lax))))),starts_at(NextDOW(\" MONDAY \")),starts_at(HourMinuteAm(hours=8,minutes=30))))","qid":"372948e9-664d-45ae-a4d8-ba0c4805de3d.0"}
{"source":"Please set up a meeting with all of my reports on Tuesday morning .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindReports :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( DateTimeConstraint :constraint ( Morning ) :date ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindReports(recipient=CurrentUser())),starts_at(Morning()),starts_at(NextDOW(\" TUESDAY \"))))","qid":"bd5d8071-c855-43b0-8247-4c775b10f979.4"}
{"source":"Next , I need to see Ben and his entire team on Tuesday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Ben \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Ben \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Ben \"),with_attendee(FindTeamOf(recipient=\" Ben \")),starts_at(NextDOW(\" TUESDAY \"))))","qid":"aaed6204-513c-4a85-adef-d2018e1b58f1.2"}
{"source":"Can you set up a meeting with my team tomorrow ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(Tomorrow())))","qid":"a9c20323-c875-4aa7-9b1c-9b6b5cc8b53b.2"}
{"source":"schedule a conference call with Mary and her boss","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Mary \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Mary \" ) ) ) ) ) ) ) ) :subject ( ?= # ( String \" conference call \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Mary \"),with_attendee(FindManager(\" Mary \")),has_subject(\" conference call \")))","qid":"d25df751-b8f7-4ac2-90de-319323085d4f.4"}
{"source":"I need to see Alice and her boss next Monday at 3 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Alice \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Alice \" ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :time ( NumberPM :number # ( Number 3 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Alice \"),with_attendee(FindManager(\" Alice \")),starts_at(NextDOW(\" MONDAY \")),starts_at(NumberPM(3))))","qid":"b44ce65e-1081-49ce-a83c-470fea4c9fb5.3"}
{"source":"I need to schedule a meeting with my boss for tomorrow at eight in the morning .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberAM :number # ( Number 8 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),starts_at(Tomorrow()),starts_at(NumberAM(8))))","qid":"e0ff6e54-d8e4-4942-bab2-f635c4a0a5a6.0"}
{"source":"Make an Event with Ashley and her manager at 3 rd Nov","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Ashley \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Ashley \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( MD :day # ( Number 3 ) :month # ( Month \" NOVEMBER \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Ashley \"),with_attendee(FindManager(\" Ashley \")),starts_at(MD(month=\" NOVEMBER \",day=3))))","qid":"a13ffcd8-86a3-46f0-aeef-4c7f43620152.0"}
{"source":"Please schedule a meeting with my team on Saturday morning .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( DateTimeConstraint :constraint ( Morning ) :date ( NextDOW :dow # ( DayOfWeek \" SATURDAY \" ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(Morning()),starts_at(NextDOW(\" SATURDAY \"))))","qid":"024aeda4-5354-4b20-8344-9c6614862a73.1"}
{"source":"put on my schedule for Monday a meeting with my team","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(NextDOW(\" MONDAY \"))))","qid":"23c93edc-8eaf-491c-8247-1de064aa2a95.0"}
{"source":"create a meeting tomorrow with david lax and his team","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" david lax \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" david lax \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" david lax \"),with_attendee(FindTeamOf(recipient=\" david lax \")),starts_at(Tomorrow())))","qid":"e4b2bb57-0b4b-4e95-b361-cbd4bcfdce8b.0"}
{"source":"I need a meeting tomorrow morning with Abby and her skip .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ) ) ) :start ( DateTimeConstraint :constraint ( Morning ) :date ( Tomorrow ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Abby \"),with_attendee(FindManager(FindManager(\" Abby \"))),starts_at(Morning()),starts_at(Tomorrow())))","qid":"dbabb4f2-e373-4820-bbd3-dcbb7f06c2e3.3"}
{"source":"put the meeting with ben 's manager on oct 26 at 10 . 00 am","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" ben \" ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( MD :day # ( Number 26 ) :month # ( Month \" OCTOBER \" ) ) :time ( NumberAM :number # ( Number 10.0 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" ben \")),starts_at(MD(month=\" OCTOBER \",day=26)),starts_at(NumberAM(10))))","qid":"93e56ec4-9ec1-4e69-b7d1-5b6c6f8b3ff4.3"}
{"source":"Schedule a meeting with Doug and his boss for next week to review","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Doug \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Doug \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( NextWeekList ) ) :subject ( ?= # ( String \" review \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Doug \"),with_attendee(FindManager(\" Doug \")),has_subject(\" review \"),starts_at(NextWeekList())))","qid":"584c1159-fffc-4656-8211-a5ef88158600.1"}
{"source":"Create a meeting with Kim 's skip tomorrow at 3 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim \" ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 3 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(FindManager(\" Kim \"))),starts_at(Tomorrow()),starts_at(NumberPM(3))))","qid":"809d3e23-f1c5-481a-ae93-6f1b6df79e11.3"}
{"source":"Add meeting with my skip today .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Today ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(FindManager(CurrentUser()))),starts_at(Today())))","qid":"24d4b03b-9506-4fb8-bdde-0d8f89fa4443.2"}
{"source":"Please make a meeting with damon straeter 's team on tommorrow","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" damon straeter \" ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=\" damon straeter \")),starts_at(Tomorrow())))","qid":"7ff78623-8ce2-403b-ad70-d984b889f454.2"}
{"source":"add a date for a meeting with my team for next Friday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(NextDOW(\" FRIDAY \"))))","qid":"796ef379-9762-4efb-8f4b-73562c81714e.0"}
{"source":"Alright set up a meeting tomorrow with Dan Morton and his team .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Dan Morton \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Dan Morton \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Dan Morton \"),with_attendee(FindTeamOf(recipient=\" Dan Morton \")),starts_at(Tomorrow())))","qid":"45a7049f-ddfd-4df1-994c-d35628bce3f5.1"}
{"source":"I 'll need to meet with Jake and his team on the 14 th .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( nextDayOfMonth ( Today ) # ( Number 14 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jake \"),with_attendee(FindTeamOf(recipient=\" Jake \")),starts_at(nextDayOfMonth(Today(),14))))","qid":"60119f43-9542-4d4f-ad1d-5ba22cd15805.2"}
{"source":"Set event get ready for dinner with boss at 7 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( NextTime :time ( NumberPM :number # ( Number 7 ) ) ) ) :subject ( ?= # ( String \" get ready for dinner \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),has_subject(\" get ready for dinner \"),starts_at(NextTime(time=NumberPM(7)))))","qid":"384f0c24-6d5a-4be0-a6a5-929fcf904b12.4"}
{"source":"make a appointment tomorrow with my team at lunch time","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( Lunch ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(Tomorrow()),starts_at(Lunch())))","qid":"7c8fc548-d943-4883-bca2-2b1131d44759.4"}
{"source":"As soon as tomorrow 's conference is over I need to meet with Ted 's team .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Ted \" ) ) ) ) ) ) ) :start ( ?= ( :end ( singleton ( :results ( FindEventWrapperWithDefaults :constraint ( Constraint[Event] :subject ( ?~= # ( String \" conference \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=\" Ted \")),starts_at(:end(FindEvents(has_subject(\" conference \"))))))","qid":"5cc6e434-fe04-4149-8f49-4bf3582d2717.0"}
{"source":"Create a Starbucks for lunch and invite all the staff members","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :subject ( ?= # ( String \" Starbucks for lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),has_subject(\" Starbucks for lunch \")))","qid":"f72176d2-5634-4562-974c-cd6b347d6d64.1"}
{"source":"Please schedule a meeting for 1 pm with my entire team","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( NextTime :time ( NumberPM :number # ( Number 1 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(NextTime(time=NumberPM(1)))))","qid":"a3772036-dfc7-4ea3-a588-4b2636958241.9"}
{"source":"Make me a meeting with David lax , his boss , Elli , and her boss next week","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" David lax \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" David lax \" ) ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Elli \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Elli \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( NextWeekList ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Elli \")),with_attendee(\" Elli \"),with_attendee(\" David lax \"),with_attendee(FindManager(\" David lax \")),starts_at(NextWeekList())))","qid":"bd667849-51f1-438f-94b4-d68b7a7eada7.0"}
{"source":"My team needs an event","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindTeamOf(recipient=CurrentUser())))","qid":"f5babaeb-16e5-4706-b6f6-ddadfb564ed8.4"}
{"source":"Schedule a lunch event with Kim and her direct reports .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindReports :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim \" ) ) ) ) ) ) ) ) :subject ( ?= # ( String \" lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Kim \"),with_attendee(FindReports(recipient=refer(Recipient?(name=LIKE(Kim))))),has_subject(\" lunch \")))","qid":"2066fa48-af88-4f8b-80fc-e2869124e2f7.1"}
{"source":"I need put a meeting with susan and her team","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" susan \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" susan \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" susan \"),with_attendee(FindTeamOf(recipient=\" susan \"))))","qid":"10fc06c2-626f-4811-be0e-a30e3a887699.0"}
{"source":"Can you organize lunch with Bill and his boss ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Bill \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Bill \" ) ) ) ) ) ) ) ) :subject ( ?= # ( String \" lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Bill \"),with_attendee(FindManager(\" Bill \")),has_subject(\" lunch \")))","qid":"6d940fa8-757f-4dc1-993e-0c42aef45807.0"}
{"source":"I need to set up time to meet with Sarah , along with her boss and Alex , along with his boss .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Sarah \" ) ) ) ) ) ) ( andConstraint ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Sarah \" ) ) ) ) ) ) ) ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Alex \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Alex \" ) ) ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Sarah \"),with_attendee(FindManager(\" Sarah \")),with_attendee(\" Alex \"),with_attendee(FindManager(\" Alex \"))))","qid":"920aa161-a29e-42a2-b3af-33893da4c21d.0"}
{"source":"Make a plan with Emily 's manager on July 25 th at 1 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Emily \" ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( MD :day # ( Number 25 ) :month # ( Month \" JULY \" ) ) :time ( NumberPM :number # ( Number 1 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Emily \")),starts_at(MD(month=\" JULY \",day=25)),starts_at(NumberPM(1))))","qid":"9701ed44-8902-4537-a3ed-d4bec46310f8.4"}
{"source":"I need a Paint Ball Tournament added to my calendar with David Lax , his supervisor , Jake and his manager","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" David Lax \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" David Lax \" ) ) ) ) ) ) ) ) ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) ) ) ) :subject ( ?= # ( String \" Paint Ball Tournament \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" David Lax \"),with_attendee(FindManager(\" David Lax \")),with_attendee(\" Jake \"),with_attendee(FindManager(\" Jake \")),has_subject(\" Paint Ball Tournament \")))","qid":"02ee0b97-a922-4cfe-8ef1-2954415fbe5a.0"}
{"source":"I need a meeting with my reports","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindReports :recipient ( toRecipient ( CurrentUser ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindReports(recipient=CurrentUser())))","qid":"50d0d1e9-ce85-45fd-84f1-6f2ad555ba50.0"}
{"source":"Set up a lunch with my team Friday at noon .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( Noon ) ) ) :subject ( ?= # ( String \" lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),has_subject(\" lunch \"),starts_at(NextDOW(\" FRIDAY \")),starts_at(Noon())))","qid":"5dfee686-5065-432b-8b68-c58ec6e31492.3"}
{"source":"Sue 's team is meeting with me right after the sales evaluation .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Sue \" ) ) ) ) ) ) ) :start ( ?= ( :end ( singleton ( :results ( FindEventWrapperWithDefaults :constraint ( Constraint[Event] :subject ( ?~= # ( String \" sales evaluation \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=\" Sue \")),starts_at(:end(FindEvents(has_subject(\" sales evaluation \"))))))","qid":"c4b759e1-dda5-487e-b9e3-f52ea7760a09.0"}
{"source":"I need a meeting with Jesse Rosenfeld and their skip Monday first thing .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jesse Rosenfeld \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jesse Rosenfeld \" ) ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jesse Rosenfeld \"),with_attendee(FindManager(FindManager(\" Jesse Rosenfeld \"))),starts_at(NextDOW(\" MONDAY \"))))","qid":"08705eda-ffbc-4afb-b788-a67fe878b906.0"}
{"source":"I have to meet with my team Monday morning .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( DateTimeConstraint :constraint ( Morning ) :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(Morning()),starts_at(NextDOW(\" MONDAY \"))))","qid":"51080229-4823-4c45-abbf-61ee83d49c8b.1"}
{"source":"Schedule dinner with Sue 's boss tomorrow at 6 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Sue \" ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 6 ) ) ) ) :subject ( ?= # ( String \" dinner \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Sue \")),has_subject(\" dinner \"),starts_at(Tomorrow()),starts_at(NumberPM(6))))","qid":"70772c71-f848-4274-bd61-c9754f3d7fcd.0"}
{"source":"Invite Kylian , Kane and their managers to Auba 's birthday party tomorrow .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kylian \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kylian \" ) ) ) ) ) ) ) ) ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kane \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kane \" ) ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) :subject ( ?= # ( String \" Auba's birthday party \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Kylian \"),with_attendee(FindManager(\" Kylian \")),with_attendee(\" Kane \"),with_attendee(FindManager(\" Kane \")),has_subject(\" Auba's birthday party \"),starts_at(Tomorrow())))","qid":"cc994e8f-7508-479f-8422-9620dd662969.2"}
{"source":"OK , now , I need an appointment with Chris and his manager for next week .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Chris \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Chris \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( NextWeekList ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Chris \"),with_attendee(FindManager(\" Chris \")),starts_at(NextWeekList())))","qid":"f2e36429-c94e-4ae1-9986-63ddd628ddd8.2"}
{"source":"Okay create an event with David 's team for next Friday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" David \" ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=\" David \")),starts_at(NextDOW(\" FRIDAY \"))))","qid":"24e3057b-a880-4373-bba1-778b37d54a63.4"}
{"source":"Add a lunch with karen 's boss to my calendar for Tuesday at noon","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" karen \" ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) :time ( Noon ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" karen \")),starts_at(NextDOW(\" TUESDAY \")),starts_at(Noon())))","qid":"30914265-ac1a-45b8-a72e-97fd71ca1def.4"}
{"source":"Set a meeting with Steve 's manager tomorrow","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Steve \" ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Steve \")),starts_at(Tomorrow())))","qid":"0b77d0c0-f05e-4fa8-abe7-4047ffe5eb1f.1"}
{"source":"I need to meet with Karen 's team after the operations meeting","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Karen \" ) ) ) ) ) ) ) :start ( ?= ( :end ( singleton ( :results ( FindEventWrapperWithDefaults :constraint ( Constraint[Event] :subject ( ?~= # ( String \" operations meeting \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=\" Karen \")),starts_at(:end(FindEvents(has_subject(\" operations meeting \"))))))","qid":"b00b4447-caa8-4316-b715-8ac031de8726.4"}
{"source":"Schedule a lunch with noelle and her manager tomorrow at 12","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" noelle \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" noelle \" ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 12 ) ) ) ) :subject ( ?= # ( String \" lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" noelle \"),with_attendee(FindManager(\" noelle \")),has_subject(\" lunch \"),starts_at(Tomorrow()),starts_at(NumberPM(12))))","qid":"1a6e6e14-9a53-4f75-848e-05a020cb427f.0"}
{"source":"Great ! I also need a meeting with Jack 's manager tomorrow at 11 : 30 am .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jack \" ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( HourMinuteAm :hours # ( Number 11 ) :minutes # ( Number 30.0 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Jack \")),starts_at(Tomorrow()),starts_at(HourMinuteAm(hours=11,minutes=30))))","qid":"90bb6fab-a790-40f8-8ca6-a89f33f1d99b.2"}
{"source":"I am going to be with Abby and Abby 's Boss tomorrow all day","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ) ) :nonEmptyBase ( EventAllDayOnDate :date ( Tomorrow ) :event ( Constraint[Event] ) ) ) ) ) )","target":"CreateEvent(AND(spans_time(Tomorrow()),with_attendee(\" Abby \"),with_attendee(FindManager(\" Abby \"))))","qid":"459a3ea1-3f5c-4631-b39d-b54ec3133ab9.4"}
{"source":"Schedule a time to meet with my boss next week on Tuesday if possible .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( DowOfWeekNew :dow # ( DayOfWeek \" TUESDAY \" ) :week ( NextWeekList ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),starts_at(DowOfWeekNew(dow=DayOfWeek(\" TUESDAY \"),week=NextWeekList()))))","qid":"28bb29d5-fc6e-4974-b079-1f1599a42503.0"}
{"source":"I need to meet with Sam 's manager tomorrow","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Sam \" ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Sam \")),starts_at(Tomorrow())))","qid":"23208329-0227-48fc-bbfb-994a617b220a.2"}
{"source":"Can you put a lunch with Malcolm and his manager on Monday ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Malcolm \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Malcolm \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) ) ) :subject ( ?= # ( String \" lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Malcolm \"),with_attendee(FindManager(\" Malcolm \")),has_subject(\" lunch \"),starts_at(NextDOW(\" MONDAY \"))))","qid":"c91e0d13-2321-4184-9e19-662e29a08a2d.2"}
{"source":"Can you schedule an appointment for Thursday at 4 with Matt and his supervisor ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Matt \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Matt \" ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" THURSDAY \" ) ) :time ( NumberPM :number # ( Number 4 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Matt \"),with_attendee(FindManager(\" Matt \")),starts_at(NextDOW(\" THURSDAY \")),starts_at(NumberPM(4))))","qid":"246a1416-593c-417f-89cd-664601f80dba.0"}
{"source":"I need to schedule meeting with Snow 's boss this Monday at 10 am .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Snow \" ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :time ( NumberAM :number # ( Number 10.0 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Snow \")),starts_at(NextDOW(\" MONDAY \")),starts_at(NumberAM(10))))","qid":"f8b6c9d1-012a-4bab-ad22-5b5f3f5b2f6f.4"}
{"source":"create a new breakfast meeting on Friday with Jesse 's manager","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jesse \" ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) ) ) :subject ( ?= # ( String \" breakfast meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Jesse \")),has_subject(\" breakfast meeting \"),starts_at(NextDOW(\" FRIDAY \"))))","qid":"ec21a918-4810-42a2-afa3-cd57bf99c2e2.3"}
{"source":"After my dentist appointment , slot in a meeting with Rob 's team .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Rob \" ) ) ) ) ) ) ) :start ( ?= ( :end ( singleton ( :results ( FindEventWrapperWithDefaults :constraint ( Constraint[Event] :subject ( ?~= # ( String \" dentist appointment \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=\" Rob \")),starts_at(:end(FindEvents(has_subject(\" dentist appointment \"))))))","qid":"f064aa7d-ad20-4d67-80d1-e0967d1ef00d.0"}
{"source":"Schedule a lunch with Dave and his manager for tomorrow","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Dave \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Dave \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) :subject ( ?= # ( String \" lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Dave \"),with_attendee(FindManager(\" Dave \")),has_subject(\" lunch \"),starts_at(Tomorrow())))","qid":"3c126103-d221-4225-8842-509b0e8b77f8.1"}
{"source":"I need a meeting with Kim and her reports as soon as possible .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindReports :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim \" ) ) ) ) ) ) ) ) :start ( ?= ( Now ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Kim \"),with_attendee(FindReports(recipient=refer(Recipient?(name=LIKE(Kim))))),starts_at(Now())))","qid":"044bc844-b084-4216-bd7d-50fe3d01b843.3"}
{"source":"Ok , can you add a meeting with Tara 's manager at 1 pm on the 30 th ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Tara \" ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( nextDayOfMonth ( Today ) # ( Number 30.0 ) ) :time ( NumberPM :number # ( Number 1 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Tara \")),starts_at(nextDayOfMonth(Today(),30)),starts_at(NumberPM(1))))","qid":"42b941e3-7e29-4673-bf93-862f96961747.1"}
{"source":"lunch for lisa and manager","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" lisa \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" lisa \" ) ) ) ) ) ) ) ) :subject ( ?= # ( String \" lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" lisa \"),with_attendee(FindManager(\" lisa \")),has_subject(\" lunch \")))","qid":"0bb55730-4a57-453e-b258-2a0558dbac59.0"}
{"source":"I want to make an event with Patty and her boss for tomorrow night .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Patty \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Patty \" ) ) ) ) ) ) ) ) :start ( DateTimeConstraint :constraint ( Night ) :date ( Tomorrow ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Patty \"),with_attendee(FindManager(\" Patty \")),starts_at(Night()),starts_at(Tomorrow())))","qid":"fd23bc97-5af9-478a-b1bc-3fdb18420d59.1"}
{"source":"I need to meet with Will 's supervisor","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Will \" ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindManager(\" Will \")))","qid":"9d57fa77-8654-4b26-bfa4-fd2755de2b26.0"}
{"source":"I need a meeting with Jake and his boss","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jake \"),with_attendee(FindManager(\" Jake \"))))","qid":"c245d619-0495-475b-9776-e7d48b8b2ea1.2"}
{"source":"Create a meeting with the reports of David Lax on saturday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindReports :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" David Lax \" ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" SATURDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindReports(recipient=refer(Recipient?(name=LIKE(David Lax))))),starts_at(NextDOW(\" SATURDAY \"))))","qid":"ea0f3894-202d-49e0-b518-03d37d9a0c76.0"}
{"source":"I need to meet with James ' boss Thursday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" James \" ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" THURSDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" James \")),starts_at(NextDOW(\" THURSDAY \"))))","qid":"5f4addc9-f868-4f10-a846-3da836180571.0"}
{"source":"create a meeting with my team on Tuesday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(NextDOW(\" TUESDAY \"))))","qid":"11adb559-6362-4f85-b34f-9c54a1ef42ff.0"}
{"source":"create meeting with coworkers on monday at 7","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :time ( NumberPM :number # ( Number 7 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(NextDOW(\" MONDAY \")),starts_at(NumberPM(7))))","qid":"62f23a34-89a7-478f-ba0c-d770e545c503.0"}
{"source":"Set an appointment for friday at 3 pm for a meeting with Kim and her boss and Jared and his manager .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim \" ) ) ) ) ) ) ) ) ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jared \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jared \" ) ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( NumberPM :number # ( Number 3 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Kim \"),with_attendee(FindManager(\" Kim \")),with_attendee(\" Jared \"),with_attendee(FindManager(\" Jared \")),starts_at(NextDOW(\" FRIDAY \")),starts_at(NumberPM(3))))","qid":"b8fba823-de55-4080-93e1-7961034e1086.0"}
{"source":"I 've got to set up a time with my team tomorrow .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(Tomorrow())))","qid":"a9c20323-c875-4aa7-9b1c-9b6b5cc8b53b.4"}
{"source":"Set up a meeting with Liz 's and her team","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Liz \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Liz \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Liz \"),with_attendee(FindTeamOf(recipient=\" Liz \"))))","qid":"89a65095-4068-45f7-a463-08de62f44f1d.0"}
{"source":"yes , then could you make an meeting with Jake and his manager with Dan Marton and his manager ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) ( andConstraint ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) ) ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Dan Marton \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Dan Marton \" ) ) ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jake \"),with_attendee(FindManager(\" Jake \")),with_attendee(\" Dan Marton \"),with_attendee(FindManager(\" Dan Marton \"))))","qid":"31eff775-7b2e-4acf-9874-7af560eccbce.2"}
{"source":"Set up a talk with Abby and his manager for Tuesday afternoon .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ) ) :start ( DateTimeConstraint :constraint ( Afternoon ) :date ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) ) :subject ( ?= # ( String \" talk \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Abby \"),with_attendee(FindManager(\" Abby \")),has_subject(\" talk \"),starts_at(Afternoon()),starts_at(NextDOW(\" TUESDAY \"))))","qid":"c2a55720-76c0-49c3-825a-b2de0d1801c0.3"}
{"source":"Put meeting with team tomorrow .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(Tomorrow())))","qid":"d94530f7-f652-45fc-9c4d-b57d0e184086.1"}
{"source":"I will be meeting my coworkers at Dorsia tomorrow at 8 .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :location ( ?= # ( LocationKeyphrase \" Dorsia \" ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberAM :number # ( Number 8 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),at_location(\" Dorsia \"),starts_at(Tomorrow()),starts_at(NumberAM(8))))","qid":"f8893bfd-ef71-4c9e-9307-17069292795d.2"}
{"source":"I 'm going to the mall with Jake and his boss tomorrow","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) :subject ( ?= # ( String \" going to the mall \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jake \"),with_attendee(FindManager(\" Jake \")),has_subject(\" going to the mall \"),starts_at(Tomorrow())))","qid":"e8147f1a-3833-4943-9e6d-4edf4edceace.3"}
{"source":"schedule the lunch with boss on june 6","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( MD :day # ( Number 6 ) :month # ( Month \" JUNE \" ) ) ) ) :subject ( ?= # ( String \" lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),has_subject(\" lunch \"),starts_at(MD(month=\" JUNE \",day=6))))","qid":"ad9d6eca-1ffd-4c2e-af1c-7953fd9b339b.0"}
{"source":"Put a time for Jake and his manager to come Wednesday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" WEDNESDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jake \"),with_attendee(FindManager(\" Jake \")),starts_at(NextDOW(\" WEDNESDAY \"))))","qid":"9f03add2-234d-4c63-a36f-d4b30a29eefa.4"}
{"source":"Create an event with caro and their boss next week on friday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" caro \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" caro \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( DowOfWeekNew :dow # ( DayOfWeek \" FRIDAY \" ) :week ( NextWeekList ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" caro \"),with_attendee(FindManager(\" caro \")),starts_at(DowOfWeekNew(dow=DayOfWeek(\" FRIDAY \"),week=NextWeekList()))))","qid":"59f02d1d-6343-4e04-8218-61bb006c7d2c.2"}
{"source":"Abby and her boss starting tomorrow at 1","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 1 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Abby \"),with_attendee(FindManager(\" Abby \")),starts_at(Tomorrow()),starts_at(NumberPM(1))))","qid":"e99b2ee5-d58b-472a-8fee-5f12150b9ad0.2"}
{"source":"Please create lunch with boss tomorrow at 11 am","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberAM :number # ( Number 11 ) ) ) ) :subject ( ?= # ( String \" lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),has_subject(\" lunch \"),starts_at(Tomorrow()),starts_at(NumberAM(11))))","qid":"9fc4a90d-ba31-4bab-b2b0-abc1d8c16c64.1"}
{"source":"I want to be with my team tonight","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( DateTimeConstraint :constraint ( Night ) :date ( Today ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(Night()),starts_at(Today())))","qid":"74fd0ad7-766f-48f7-a6d9-f7dcff5c308c.0"}
{"source":"I need to make appointment with Bill and Ted and their managers on Friday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Bill \" ) ) ) ) ) ) ( andConstraint ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Bill \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Ted \" ) ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Ted \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Ted \")),with_attendee(\" Bill \"),with_attendee(FindManager(\" Bill \")),with_attendee(\" Ted \"),starts_at(NextDOW(\" FRIDAY \"))))","qid":"5dfbd4c8-c451-4a0f-b331-6de92fdd4237.0"}
{"source":"Can you schedule a meeting with Elli 's Team ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Elli \" ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindTeamOf(recipient=\" Elli \")))","qid":"13631ba5-4d96-45d9-a9ff-11b0679a9c48.2"}
{"source":"Need to make a meeting with my supervisor and Claire asap","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Claire \" ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),with_attendee(\" Claire \")))","qid":"3756ed3e-9e03-4426-bee4-766afd8c9172.0"}
{"source":"set up a meeting with the crew members of Jesse 's leader","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jesse \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindTeamOf(recipient=FindManager(\" Jesse \"))))","qid":"36ace4e7-f88b-4967-ac7a-f22afd7ca66a.4"}
{"source":"Can you schedule breakfast with the reports for tomorrow ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindReports :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) :subject ( ?= # ( String \" breakfast \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindReports(recipient=CurrentUser())),has_subject(\" breakfast \"),starts_at(Tomorrow())))","qid":"cec5b280-efad-4fbb-82be-3d15b1330458.3"}
{"source":"Add a Lunch with Sara , Rosa , Johnny , Max and his manager ,","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Sara \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Rosa \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Johnny \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Max \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Max \" ) ) ) ) ) ) ) ) :subject ( ?= # ( String \" Lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Max \")),with_attendee(\" Max \"),with_attendee(\" Johnny \"),with_attendee(\" Sara \"),with_attendee(\" Rosa \"),has_subject(\" Lunch \")))","qid":"8cbc5022-88d0-48ca-94d5-a7e1e17370db.1"}
{"source":"Right after my coffee , I have to see Ray and his team .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Ray \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Ray \" ) ) ) ) ) ) ) ) :start ( ?= ( :end ( singleton ( :results ( FindEventWrapperWithDefaults :constraint ( Constraint[Event] :subject ( ?~= # ( String \" coffee \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Ray \"),with_attendee(FindTeamOf(recipient=\" Ray \")),starts_at(:end(FindEvents(has_subject(\" coffee \"))))))","qid":"acfab55f-9fa1-4169-8fc9-51da45a600bb.2"}
{"source":"Yes , add a meeting with Jake and his boss for tomorrow","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jake \"),with_attendee(FindManager(\" Jake \")),starts_at(Tomorrow())))","qid":"6b6489e8-1cb0-4944-b270-c9cce2ce0974.2"}
{"source":"Add dinner with mike and his boss tomorrow","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" mike \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" mike \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) :subject ( ?= # ( String \" dinner \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" mike \"),with_attendee(FindManager(\" mike \")),has_subject(\" dinner \"),starts_at(Tomorrow())))","qid":"49891ea3-8274-4b0e-bd18-cabd3e947c26.0"}
{"source":"Get me a meeting with my team","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindTeamOf(recipient=CurrentUser())))","qid":"d4db6fc7-9de7-4aeb-a41b-fd418c763c4a.0"}
{"source":"Schedule some time with my boss 4 hours from now .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( adjustByPeriodDuration ( Now ) ( PeriodDuration :duration ( toHours # ( Number 4 ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),starts_at(adjustByPeriodDuration(Now(),PeriodDuration(duration=toHours(4))))))","qid":"b797a21b-3040-49a2-aa48-000195803b6b.0"}
{"source":"I have a meeting with Veronica tomorrow . Who is her manager ?","original_target":"( do ( Yield :output ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Veronica \" ) ) ) ) ) ) ) ( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Veronica \" ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) ) ) ) ) )","target":"do(Yield(FindManager(\" Veronica \")),CreateEvent(AND(with_attendee(\" Veronica \"),starts_at(Tomorrow()))))","qid":"4c88ca0d-c6d0-493f-bbe6-b227430e7d6a.0"}
{"source":"I also need a prep for conference with noel and joel and their bosses before wednesday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" noel \" ) ) ) ) ) ) ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" joel \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" noel \" ) ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" joel \" ) ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( Constraint[Date] :dayOfWeek ( ?< # ( DayOfWeek \" WEDNESDAY \" ) ) ) ) :subject ( ?= # ( String \" prep for conference \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" noel \"),with_attendee(FindManager(\" joel \")),with_attendee(\" joel \"),with_attendee(FindManager(\" noel \")),has_subject(\" prep for conference \"),starts_at(Date?(dayOfWeek=LT(DayOfWeek(\" WEDNESDAY \"))))))","qid":"b58fb1c2-5858-4aea-9061-6f9218cffce2.1"}
{"source":"Schedule a budget meeting with John and his team on Tuesday afternoon .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" John \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" John \" ) ) ) ) ) ) ) ) :start ( DateTimeConstraint :constraint ( Afternoon ) :date ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) ) :subject ( ?= # ( String \" budget meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" John \"),with_attendee(FindTeamOf(recipient=\" John \")),has_subject(\" budget meeting \"),starts_at(Afternoon()),starts_at(NextDOW(\" TUESDAY \"))))","qid":"72e4aa03-7ebf-40b3-85f3-9f4d896c97b6.4"}
{"source":"Put Jake Cobb 's team for a meeting","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake Cobb \" ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindTeamOf(recipient=\" Jake Cobb \")))","qid":"d5a823b0-a1e2-480b-bf09-11e5051bd926.3"}
{"source":"create meeting with Jamies manager","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jamies \" ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindManager(\" Jamies \")))","qid":"3a47619a-023a-4743-aeab-604049f3b7b0.2"}
{"source":"schedule a meeting with my boss and Jesse and his boss","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jesse \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jesse \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Jesse \")),with_attendee(FindManager(CurrentUser())),with_attendee(\" Jesse \")))","qid":"20969fb1-db47-4282-957d-fbf74b3c50ba.1"}
{"source":"Please set up a meeting next week with the following people : Mary , her boss , James and his boss","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Mary \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Mary \" ) ) ) ) ) ) ) ) ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" James \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" James \" ) ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( NextWeekList ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Mary \"),with_attendee(FindManager(\" Mary \")),with_attendee(\" James \"),with_attendee(FindManager(\" James \")),starts_at(NextWeekList())))","qid":"fad08b6b-a76a-4259-a7d8-5dabf2c2113e.1"}
{"source":"Make an appointment with Brenda 's supervisor for tomorrow evening","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Brenda \" ) ) ) ) ) ) ) :start ( DateTimeConstraint :constraint ( Evening ) :date ( Tomorrow ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Brenda \")),starts_at(Evening()),starts_at(Tomorrow())))","qid":"31640b89-ddf7-42ef-b2d5-d0ba77700f37.2"}
{"source":"I will be with Abby and her skip tomorrow at 3 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 3 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Abby \"),with_attendee(FindManager(FindManager(\" Abby \"))),starts_at(Tomorrow()),starts_at(NumberPM(3))))","qid":"2d115525-6696-4ec0-a6f3-29f73a22200a.3"}
{"source":"I have a Deep Sea Fishing Event with Karl and his boss on Friday at 3 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Karl \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Karl \" ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( NumberPM :number # ( Number 3 ) ) ) ) :subject ( ?= # ( String \" Deep Sea Fishing \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Karl \"),with_attendee(FindManager(\" Karl \")),has_subject(\" Deep Sea Fishing \"),starts_at(NextDOW(\" FRIDAY \")),starts_at(NumberPM(3))))","qid":"73ee3c91-d726-422c-b8f8-e119651b9a75.4"}
{"source":"Add a meeting with my boss","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindManager(CurrentUser())))","qid":"ae7b49e0-4930-45e5-bb7c-b29e2889b1f8.2"}
{"source":"Can you make a meeting with Abby and her team ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Abby \"),with_attendee(FindTeamOf(recipient=\" Abby \"))))","qid":"36ace4e7-f88b-4967-ac7a-f22afd7ca66a.1"}
{"source":"create meet and greet with boss on tuesday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) ) ) :subject ( ?= # ( String \" meet and greet \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),has_subject(\" meet and greet \"),starts_at(NextDOW(\" TUESDAY \"))))","qid":"b4332dce-5a60-47be-9763-dd185dc2a411.0"}
{"source":"Gather my team for the pitch meeting next year .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( FullYearofYear :year ( NextYear ) ) ) :subject ( ?= # ( String \" pitch meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),has_subject(\" pitch meeting \"),starts_at(FullYearofYear(NextYear()))))","qid":"fceb4fa5-a82f-4683-a017-08abaf715294.3"}
{"source":"Set up Short Meeting with Sonya and her manager .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Sonya \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Sonya \" ) ) ) ) ) ) ) ) :subject ( ?= # ( String \" Short Meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Sonya \"),with_attendee(FindManager(\" Sonya \")),has_subject(\" Short Meeting \")))","qid":"77b93200-f031-4f45-ada1-767dea5717e9.1"}
{"source":"Make me a meeting with Jennifer , her boss , Elli , and his boss","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jennifer \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jennifer \" ) ) ) ) ) ) ) ) ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Elli \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Elli \" ) ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jennifer \"),with_attendee(FindManager(\" Jennifer \")),with_attendee(\" Elli \"),with_attendee(FindManager(\" Elli \"))))","qid":"fad08b6b-a76a-4259-a7d8-5dabf2c2113e.0"}
{"source":"I will be in NewYork tomorrow with my Team and Crim","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Crim \" ) ) ) ) ) ) ) :location ( ?= # ( LocationKeyphrase \" NewYork \" ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),with_attendee(\" Crim \"),at_location(\" NewYork \"),starts_at(Tomorrow())))","qid":"82eedd12-f12c-4919-afb2-56e424095f9a.0"}
{"source":"Just set a meeting with David Lax and his team for next Thursday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" David Lax \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" David Lax \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" THURSDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" David Lax \"),with_attendee(FindTeamOf(recipient=\" David Lax \")),starts_at(NextDOW(\" THURSDAY \"))))","qid":"96244c1d-75bf-4f72-91db-91498cdc4500.3"}
{"source":"Can you set up a dinner date with Karina and her team for Friday ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Karina \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Karina \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) ) ) :subject ( ?= # ( String \" dinner date \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Karina \"),with_attendee(FindTeamOf(recipient=\" Karina \")),has_subject(\" dinner date \"),starts_at(NextDOW(\" FRIDAY \"))))","qid":"10fc06c2-626f-4811-be0e-a30e3a887699.4"}
{"source":"Check and see if my team is available for a 2-day conference starting on Thursday . Thanks !","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( EventAllDayStartingDateForPeriod :event ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :subject ( ?= # ( String \" conference \" ) ) ) :period ( toDays # ( Number 2 ) ) :startDate ( NextDOW :dow # ( DayOfWeek \" THURSDAY \" ) ) ) ) ) )","target":"CreateEvent(AND(has_duration(toDays(2)),starts_at(NextDOW(\" THURSDAY \")),starts_at(Time(hour=0,minute=0)),with_attendee(FindTeamOf(recipient=CurrentUser())),has_subject(\" conference \")))","qid":"5da058cf-53ea-4355-a841-2ee1dcea5125.0"}
{"source":"Hey make a meeting with my team but exclude Kim .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) ( AttendeeListExcludesRecipient :recipient ( ?= ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),avoid_attendee(refer(Recipient?(name=LIKE(Kim))))))","qid":"eb3ea4b2-b5b6-416a-86e5-08981c2f8df4.0"}
{"source":"I need to meet with Kim Possible 's team .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim Possible \" ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindTeamOf(recipient=\" Kim Possible \")))","qid":"b34dbf82-dc9d-4995-a581-2b2b684030f7.2"}
{"source":"Chris and his boss need to meet with me to discuss the merger on Friday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Chris \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Chris \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) ) ) :subject ( ?= # ( String \" discuss the merger \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Chris \"),with_attendee(FindManager(\" Chris \")),has_subject(\" discuss the merger \"),starts_at(NextDOW(\" FRIDAY \"))))","qid":"9a410ab6-dea6-4a38-a837-b93f27111d55.3"}
