{"source":"Schedule a meeting with Elli and her manager 's boss tomorrow morning .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Elli \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Elli \" ) ) ) ) ) ) ) ) ) :start ( DateTimeConstraint :constraint ( Morning ) :date ( Tomorrow ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Elli \"),with_attendee(FindManager(FindManager(\" Elli \"))),starts_at(Morning()),starts_at(Tomorrow())))","qid":"a13ffcd8-86a3-46f0-aeef-4c7f43620152.4"}
{"source":"create work drinks after meeting with boss","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( :end ( singleton ( :results ( FindEventWrapperWithDefaults :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) ) ) ) ) ) ) :subject ( ?= # ( String \" work drinks \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" work drinks \"),starts_at(:end(FindEvents(with_attendee(FindManager(CurrentUser())))))))","qid":"84a9c27c-5388-4d72-b23d-a8d97a6e3696.0"}
{"source":"schedule a brainstorming session with Dan Schoffel 's team .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Dan Schoffel \" ) ) ) ) ) ) ) :subject ( ?= # ( String \" brainstorming session \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=\" Dan Schoffel \")),has_subject(\" brainstorming session \")))","qid":"056eaabb-bd84-4d55-b9ff-a93ae8b927b1.1"}
{"source":"Add a meeting with Jim and his manager for tomorrow","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jim \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jim \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jim \"),with_attendee(FindManager(\" Jim \")),starts_at(Tomorrow())))","qid":"a031ae03-b1f1-447f-89d9-75b1efe795ce.4"}
{"source":"I must go to a meeting with Chidi and his supervisor tomorrow","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Chidi \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Chidi \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Chidi \"),with_attendee(FindManager(\" Chidi \")),starts_at(Tomorrow())))","qid":"dbcd1ee7-4264-4091-953f-3014d23c7fba.0"}
{"source":"Create meeting with boss for Monday at 2 pm to 3 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :end ( ?= ( TimeAfterDateTime :dateTime ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :time ( NumberPM :number # ( Number 2 ) ) ) :time ( NumberPM :number # ( Number 3 ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :time ( NumberPM :number # ( Number 2 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(ends_at(AND(GE(DateTime?(date=NextDOW(\" MONDAY \"),time=NumberPM(2))),NumberPM(3))),with_attendee(FindManager(CurrentUser())),starts_at(NextDOW(\" MONDAY \")),starts_at(NumberPM(2))))","qid":"fe78a5a2-5fc9-472a-acff-e2e4a39a3d4c.0"}
{"source":"Also on Wednesday , include a Brunch with Office Staff from 11 am to 12 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindReports :recipient ( toRecipient ( CurrentUser ) ) ) ) :end ( ?= ( TimeAfterDateTime :dateTime ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" WEDNESDAY \" ) ) :time ( NumberAM :number # ( Number 11 ) ) ) :time ( NumberPM :number # ( Number 12 ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" WEDNESDAY \" ) ) :time ( NumberAM :number # ( Number 11 ) ) ) ) :subject ( ?= # ( String \" Brunch \" ) ) ) ) ) )","target":"CreateEvent(AND(ends_at(AND(GE(DateTime?(date=NextDOW(\" WEDNESDAY \"),time=NumberAM(11))),NumberPM(12))),with_attendee(FindReports(recipient=CurrentUser())),has_subject(\" Brunch \"),starts_at(NextDOW(\" WEDNESDAY \")),starts_at(NumberAM(11))))","qid":"0950f1ad-52a1-42e0-aa2d-b79ca9fb0574.2"}
{"source":"I need a different meeting with my team tomorrow","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(Tomorrow())))","qid":"f5a7a082-7088-4da4-a462-6c3684decdf5.3"}
{"source":"My meeting with my team takes place on Friday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(NextDOW(\" FRIDAY \"))))","qid":"52e45f8f-a3d8-44af-98a6-aae77500ffd9.2"}
{"source":"Make a meeting with my team tomorrow","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(Tomorrow())))","qid":"5f879bdd-2515-410c-9c15-2a49f943969c.0"}
{"source":"Add on a happy hour with Megan 's team after the sales pitch coming up .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Megan \" ) ) ) ) ) ) ) :start ( ?= ( :end ( singleton ( :results ( FindEventWrapperWithDefaults :constraint ( Constraint[Event] :subject ( ?~= # ( String \" sales pitch \" ) ) ) ) ) ) ) ) :subject ( ?= # ( String \" happy hour \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=\" Megan \")),has_subject(\" happy hour \"),starts_at(:end(FindEvents(has_subject(\" sales pitch \"))))))","qid":"a9d61173-76fa-45e5-8a0a-ea4aa814c519.2"}
{"source":"Create meeting with Mark 's manager and set it for 1 PM tomorrow .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Mark \" ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 1 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Mark \")),starts_at(Tomorrow()),starts_at(NumberPM(1))))","qid":"d666ffeb-184e-462e-8448-9b9af0f269ed.2"}
{"source":"Please schedule Tuesday morning meeting with my team .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( DateTimeConstraint :constraint ( Morning ) :date ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(Morning()),starts_at(NextDOW(\" TUESDAY \"))))","qid":"c4fe17a4-501b-46a5-b93c-8bfd59ea5378.4"}
{"source":"I need to set up a new event with Chelsea 's manager .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Chelsea \" ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindManager(\" Chelsea \")))","qid":"d0452d16-452f-415b-9a5b-e713a904c495.4"}
{"source":"Let 's start over . Add a meeting with boss tomorrow at 1 : 30 .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( HourMinutePm :hours # ( Number 1 ) :minutes # ( Number 30.0 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),starts_at(Tomorrow()),starts_at(HourMinutePm(hours=1,minutes=30))))","qid":"840132fa-6459-4e24-b860-122fbc71348a.2"}
{"source":"Make a luncheon with my team","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :subject ( ?= # ( String \" luncheon \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),has_subject(\" luncheon \")))","qid":"c9de5458-e969-409f-97f5-c5bc19e59463.3"}
{"source":"make table tennis match with Elli , Jesse and both of their bosses .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Elli \" ) ) ) ) ) ) ( andConstraint ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Elli \" ) ) ) ) ) ) ) ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jesse \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jesse \" ) ) ) ) ) ) ) ) ) ) :subject ( ?= # ( String \" table tennis match \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Elli \"),with_attendee(FindManager(\" Elli \")),with_attendee(\" Jesse \"),with_attendee(FindManager(\" Jesse \")),has_subject(\" table tennis match \")))","qid":"d64b9bb5-2a71-4eb4-8f3c-5d2be35dda1e.2"}
{"source":"Let 's meet with Kim 's team after the luncheon tomorrow .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim \" ) ) ) ) ) ) ) :start ( ?= ( :end ( singleton ( :results ( FindEventWrapperWithDefaults :constraint ( EventOnDate :date ( Tomorrow ) :event ( Constraint[Event] :subject ( ?~= # ( String \" luncheon \" ) ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=\" Kim \")),starts_at(:end(FindEvents(AND(starts_at(Tomorrow()),has_subject(\" luncheon \")))))))","qid":"5cc6e434-fe04-4149-8f49-4bf3582d2717.4"}
{"source":"Schedule a meeting with Kim 's reports .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindReports :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim \" ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindReports(recipient=refer(Recipient?(name=LIKE(Kim))))))","qid":"955808ca-9399-49d1-948d-1ca4947bf755.2"}
{"source":"put meeting with ben 's manager at aug 24","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" ben \" ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( MD :day # ( Number 24 ) :month # ( Month \" AUGUST \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" ben \")),starts_at(MD(month=\" AUGUST \",day=24))))","qid":"0ac7d913-9bda-4ef1-a37f-3ed4f1a8c595.1"}
{"source":"Great ! Also schedule a meeting with Andre 's Manager tomorrow at 10 : 45 am .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Andre \" ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( HourMinuteAm :hours # ( Number 10.0 ) :minutes # ( Number 45 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Andre \")),starts_at(Tomorrow()),starts_at(HourMinuteAm(hours=10,minutes=45))))","qid":"43e63dad-fa38-4dc2-b5d0-fbc6f996ed95.5"}
{"source":"Schedule the finance meeting with Johnny 's team and Eric .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Johnny \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Eric \" ) ) ) ) ) ) ) :subject ( ?= # ( String \" finance meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=\" Johnny \")),with_attendee(\" Eric \"),has_subject(\" finance meeting \")))","qid":"f118d41f-0f80-4ece-baa9-e80cfb1d872d.0"}
{"source":"i need to meet with Elli , her boss , her bosses boss and kim","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Elli \" ) ) ) ) ) ) ( andConstraint ( AttendeeListHasRecipient :recipient ( FindManager :recipient x0 ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( FindManager :recipient x0 ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" kim \" ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" kim \"),with_attendee(\" Elli \"),with_attendee(FindManager($x0)),with_attendee(FindManager(FindManager($x0)))))","qid":"34e953d4-4052-4881-b91a-1c8fa83ec8c9.1"}
{"source":"Can you add an event to meet with Kim and her team next Friday ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Kim \"),with_attendee(FindTeamOf(recipient=\" Kim \")),starts_at(NextDOW(\" FRIDAY \"))))","qid":"9b22e669-378b-49f2-8990-c194fc662bf0.2"}
{"source":"Schedule the talk with Kant 's Manager at 4 .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kant \" ) ) ) ) ) ) ) :start ( ?= ( NextTime :time ( NumberPM :number # ( Number 4 ) ) ) ) :subject ( ?= # ( String \" talk \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Kant \")),has_subject(\" talk \"),starts_at(NextTime(time=NumberPM(4)))))","qid":"9d29a0d8-2fbd-41af-8534-7a25066f9b48.2"}
{"source":"Schedule a working lunch tomorrow , with my team but exclude Abby","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) ( AttendeeListExcludesRecipient :recipient ( ?= ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) :subject ( ?= # ( String \" working lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),avoid_attendee(refer(Recipient?(name=LIKE(Abby)))),has_subject(\" working lunch \"),starts_at(Tomorrow())))","qid":"ed25e913-8cc2-4c1a-85cf-9a68ec5c4576.1"}
{"source":"Invite Kristin 's team to a meeting after the conference","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kristin \" ) ) ) ) ) ) ) :start ( ?= ( :end ( singleton ( :results ( FindEventWrapperWithDefaults :constraint ( Constraint[Event] :subject ( ?~= # ( String \" conference \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=\" Kristin \")),starts_at(:end(FindEvents(has_subject(\" conference \"))))))","qid":"288ad522-1ad4-4c7a-bd04-a380a9021671.0"}
{"source":"Make an event for meeting with Abby and her boss tomorrow morning .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ) ) :start ( DateTimeConstraint :constraint ( Morning ) :date ( Tomorrow ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Abby \"),with_attendee(FindManager(\" Abby \")),starts_at(Morning()),starts_at(Tomorrow())))","qid":"e272673a-bd47-4d7e-a59e-706efc147ba9.1"}
{"source":"I want to meet with Rob 's boss at 8 pm today .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Rob \" ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Today ) :time ( NumberPM :number # ( Number 8 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Rob \")),starts_at(Today()),starts_at(NumberPM(8))))","qid":"9e09c9b4-ab1b-4d7e-9a7c-c9b00f92ef6b.0"}
{"source":"After the lunch meeting , invite Mary 's team to plan the budget .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Mary \" ) ) ) ) ) ) ) :start ( ?= ( :end ( singleton ( :results ( FindEventWrapperWithDefaults :constraint ( Constraint[Event] :subject ( ?~= # ( String \" lunch meeting \" ) ) ) ) ) ) ) ) :subject ( ?= # ( String \" plan the budget \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=\" Mary \")),has_subject(\" plan the budget \"),starts_at(:end(FindEvents(has_subject(\" lunch meeting \"))))))","qid":"4f03d051-782e-4f8c-aa05-e83adcb03260.2"}
{"source":"Make a lunch meeting with Kim and her reports .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindReports :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim \" ) ) ) ) ) ) ) ) :subject ( ?= # ( String \" lunch meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Kim \"),with_attendee(FindReports(recipient=refer(Recipient?(name=LIKE(Kim))))),has_subject(\" lunch meeting \")))","qid":"b9636373-cfb2-45bf-b946-dc0fb9712e1b.1"}
{"source":"Please update another event for tomorrow . I have a meeting with my supervisor .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),starts_at(Tomorrow())))","qid":"ea2662f4-f452-4bf8-b72b-a3960fc20605.3"}
{"source":"I need a meet with heather and her boss at 3 p .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" heather \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" heather \" ) ) ) ) ) ) ) ) :start ( ?= ( NextTime :time ( NumberPM :number # ( Number 3 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" heather \"),with_attendee(FindManager(\" heather \")),starts_at(NextTime(time=NumberPM(3)))))","qid":"99ba8251-6a5f-4e92-ad9b-4296abaf5c69.0"}
{"source":"Add mike , his supervisor and nina and her supervisor to our team meeting on tuesday afternoon","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" mike \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" mike \" ) ) ) ) ) ) ) ) ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" nina \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" nina \" ) ) ) ) ) ) ) ) ) :start ( DateTimeConstraint :constraint ( Afternoon ) :date ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) ) :subject ( ?= # ( String \" team meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" mike \"),with_attendee(FindManager(\" mike \")),with_attendee(\" nina \"),with_attendee(FindManager(\" nina \")),has_subject(\" team meeting \"),starts_at(Afternoon()),starts_at(NextDOW(\" TUESDAY \"))))","qid":"d8e1f5e8-5a70-4b1e-a19d-80bbef65a1fe.1"}
{"source":"I wanna meet Mike 's boss at today 8 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Mike \" ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Today ) :time ( NumberPM :number # ( Number 8 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Mike \")),starts_at(Today()),starts_at(NumberPM(8))))","qid":"b941bd70-b722-4d63-86b3-ec8215c9facf.0"}
{"source":"Make me a meeting with Kim Possible , her manager , Elli , and her manager","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim Possible \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim Possible \" ) ) ) ) ) ) ) ) ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Elli \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Elli \" ) ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Kim Possible \"),with_attendee(FindManager(\" Kim Possible \")),with_attendee(\" Elli \"),with_attendee(FindManager(\" Elli \"))))","qid":"9f1187ab-fe96-4915-b9c3-08b5ce4afcbe.0"}
{"source":"Meeting with Tessa 's boss at 5 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Tessa \" ) ) ) ) ) ) ) :start ( ?= ( NextTime :time ( NumberPM :number # ( Number 5 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Tessa \")),starts_at(NextTime(time=NumberPM(5)))))","qid":"962344d2-1bc9-4b6c-aa37-3b3303d48669.0"}
{"source":"I need to schedule a finance meeting with Marty and his boss for Monday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Marty \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Marty \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) ) ) :subject ( ?= # ( String \" finance meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Marty \"),with_attendee(FindManager(\" Marty \")),has_subject(\" finance meeting \"),starts_at(NextDOW(\" MONDAY \"))))","qid":"a395acb9-22ad-4ae0-86e9-5319e01b5aa7.0"}
{"source":"I 'm going to see Abby and her boss tomorrow at 3 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 3 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Abby \"),with_attendee(FindManager(\" Abby \")),starts_at(Tomorrow()),starts_at(NumberPM(3))))","qid":"fe406153-5e5b-40cd-bb94-97c7d9532c3e.2"}
{"source":"Add a meeting with my supervisor at 1 : 30 tomorrow . Thanks","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( HourMinutePm :hours # ( Number 1 ) :minutes # ( Number 30.0 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),starts_at(Tomorrow()),starts_at(HourMinutePm(hours=1,minutes=30))))","qid":"3967e7b6-213f-476c-8dee-ae5e831315f8.4"}
{"source":"Add a from 1 : 00 pm to 2 : 00 pm with Jane 's manager","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jane \" ) ) ) ) ) ) ) :end ( ?= ( TimeAfterDateTime :dateTime ( NextTime :time ( NumberPM :number # ( Number 1 ) ) ) :time ( NumberPM :number # ( Number 2 ) ) ) ) :start ( ?= ( NextTime :time ( NumberPM :number # ( Number 1 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Jane \")),starts_at(NextTime(time=NumberPM(1))),ends_at(AND(GE(NextTime(time=NumberPM(1))),NumberPM(2)))))","qid":"da71c434-28d4-45d8-a08b-c970d4bb6b73.4"}
{"source":"Make a meeting with Jake and her boss tomorrow at 2 pm in Berlin","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) ) ) :location ( ?= # ( LocationKeyphrase \" Berlin \" ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 2 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jake \"),with_attendee(FindManager(\" Jake \")),at_location(\" Berlin \"),starts_at(Tomorrow()),starts_at(NumberPM(2))))","qid":"812c244d-7162-4f2d-b94d-8b12c080898d.0"}
{"source":"Hi , I need a meeting with Abby , Bob and both of their managers as well called company board meeting starting at 1 today .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ) ) ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Bob \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Bob \" ) ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Today ) :time ( NumberPM :number # ( Number 1 ) ) ) ) :subject ( ?= # ( String \" company board meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Abby \"),with_attendee(FindManager(\" Abby \")),with_attendee(\" Bob \"),with_attendee(FindManager(\" Bob \")),has_subject(\" company board meeting \"),starts_at(Today()),starts_at(NumberPM(1))))","qid":"8cbc5022-88d0-48ca-94d5-a7e1e17370db.0"}
{"source":"I need a room in Bellevue with my team","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :location ( andConstraint ( ?= # ( LocationKeyphrase \" Bellevue \" ) ) ( roomRequest ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),at_location(\" Bellevue \"),at_location(roomRequest())))","qid":"4ae2fe64-e408-4433-adc5-0e303ba91693.0"}
{"source":"Create a meeting with Danielle 's manager tomorrow morning at 9 a.m ..","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Danielle \" ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberAM :number # ( Number 9 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Danielle \")),starts_at(Tomorrow()),starts_at(NumberAM(9))))","qid":"357302c0-9e16-47bf-89c2-5f4f5795ac4c.0"}
{"source":"team meeting with Abby 's team","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ) :subject ( ?= # ( String \" team meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=\" Abby \")),has_subject(\" team meeting \")))","qid":"eb11fedd-0352-4fc9-8e8f-085fb7860b1d.2"}
{"source":"Can I have a meeting setup with Thomas 's manager ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Thomas \" ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindManager(\" Thomas \")))","qid":"8ecc5fd1-ad14-4708-9149-1f977c6035be.0"}
{"source":"Ok plan a time with Jake Cobb and his team","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake Cobb \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake Cobb \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jake Cobb \"),with_attendee(FindTeamOf(recipient=\" Jake Cobb \"))))","qid":"f1b95a5e-986c-456e-9521-2ff552de9e3c.4"}
{"source":"At 4 pm create a new meeting with My boss and his boss to go over the sales report","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) ) ) :start ( ?= ( NextTime :time ( NumberPM :number # ( Number 4 ) ) ) ) :subject ( ?= # ( String \" go over the sales report \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),with_attendee(FindManager(FindManager(CurrentUser()))),has_subject(\" go over the sales report \"),starts_at(NextTime(time=NumberPM(4)))))","qid":"1f2cb46c-33d3-4fe8-ac51-eca474176c20.0"}
{"source":"Schedule a meeting with the surbodinates earlier tomorrow morning","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindReports :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( DateTimeConstraint :constraint ( EarlyTimeRange :timeRange ( Morning ) ) :date ( Tomorrow ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindReports(recipient=CurrentUser())),starts_at(EarlyTimeRange(timeRange=Morning())),starts_at(Tomorrow())))","qid":"d8ec0f03-594a-4958-acfb-693cd3ac9066.0"}
{"source":"Set a meeting with Kim and her reports on Friday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindReports :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Kim \"),with_attendee(FindReports(recipient=refer(Recipient?(name=LIKE(Kim))))),starts_at(NextDOW(\" FRIDAY \"))))","qid":"9aea70ac-8aec-4ea7-b12f-d2e87da62425.0"}
{"source":"Schedule a conference with Jesse Rosenfeld and team","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jesse Rosenfeld \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jesse Rosenfeld \" ) ) ) ) ) ) ) ) :subject ( ?= # ( String \" conference \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jesse Rosenfeld \"),with_attendee(FindTeamOf(recipient=\" Jesse Rosenfeld \")),has_subject(\" conference \")))","qid":"2e681521-8d3f-498e-b3c7-440724a3f7bf.2"}
{"source":"Schedule a dinner with Mark and his supervisor on Friday at 6 : 00 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Mark \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Mark \" ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( NumberPM :number # ( Number 6 ) ) ) ) :subject ( ?= # ( String \" dinner \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Mark \"),with_attendee(FindManager(\" Mark \")),has_subject(\" dinner \"),starts_at(NextDOW(\" FRIDAY \")),starts_at(NumberPM(6))))","qid":"1bae2d42-1083-45a0-b6fd-a83c817096d5.3"}
{"source":"Find 30 minutes tomorrow to meet with Matt and his boss .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Matt \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Matt \" ) ) ) ) ) ) ) ) :duration ( ?= ( toMinutes # ( Number 30.0 ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Matt \"),with_attendee(FindManager(\" Matt \")),starts_at(Tomorrow()),has_duration(toMinutes(30))))","qid":"f1315944-1aee-4754-874d-b906c24e80f7.2"}
{"source":"Set up Manager 's Chat with Jessa 's manager for Tuesday at 1 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jessa \" ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) :time ( NumberPM :number # ( Number 1 ) ) ) ) :subject ( ?= # ( String \" Manager's Chat \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Jessa \")),has_subject(\" Manager's Chat \"),starts_at(NextDOW(\" TUESDAY \")),starts_at(NumberPM(1))))","qid":"9d57fa77-8654-4b26-bfa4-fd2755de2b26.2"}
{"source":"Schedule a meeting with David Lax 's reports on Tuesday at 3 : 00 PM .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindReports :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" David Lax \" ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) :time ( NumberPM :number # ( Number 3 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindReports(recipient=refer(Recipient?(name=LIKE(David Lax))))),starts_at(NextDOW(\" TUESDAY \")),starts_at(NumberPM(3))))","qid":"b48b5fa3-274c-491c-aa5f-d28832e1b4b6.2"}
{"source":"I need a meeting room with Chris and his team tomorrow morning","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Chris \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Chris \" ) ) ) ) ) ) ) ) :location ( roomRequest ) :start ( DateTimeConstraint :constraint ( Morning ) :date ( Tomorrow ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Chris \"),with_attendee(FindTeamOf(recipient=\" Chris \")),at_location(roomRequest()),starts_at(Morning()),starts_at(Tomorrow())))","qid":"4ff5eb80-b7a7-435b-a2dd-284e5e2ac1f5.2"}
{"source":"Add meeting at 14 : 30 with the boss","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( NextTime :time ( HourMinuteMilitary :hours # ( Number 14 ) :minutes # ( Number 30.0 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),starts_at(NextTime(time=HourMinuteMilitary(hours=14,minutes=30)))))","qid":"68f77d1a-7320-4821-ac9b-04e546801a0a.2"}
{"source":"ok please add event with abby gonano and her boss","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" abby gonano \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" abby gonano \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" abby gonano \"),with_attendee(FindManager(\" abby gonano \"))))","qid":"6be2a58f-2c43-4ff9-89e5-e2eb2be16f2a.3"}
{"source":"I need to set up a meeting with Tom and his supervisor for Monday after 1 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Tom \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Tom \" ) ) ) ) ) ) ) ) :start ( OnDateAfterTime :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :time ( NumberPM :number # ( Number 1 ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Tom \"),with_attendee(FindManager(\" Tom \")),starts_at(OnDateAfterTime(date=NextDOW(\" MONDAY \"),time=NumberPM(1)))))","qid":"4d621681-93a9-443f-9c8e-3d0c54eda53e.0"}
{"source":"have my whole team meet me tonight","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( DateTimeConstraint :constraint ( Night ) :date ( Today ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(Night()),starts_at(Today())))","qid":"a3884b2a-d512-497c-bd36-15a00b8d987b.5"}
{"source":"Schedule a meeting with John 's manager today .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" John \" ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Today ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" John \")),starts_at(Today())))","qid":"ad80cee5-d912-47d0-b9bc-0524b9cbfd94.2"}
{"source":"Can you add a dinner event with my direct reports ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindReports :recipient ( toRecipient ( CurrentUser ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindReports(recipient=CurrentUser())))","qid":"a91c92df-4d0a-43a0-80bd-5279138b2be1.3"}
{"source":"Great . I also need to schedule time with Bruce Wayne and his team .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Bruce Wayne \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Bruce Wayne \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Bruce Wayne \"),with_attendee(FindTeamOf(recipient=\" Bruce Wayne \"))))","qid":"fece679d-3b07-42d7-918d-4286effda20c.2"}
{"source":"Now put a lunch with Lisa and her team for negotiations","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Lisa \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Lisa \" ) ) ) ) ) ) ) ) :subject ( ?= # ( String \" lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Lisa \"),with_attendee(FindTeamOf(recipient=\" Lisa \")),has_subject(\" lunch \")))","qid":"f1922c66-3bc2-4a6a-a374-9c89d428093d.4"}
{"source":"put interview meet with office boss","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :subject ( ?= # ( String \" interview meet \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),has_subject(\" interview meet \")))","qid":"10d3ce92-b982-45db-aad1-2d14e412c216.2"}
{"source":"I need a budget review scheduled with Andy 's skip","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Andy \" ) ) ) ) ) ) ) ) :subject ( ?= # ( String \" budget review \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(FindManager(\" Andy \"))),has_subject(\" budget review \")))","qid":"8d313e2f-0757-4a24-ab5f-60a4ec7d3bf4.0"}
{"source":"Does Dan and his team have availability tomorrow ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Dan \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Dan \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Dan \"),with_attendee(FindTeamOf(recipient=\" Dan \")),starts_at(Tomorrow())))","qid":"a6dc9c04-140e-4a2f-a10b-95638fd2f1c3.2"}
{"source":"Create a meeting with my team for tomorrow","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(Tomorrow())))","qid":"ba18d738-d475-4383-8bac-ac5dfdf4b293.4"}
{"source":"Schedule a meeting with Abby 's boss today .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Today ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Abby \")),starts_at(Today())))","qid":"b20664b4-4b6c-4cc4-96d0-c1abd8c3f4c3.0"}
{"source":"Make an all day meeting with my team","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :isAllDay ( ?= # ( Boolean true ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),is_allDay()))","qid":"96ff207c-3eec-49f0-b066-b70377655d5d.0"}
{"source":"put meet with team","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindTeamOf(recipient=CurrentUser())))","qid":"b5646ed4-0711-4517-bb74-71c409e57c8d.0"}
{"source":"I need to see Aiden 's team after my dinner this Thursday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Aiden \" ) ) ) ) ) ) ) :start ( ?= ( :end ( singleton ( :results ( FindEventWrapperWithDefaults :constraint ( EventOnDate :date ( NextDOW :dow # ( DayOfWeek \" THURSDAY \" ) ) :event ( Constraint[Event] :subject ( ?~= # ( String \" dinner \" ) ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=\" Aiden \")),starts_at(:end(FindEvents(AND(starts_at(NextDOW(\" THURSDAY \")),has_subject(\" dinner \")))))))","qid":"11f76738-8e31-47e1-8639-ff33d3f6c3d7.2"}
{"source":"Make a lunch with Abby 's bosses boss","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ) ) :subject ( ?= # ( String \" lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(FindManager(\" Abby \"))),has_subject(\" lunch \")))","qid":"f6c5f14a-510f-4050-a394-8d6aca509339.0"}
{"source":"I want to meet with Brenda 's manager","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Brenda \" ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindManager(\" Brenda \")))","qid":"abb77696-4e22-4620-ba10-12d7b942ef78.0"}
{"source":"And schedule a casino night for the team some time this month","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( FullMonthofMonth :month ( :month ( Today ) ) ) ) :subject ( ?= # ( String \" casino night \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),has_subject(\" casino night \"),starts_at(FullMonthofMonth(:month(Today())))))","qid":"c13f5eeb-070b-4b4e-92c4-d020d8079e6c.2"}
{"source":"Great . I want to make a new conference call with Amanda and her manager this week .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Amanda \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Amanda \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ThisWeek ) ) :subject ( ?= # ( String \" conference call \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Amanda \"),with_attendee(FindManager(\" Amanda \")),has_subject(\" conference call \"),starts_at(ThisWeek())))","qid":"9c8ea702-5301-4cb0-8155-c3125a5e5e16.4"}
{"source":"Also set up a call with David Lax 's team","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" David Lax \" ) ) ) ) ) ) ) :subject ( ?= # ( String \" call \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=\" David Lax \")),has_subject(\" call \")))","qid":"de1670ac-b183-4b1a-9750-376cae725d1a.2"}
{"source":"I also need a meeting with ken 's manager","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" ken \" ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindManager(\" ken \")))","qid":"7fedb6c3-00ff-45db-aae5-f722474ebff6.3"}
{"source":"Hmm then lets make a meeting with my Team then for this Friday around noon .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( DateTimeConstraint :constraint ( TimeAround :time ( Noon ) ) :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(TimeAround(Noon())),starts_at(NextDOW(\" FRIDAY \"))))","qid":"c0d0fa7c-55fb-488c-b504-e2d6fee9e228.2"}
{"source":"I need to schedule a meeting with Erin and her boss on Tuesday morning .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Erin \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Erin \" ) ) ) ) ) ) ) ) :start ( DateTimeConstraint :constraint ( Morning ) :date ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Erin \"),with_attendee(FindManager(\" Erin \")),starts_at(Morning()),starts_at(NextDOW(\" TUESDAY \"))))","qid":"75ac735f-2f56-4f99-a8bc-6d314850ff45.0"}
{"source":"I need to schedule lunch with Janet 's supervisor for next Friday at 2 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Janet \" ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( NumberPM :number # ( Number 2 ) ) ) ) :subject ( ?= # ( String \" lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Janet \")),has_subject(\" lunch \"),starts_at(NextDOW(\" FRIDAY \")),starts_at(NumberPM(2))))","qid":"fb3da2cd-4d00-4f1c-9ea6-328d6d502d60.0"}
{"source":"Set up a dinner date with Meghan 's team next Monday , but do n't include Harry .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Meghan \" ) ) ) ) ) ) ) ( AttendeeListExcludesRecipient :recipient ( ?= ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Harry \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) ) ) :subject ( ?= # ( String \" dinner date \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=\" Meghan \")),avoid_attendee(refer(Recipient?(name=LIKE(Harry)))),has_subject(\" dinner date \"),starts_at(NextDOW(\" MONDAY \"))))","qid":"240914e0-6639-4c0b-be13-94cdaa1c7d73.0"}
{"source":"Make an appointment with my manager please","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindManager(CurrentUser())))","qid":"64592cae-8882-4015-9f70-d359eccc2880.1"}
{"source":"Set up the weekly review with Abby 's team and add Rufus","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Rufus \" ) ) ) ) ) ) ) :subject ( ?= # ( String \" weekly review \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=\" Abby \")),with_attendee(\" Rufus \"),has_subject(\" weekly review \")))","qid":"b3682bfc-9681-41ac-8a58-99b76fd0ed93.0"}
{"source":"I need a meeting with Jake and his boss tomorrow at 3 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 3 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jake \"),with_attendee(FindManager(\" Jake \")),starts_at(Tomorrow()),starts_at(NumberPM(3))))","qid":"e6899171-6ae0-40e1-bd61-1d5485e04879.3"}
{"source":"Jake and his boss are meeting on Tuesday with me and my boss .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jake \"),with_attendee(FindManager(\" Jake \")),starts_at(NextDOW(\" TUESDAY \"))))","qid":"d011e214-4016-46ae-86e9-ff05d772a826.4"}
{"source":"I need to schedule a meeting with Dan Marton 's skip .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Dan Marton \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindManager(FindManager(\" Dan Marton \"))))","qid":"99d53e50-6efa-4a6b-8846-c7307e477c9f.1"}
{"source":"Schedule 15 minutes with Toby 's manager this morning","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Toby \" ) ) ) ) ) ) ) :duration ( ?= ( toMinutes # ( Number 15 ) ) ) :start ( DateTimeConstraint :constraint ( Morning ) :date ( Today ) ) ) ) ) )","target":"CreateEvent(AND(has_duration(toMinutes(15)),with_attendee(FindManager(\" Toby \")),starts_at(Morning()),starts_at(Today())))","qid":"c149cfd4-c2a0-41f9-b691-052689a5b380.1"}
{"source":"Set up a meeting with Dan Schoffel and his reports for next week .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Dan Schoffel \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindReports :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Dan Schoffel \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( NextWeekList ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Dan Schoffel \"),with_attendee(FindReports(recipient=refer(Recipient?(name=LIKE(Dan Schoffel))))),starts_at(NextWeekList())))","qid":"aefb62c7-e78b-4518-881e-26120912eea2.2"}
{"source":"Schedule a meeting for next Friday from 2 pm to 3 pm and it should include my whole team .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :end ( ?= ( TimeAfterDateTime :dateTime ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( NumberPM :number # ( Number 2 ) ) ) :time ( NumberPM :number # ( Number 3 ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( NumberPM :number # ( Number 2 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(ends_at(AND(GE(DateTime?(date=NextDOW(\" FRIDAY \"),time=NumberPM(2))),NumberPM(3))),with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(NextDOW(\" FRIDAY \")),starts_at(NumberPM(2))))","qid":"d4105423-c5ed-4dc2-9991-37d9b713db03.0"}
{"source":"Make an event with my team","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindTeamOf(recipient=CurrentUser())))","qid":"33cb5a6c-3199-4f66-a13e-4ec0918f75e0.1"}
{"source":"Enter another meeting after the luncheon on Monday and invite Tom 's team members .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Tom \" ) ) ) ) ) ) ) :start ( ?= ( :end ( singleton ( :results ( FindEventWrapperWithDefaults :constraint ( EventOnDate :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :event ( Constraint[Event] :subject ( ?~= # ( String \" luncheon \" ) ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=\" Tom \")),starts_at(:end(FindEvents(AND(starts_at(NextDOW(\" MONDAY \")),has_subject(\" luncheon \")))))))","qid":"6aa568e8-69d9-45df-95b7-6ea4cd166174.4"}
{"source":"create meeting on tuesday with supervisor","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),starts_at(NextDOW(\" TUESDAY \"))))","qid":"fe62aff8-2d02-4b21-8ccc-024dc07c304d.0"}
{"source":"I need a meeting with kim and her skip tomorrow morning .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" kim \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" kim \" ) ) ) ) ) ) ) ) ) :start ( DateTimeConstraint :constraint ( Morning ) :date ( Tomorrow ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" kim \"),with_attendee(FindManager(FindManager(\" kim \"))),starts_at(Morning()),starts_at(Tomorrow())))","qid":"87867b1d-8a78-4a6b-80ff-e197fc133852.2"}
{"source":"Schedule a meeting with Mondo 's boss at his office on Tuesday at 9 : 00 .a.m .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Mondo \" ) ) ) ) ) ) ) :location ( ?= # ( LocationKeyphrase \" his office \" ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) :time ( NumberAM :number # ( Number 9 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Mondo \")),at_location(\" his office \"),starts_at(NextDOW(\" TUESDAY \")),starts_at(NumberAM(9))))","qid":"b31b2010-7fa6-41fe-aedc-93386f826ab3.0"}
{"source":"create work thing with boss on monday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) ) ) :subject ( ?= # ( String \" work thing \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),has_subject(\" work thing \"),starts_at(NextDOW(\" MONDAY \"))))","qid":"a6ddbb39-52fa-4450-be8e-fd99121b1e54.0"}
{"source":"I need to meet with Jesse and their skip this week sometime .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jesse \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jesse \" ) ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ThisWeek ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jesse \"),with_attendee(FindManager(FindManager(\" Jesse \"))),starts_at(ThisWeek())))","qid":"f6c5f14a-510f-4050-a394-8d6aca509339.4"}
{"source":"put the meeting with ben 's manager on aug 11","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" ben \" ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( MD :day # ( Number 11 ) :month # ( Month \" AUGUST \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" ben \")),starts_at(MD(month=\" AUGUST \",day=11))))","qid":"66972d20-e6e7-4c2e-8897-4fb25531b858.3"}
{"source":"Setup a lunch meeting with my manager for tomorrow at 1 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 1 ) ) ) ) :subject ( ?= # ( String \" lunch meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),has_subject(\" lunch meeting \"),starts_at(Tomorrow()),starts_at(NumberPM(1))))","qid":"f15c0b7b-7f18-4e23-bd06-68c045cf300a.3"}
{"source":"Schedule drinks with coworkers tomorrow at 6 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 6 ) ) ) ) :subject ( ?= # ( String \" drinks \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),has_subject(\" drinks \"),starts_at(Tomorrow()),starts_at(NumberPM(6))))","qid":"cb19c742-4113-4e48-a229-91d28f4f5eca.2"}
{"source":"I am seeing Jake and his boss for Crop Whispering tomorrow at 3 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 3 ) ) ) ) :subject ( ?= # ( String \" Crop Whispering \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jake \"),with_attendee(FindManager(\" Jake \")),has_subject(\" Crop Whispering \"),starts_at(Tomorrow()),starts_at(NumberPM(3))))","qid":"90838099-2615-4433-8b18-a9103231ffeb.2"}
{"source":"I have a finance meeting with Abby and his Boss on Tuesday afternoon at 3 : 00 .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) :time ( NumberPM :number # ( Number 3 ) ) ) ) :subject ( ?= # ( String \" finance meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Abby \"),with_attendee(FindManager(\" Abby \")),has_subject(\" finance meeting \"),starts_at(NextDOW(\" TUESDAY \")),starts_at(NumberPM(3))))","qid":"058dfd96-8d66-456a-a96e-b4d8f99ee022.4"}
{"source":"I need to add a review meeting with Emily 's manager .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Emily \" ) ) ) ) ) ) ) :subject ( ?= # ( String \" review meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Emily \")),has_subject(\" review meeting \")))","qid":"8ecc5fd1-ad14-4708-9149-1f977c6035be.2"}
{"source":"I need to eat some cakes tomorrow with my team","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) :subject ( ?= # ( String \" eat some cakes \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),has_subject(\" eat some cakes \"),starts_at(Tomorrow())))","qid":"874eceb4-d329-45f6-a1e8-857009f57cb4.0"}
{"source":"Create a lunch meeting with my manager this Saturday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" SATURDAY \" ) ) ) ) :subject ( ?= # ( String \" lunch meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),has_subject(\" lunch meeting \"),starts_at(NextDOW(\" SATURDAY \"))))","qid":"9701ed44-8902-4537-a3ed-d4bec46310f8.0"}
{"source":"I need to meet with Kim and her skip manager tomorrow at 5 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim \" ) ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 5 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Kim \"),with_attendee(FindManager(FindManager(\" Kim \"))),starts_at(Tomorrow()),starts_at(NumberPM(5))))","qid":"b5b67b12-6014-4ea0-bda3-80700f536f2a.0"}
{"source":"Great , now after the training session on the 24 th , add a review session with Tom and his team .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Tom \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Tom \" ) ) ) ) ) ) ) ) :start ( ?= ( :end ( singleton ( :results ( FindEventWrapperWithDefaults :constraint ( EventOnDate :date ( nextDayOfMonth ( Today ) # ( Number 24 ) ) :event ( Constraint[Event] :subject ( ?~= # ( String \" training session \" ) ) ) ) ) ) ) ) ) :subject ( ?= # ( String \" review session \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Tom \"),with_attendee(FindTeamOf(recipient=\" Tom \")),has_subject(\" review session \"),starts_at(:end(FindEvents(AND(starts_at(nextDayOfMonth(Today(),24)),has_subject(\" training session \")))))))","qid":"3dc93931-ecc4-4d70-9d7f-c89858779d8f.4"}
{"source":"After the company party , schedule a meeting with Ronaldo 's team","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Ronaldo \" ) ) ) ) ) ) ) :start ( ?= ( :end ( singleton ( :results ( FindEventWrapperWithDefaults :constraint ( Constraint[Event] :subject ( ?~= # ( String \" company party \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=\" Ronaldo \")),starts_at(:end(FindEvents(has_subject(\" company party \"))))))","qid":"181b2856-e488-43df-a894-ffb3cbe829c2.0"}
{"source":"Create a Lunch with Elli and her skip manager .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Elli \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Elli \" ) ) ) ) ) ) ) ) ) :subject ( ?= # ( String \" Lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Elli \"),with_attendee(FindManager(FindManager(\" Elli \"))),has_subject(\" Lunch \")))","qid":"d6d7292a-3f3c-4951-afa0-f270edce6f59.0"}
{"source":"After my dinner meeting , put a meeting with Brian and his team .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Brian \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Brian \" ) ) ) ) ) ) ) ) :start ( ?= ( :end ( singleton ( :results ( FindEventWrapperWithDefaults :constraint ( Constraint[Event] :subject ( ?~= # ( String \" dinner meeting \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Brian \"),with_attendee(FindTeamOf(recipient=\" Brian \")),starts_at(:end(FindEvents(has_subject(\" dinner meeting \"))))))","qid":"b5d7bdba-eb54-4a1a-86b8-ac233fc07c0a.2"}
{"source":"Create a funky brunch meet with Jane and her manager on Thrusday at 11 : 00 am .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jane \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jane \" ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" THURSDAY \" ) ) :time ( NumberAM :number # ( Number 11 ) ) ) ) :subject ( ?= # ( String \" funky brunch meet \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jane \"),with_attendee(FindManager(\" Jane \")),has_subject(\" funky brunch meet \"),starts_at(NextDOW(\" THURSDAY \")),starts_at(NumberAM(11))))","qid":"2d115525-6696-4ec0-a6f3-29f73a22200a.0"}
{"source":"Make a meeting with my team","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindTeamOf(recipient=CurrentUser())))","qid":"021a2953-3328-4201-9f58-9d5e78a8975c.0"}
{"source":"Set up a dinner meeting with Bob and his team please","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Bob \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Bob \" ) ) ) ) ) ) ) ) :subject ( ?= # ( String \" dinner meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Bob \"),with_attendee(FindTeamOf(recipient=\" Bob \")),has_subject(\" dinner meeting \")))","qid":"be92ee13-f1ca-4fb9-964d-85bcc8bee78a.3"}
{"source":"put meet with my boss","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindManager(CurrentUser())))","qid":"c3ec5c0a-8625-42ad-bff7-0a4f9d56e179.2"}
{"source":"Could you put a meeting with Fritz and her boss for next week sometime ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Fritz \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Fritz \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( NextWeekList ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Fritz \"),with_attendee(FindManager(\" Fritz \")),starts_at(NextWeekList())))","qid":"2d440e35-371f-4712-a454-a61cec3650b1.2"}
{"source":"i will be busy during 12 pm 1 am with lunch with boss","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :showAs ( ?= # ( ShowAsStatus \" Busy \" ) ) :start ( ?= ( NextTime :time ( NumberPM :number # ( Number 12 ) ) ) ) :subject ( ?= # ( String \" lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),has_subject(\" lunch \"),starts_at(NextTime(time=NumberPM(12))),has_status(ShowAsStatus(\" Busy \"))))","qid":"c4e907d9-e877-46aa-8a95-00ad2e6a9824.0"}
{"source":"I will be with my team for 3 days from the 7 th to the 10 th","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( EventAllDayForDateRange :dateRange ( DateAndConstraint :date1 ( nextDayOfMonth ( Today ) # ( Number 7 ) ) :date2 ( nextDayOfMonth ( nextDayOfMonth ( Today ) # ( Number 7 ) ) # ( Number 10.0 ) ) ) :event ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(spans_time(DateAndConstraint(date1=nextDayOfMonth(Today(),7),date2=nextDayOfMonth(nextDayOfMonth(Today(),7),10))),with_attendee(FindTeamOf(recipient=CurrentUser()))))","qid":"b395528c-e714-42b4-bacc-28be71dc90f9.0"}
{"source":"add a working lunch with meg and her supervisor","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" meg \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" meg \" ) ) ) ) ) ) ) ) :subject ( ?= # ( String \" working lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" meg \"),with_attendee(FindManager(\" meg \")),has_subject(\" working lunch \")))","qid":"c40339bb-4107-43a8-9430-b1e882e2764b.4"}
{"source":"Please add a meeting with my team for Thursday at noon .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" THURSDAY \" ) ) :time ( Noon ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(NextDOW(\" THURSDAY \")),starts_at(Noon())))","qid":"494a631f-0edb-4703-8400-4b3d307fe978.4"}
{"source":"Make an event for 3 hours from now with Jack and his manager .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jack \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jack \" ) ) ) ) ) ) ) ) :start ( ?= ( adjustByPeriodDuration ( Now ) ( PeriodDuration :duration ( toHours # ( Number 3 ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jack \"),with_attendee(FindManager(\" Jack \")),starts_at(adjustByPeriodDuration(Now(),PeriodDuration(duration=toHours(3))))))","qid":"a1e1cdea-7ca8-44a2-baa3-10e06031484d.0"}
{"source":"check for lisa 's supervisor availability","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" lisa \" ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindManager(\" lisa \")))","qid":"3df03504-02b4-4279-b55f-5f48095c989f.4"}
{"source":"Create a dinner meeting with the office staff for Friday night .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( DateTimeConstraint :constraint ( Night ) :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) ) :subject ( ?= # ( String \" dinner \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),has_subject(\" dinner \"),starts_at(Night()),starts_at(NextDOW(\" FRIDAY \"))))","qid":"8cbef122-6364-412b-bb66-4eb02d9bd553.0"}
{"source":"put meeting with Jesse 's team .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jesse \" ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindTeamOf(recipient=\" Jesse \")))","qid":"5a6aeadc-4b55-46ec-b171-689b278de2af.0"}
{"source":"Could you make a bootcamp event with Abby 's skip ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindManager(FindManager(\" Abby \"))))","qid":"94135f5b-377c-424d-bd81-95c65fca382d.3"}
{"source":"Create a meeting with Abby 's team tomorrow please","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=\" Abby \")),starts_at(Tomorrow())))","qid":"53c4c29e-a0c4-4a21-bc2c-280c0e75bff0.0"}
{"source":"Schedule a meeting with my team","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindTeamOf(recipient=CurrentUser())))","qid":"c56cb2c7-bf38-4a31-8742-8ba5fa88b461.0"}
{"source":"Schedule a meeting with Dave 's manager tomorrow .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Dave \" ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Dave \")),starts_at(Tomorrow())))","qid":"fb293e1e-58be-4fbb-bc5f-89ea80d0853b.4"}
{"source":"I need you to book an all - day meeting with my team .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :isAllDay ( ?= # ( Boolean true ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),is_allDay()))","qid":"808f4990-c638-46a4-bb3f-6104a04bf4e3.0"}
{"source":"create work meeting with my co workers at the break room","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :location ( ?= # ( LocationKeyphrase \" break room \" ) ) :subject ( ?= # ( String \" work meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),at_location(\" break room \"),has_subject(\" work meeting \")))","qid":"cb08b057-eba4-48f4-8eea-909d672af671.0"}
{"source":"Create a meeting with John and his supervisior for Friday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" John \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" John \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" John \"),with_attendee(FindManager(\" John \")),starts_at(NextDOW(\" FRIDAY \"))))","qid":"017dba99-f12b-45cc-9c43-5a6adf096e42.0"}
{"source":"I want to have lunch with Abby and his Boss this coming Wednesday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" WEDNESDAY \" ) ) ) ) :subject ( ?= # ( String \" lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Abby \"),with_attendee(FindManager(\" Abby \")),has_subject(\" lunch \"),starts_at(NextDOW(\" WEDNESDAY \"))))","qid":"7e46d4d5-e2f9-4420-b731-2ea9eb04c9cd.4"}
{"source":"I 'm going to Seafair with Jake and his boss","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) ) ) :subject ( ?= # ( String \" Seafair \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jake \"),with_attendee(FindManager(\" Jake \")),has_subject(\" Seafair \")))","qid":"954f5749-b624-489f-abdb-c296fde181ca.3"}
{"source":"make a dinner and wine party at my house tuesday around 8 , I want my team members to be there","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :location ( ?= # ( LocationKeyphrase \" my house \" ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) :time ( NumberPM :number # ( Number 8 ) ) ) ) :subject ( ?= # ( String \" dinner and wine party \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),at_location(\" my house \"),has_subject(\" dinner and wine party \"),starts_at(NextDOW(\" TUESDAY \")),starts_at(NumberPM(8))))","qid":"f30e1802-a189-4436-b976-26f45b10d41d.0"}
{"source":"I had lunch with my manager on Monday last week , add that please .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( DowOfWeekNew :dow # ( DayOfWeek \" MONDAY \" ) :week ( LastWeekNew ) ) ) ) :subject ( ?= # ( String \" lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),has_subject(\" lunch \"),starts_at(DowOfWeekNew(dow=DayOfWeek(\" MONDAY \"),week=LastWeekNew()))))","qid":"e1c9c13c-890e-428b-97e8-c84c55f85be1.0"}
{"source":"please schedule a meeting with Tracy 's skip and Tracy","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Tracy \" ) ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Tracy \" ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(FindManager(\" Tracy \"))),with_attendee(\" Tracy \")))","qid":"26b6f931-e9e2-4264-9e94-e5ae003849c5.0"}
{"source":"Create an event with Kim and her reports","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindReports :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Kim \"),with_attendee(FindReports(recipient=refer(Recipient?(name=LIKE(Kim)))))))","qid":"d0274521-eb64-4fc8-904a-fe817c47e870.3"}
{"source":"After the breakfast meeting , invite Sarah 's team to a presentation .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Sarah \" ) ) ) ) ) ) ) :start ( ?= ( :end ( singleton ( :results ( FindEventWrapperWithDefaults :constraint ( Constraint[Event] :subject ( ?~= # ( String \" breakfast meeting \" ) ) ) ) ) ) ) ) :subject ( ?= # ( String \" presentation \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=\" Sarah \")),has_subject(\" presentation \"),starts_at(:end(FindEvents(has_subject(\" breakfast meeting \"))))))","qid":"721b8f02-97fa-4a9d-a008-de1c35dc04de.0"}
{"source":"and schedule lunch with Max 's boss today at 12 : 15 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Max \" ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Today ) :time ( HourMinutePm :hours # ( Number 12 ) :minutes # ( Number 15 ) ) ) ) :subject ( ?= # ( String \" lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Max \")),has_subject(\" lunch \"),starts_at(Today()),starts_at(HourMinutePm(hours=12,minutes=15))))","qid":"085480b3-0c45-4afb-aad7-66e40b840c2e.2"}
{"source":"Invite Jack and his boss to the kickoff meeting","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jack \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jack \" ) ) ) ) ) ) ) ) :subject ( ?= # ( String \" kickoff meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jack \"),with_attendee(FindManager(\" Jack \")),has_subject(\" kickoff meeting \")))","qid":"10ed2f8d-50fe-43ac-8ad8-024560694c1c.0"}
{"source":"Schedule a meeting with my team tomorrow at 9 am","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberAM :number # ( Number 9 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(Tomorrow()),starts_at(NumberAM(9))))","qid":"70142900-0df3-4dac-875c-2b1ecfcef7ed.1"}
{"source":"I want Tom and his manager to meet with me on Wednesday , and Jim plus his boss too .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Tom \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jim \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Tom \" ) ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jim \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" WEDNESDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Jim \")),with_attendee(FindManager(\" Tom \")),with_attendee(\" Tom \"),with_attendee(\" Jim \"),starts_at(NextDOW(\" WEDNESDAY \"))))","qid":"6d45452e-7b03-49b9-b8ba-4b518a3fe120.1"}
{"source":"Book a meeting with Joe 's manager this week","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Joe \" ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ThisWeek ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Joe \")),starts_at(ThisWeek())))","qid":"0452181a-4997-4a7f-9649-77ce2136a9f8.0"}
{"source":"Can you schedule a suit fitting with my team after my afternoon sales call on Thursday ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( :end ( singleton ( :results ( FindEventWrapperWithDefaults :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" THURSDAY \" ) ) ) ) :subject ( ?~= # ( String \" sales call \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(:end(FindEvents(AND(has_subject(\" sales call \"),starts_at(NextDOW(\" THURSDAY \"))))))))","qid":"ed8349e0-9653-4901-abc5-efb05b12cc3a.0"}
{"source":"Can you schedule a meeting with Toga 's manager on Friday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Toga \" ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Toga \")),starts_at(NextDOW(\" FRIDAY \"))))","qid":"658fec9f-e012-4627-84e3-19839e758d9c.1"}
{"source":"I need a meeting with Abby and her boss","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Abby \"),with_attendee(FindManager(\" Abby \"))))","qid":"659bc4a8-58d9-4e8e-af95-bcaa86c20f98.3"}
{"source":"I need to make an appointment Emily 's boss at 10 am next Wednesday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Emily \" ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" WEDNESDAY \" ) ) :time ( NumberAM :number # ( Number 10.0 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Emily \")),starts_at(NextDOW(\" WEDNESDAY \")),starts_at(NumberAM(10))))","qid":"ba0439ea-49c9-4712-91ef-e8405f42d038.0"}
{"source":"add a date for a session with Kerry and her manager for this afternoon","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kerry \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kerry \" ) ) ) ) ) ) ) ) :start ( DateTimeConstraint :constraint ( Afternoon ) :date ( Today ) ) :subject ( ?= # ( String \" date for a session \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Kerry \"),with_attendee(FindManager(\" Kerry \")),has_subject(\" date for a session \"),starts_at(Afternoon()),starts_at(Today())))","qid":"07e9d682-a490-46f4-ab26-2f0b561d3031.2"}
{"source":"I need to be with my whole team for this weekend","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ThisWeekend ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(ThisWeekend())))","qid":"1d9b3f7d-6c5e-4cc5-9c72-9a4cb89a6557.0"}
{"source":"I am meeting with kim and her manager tomorrow in Cleveland","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" kim \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" kim \" ) ) ) ) ) ) ) ) :location ( ?= # ( LocationKeyphrase \" Cleveland \" ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" kim \"),with_attendee(FindManager(\" kim \")),at_location(\" Cleveland \"),starts_at(Tomorrow())))","qid":"82489324-fd22-43f0-b72e-0d4a79a36e81.4"}
{"source":"Make a meeting with James and Mary 's managers .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" James \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Mary \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" James \"),with_attendee(FindManager(\" Mary \"))))","qid":"b58fb1c2-5858-4aea-9061-6f9218cffce2.0"}
{"source":"My pay raise meeting is on Friday with Dan Chenlo and his manager in meeting room 3 .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Dan Chenlo \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Dan Chenlo \" ) ) ) ) ) ) ) ) :location ( ?= # ( LocationKeyphrase \" meeting room 3 \" ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) ) ) :subject ( ?= # ( String \" pay raise meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Dan Chenlo \"),with_attendee(FindManager(\" Dan Chenlo \")),at_location(\" meeting room 3 \"),has_subject(\" pay raise meeting \"),starts_at(NextDOW(\" FRIDAY \"))))","qid":"65f06313-57ea-43c7-96cb-c607d6d2ba0b.2"}
{"source":"Set up a meeting with Sarah and her boss .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Sarah \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Sarah \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Sarah \"),with_attendee(FindManager(\" Sarah \"))))","qid":"c2a55720-76c0-49c3-825a-b2de0d1801c0.0"}
{"source":"Invite my boss and his team to a party tomorrow","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) :subject ( ?= # ( String \" party \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),with_attendee(FindTeamOf(recipient=FindManager(CurrentUser()))),has_subject(\" party \"),starts_at(Tomorrow())))","qid":"8440029d-2709-4c19-8ff3-1dd2b06252b9.3"}
{"source":"Please create lunch with boss tomorrow at 11 am","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberAM :number # ( Number 11 ) ) ) ) :subject ( ?= # ( String \" lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),has_subject(\" lunch \"),starts_at(Tomorrow()),starts_at(NumberAM(11))))","qid":"d6c0715a-5f62-4130-8dfd-16c1cebdd87a.1"}
{"source":"Make a meeting with Jesse Rosenfeld and his team next week","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jesse Rosenfeld \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jesse Rosenfeld \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( NextWeekList ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jesse Rosenfeld \"),with_attendee(FindTeamOf(recipient=\" Jesse Rosenfeld \")),starts_at(NextWeekList())))","qid":"be7028ee-e1b9-480b-ae85-e6a1f9a1fda6.1"}
{"source":"Set up a meeting with Dan Schoffel 's reports","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindReports :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Dan Schoffel \" ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindReports(recipient=refer(Recipient?(name=LIKE(Dan Schoffel))))))","qid":"87a34c6a-db45-49d1-8678-0fb2ad08747f.0"}
{"source":"Lunch date with co - workers at City Center Park tomorrow .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :location ( ?= # ( LocationKeyphrase \" City Center Park \" ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) :subject ( ?= # ( String \" Lunch date \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),at_location(\" City Center Park \"),has_subject(\" Lunch date \"),starts_at(Tomorrow())))","qid":"57623083-359d-4af9-b466-96969a44be84.0"}
{"source":"I need a meeting next Monday with Louise and her manager around 10 AM","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Louise \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Louise \" ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :time ( NumberAM :number # ( Number 10.0 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Louise \"),with_attendee(FindManager(\" Louise \")),starts_at(NextDOW(\" MONDAY \")),starts_at(NumberAM(10))))","qid":"0608d45b-3b92-4825-8683-f1959aa66cee.0"}
{"source":"put business meeting on monday with my team","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) ) ) :subject ( ?= # ( String \" business meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),has_subject(\" business meeting \"),starts_at(NextDOW(\" MONDAY \"))))","qid":"cdc878ca-6807-48c8-8e7f-37fbfdaa70ba.0"}
{"source":"Please create lunch with boss tomorrow at 11 am","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberAM :number # ( Number 11 ) ) ) ) :subject ( ?= # ( String \" lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),has_subject(\" lunch \"),starts_at(Tomorrow()),starts_at(NumberAM(11))))","qid":"2d019466-61fc-4464-a35d-a3cae06fdbbb.1"}
{"source":"ok , now can I set a team meeting with Terry 's manager on tuesday ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Terry \" ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) ) ) :subject ( ?= # ( String \" team meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Terry \")),has_subject(\" team meeting \"),starts_at(NextDOW(\" TUESDAY \"))))","qid":"82059f18-872b-4d83-a774-0a90dadd58ef.2"}
{"source":"I need a meeting with Jake , Elli , and both of their managers for this Thursday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) ( andConstraint ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Elli \" ) ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Elli \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" THURSDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Elli \")),with_attendee(\" Jake \"),with_attendee(FindManager(\" Jake \")),with_attendee(\" Elli \"),starts_at(NextDOW(\" THURSDAY \"))))","qid":"6da7f7df-4f4a-4951-9d79-6a08bd75916c.1"}
{"source":"I need a meeting with my team","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindTeamOf(recipient=CurrentUser())))","qid":"e8fcc6c4-ad7f-4a0b-83b0-ad776b88c968.1"}
{"source":"Schedule me a meeting with Lax 's team , but exclude Jake","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Lax \" ) ) ) ) ) ) ) ( AttendeeListExcludesRecipient :recipient ( ?= ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=\" Lax \")),avoid_attendee(refer(Recipient?(name=LIKE(Jake))))))","qid":"139a22d6-2cfd-423e-a9c6-3ebfca4747fd.1"}
{"source":"I need to schedule meeting with Marta 's boss this Monday at 10 am .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Marta \" ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :time ( NumberAM :number # ( Number 10.0 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Marta \")),starts_at(NextDOW(\" MONDAY \")),starts_at(NumberAM(10))))","qid":"be8a75df-91db-4bff-ba69-accf34b5afe5.3"}
{"source":"I need a meeting with Kim 's direct reports too .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindReports :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim \" ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindReports(recipient=refer(Recipient?(name=LIKE(Kim))))))","qid":"08007585-cdea-44f0-a65d-e3e26cba292a.4"}
{"source":"Schedule a lunch with James and Mary and ensure you invite both their bosses","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" James \" ) ) ) ) ) ) ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Mary \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" James \" ) ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Mary \" ) ) ) ) ) ) ) ) ) :subject ( ?= # ( String \" lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" James \"),with_attendee(FindManager(\" Mary \")),with_attendee(\" Mary \"),with_attendee(FindManager(\" James \")),has_subject(\" lunch \")))","qid":"8ac33646-0eac-4d1b-bbae-bebd65439f7f.2"}
{"source":"Now make an appointment with Dan Morton and team","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Dan Morton \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Dan Morton \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Dan Morton \"),with_attendee(FindTeamOf(recipient=\" Dan Morton \"))))","qid":"7e8df665-05c9-4238-a79d-74ba80570fe0.2"}
{"source":"Slot in an appointment with my team tomorrow .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(Tomorrow())))","qid":"c878fcd7-6572-4b11-a5a3-91738fddf59f.4"}
{"source":"I need to make a meeting with Kim , her boss , David Crim , and his boss","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim \" ) ) ) ) ) ) ) ) ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" David Crim \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" David Crim \" ) ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Kim \"),with_attendee(FindManager(\" Kim \")),with_attendee(\" David Crim \"),with_attendee(FindManager(\" David Crim \"))))","qid":"c84512ff-8800-43a1-921c-0713632ae435.0"}
{"source":"Please schedule a meeting with Tony 's manager on Wednesday in the afternoon , preferably after 3 PM .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Tony \" ) ) ) ) ) ) ) :start ( OnDateAfterTime :date ( NextDOW :dow # ( DayOfWeek \" WEDNESDAY \" ) ) :time ( NumberPM :number # ( Number 3 ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Tony \")),starts_at(OnDateAfterTime(date=NextDOW(\" WEDNESDAY \"),time=NumberPM(3)))))","qid":"4cfd0514-2e11-49ad-94e2-f57894e95d48.0"}
{"source":"can you schedule the meeting with Violet 's manager","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Violet \" ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindManager(\" Violet \")))","qid":"2b979455-44e7-41cd-8435-75db394db49c.3"}
{"source":"Create a lunch with Jake Cobb 's team","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake Cobb \" ) ) ) ) ) ) ) :subject ( ?= # ( String \" lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=\" Jake Cobb \")),has_subject(\" lunch \")))","qid":"f1b4d597-ec13-4d72-8bf3-b2fedfeae349.0"}
{"source":"Hello , can you schedule my dentist appointment to be for next Tuesday at 3 : 00 PM with Jake , his manager , Elli and her manager please ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) ) ) ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Elli \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Elli \" ) ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) :time ( NumberPM :number # ( Number 3 ) ) ) ) :subject ( ?= # ( String \" dentist appointment \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jake \"),with_attendee(FindManager(\" Jake \")),with_attendee(\" Elli \"),with_attendee(FindManager(\" Elli \")),has_subject(\" dentist appointment \"),starts_at(NextDOW(\" TUESDAY \")),starts_at(NumberPM(3))))","qid":"06735308-e932-4767-8d0d-76e50f5cd440.0"}
{"source":"Book an hour long meeting with Jill and her supervisor .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jill \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jill \" ) ) ) ) ) ) ) ) :duration ( ?= ( toHours # ( Number 1 ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jill \"),with_attendee(FindManager(\" Jill \")),has_duration(toHours(1))))","qid":"902211a1-37f7-4852-94b1-a3bf468a77e5.0"}
{"source":"Add a movie event with my team for Thursday night at 8 .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" THURSDAY \" ) ) :time ( NumberPM :number # ( Number 8 ) ) ) ) :subject ( ?= # ( String \" movie \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),has_subject(\" movie \"),starts_at(NextDOW(\" THURSDAY \")),starts_at(NumberPM(8))))","qid":"e2a2de77-6c1c-4e80-b6a1-0fe72402e2d7.2"}
{"source":"Set a meeting with Jake and his team members for tomorrow at 12 : 00 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 12 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jake \"),with_attendee(FindTeamOf(recipient=\" Jake \")),starts_at(Tomorrow()),starts_at(NumberPM(12))))","qid":"7f8dc7d2-d51f-4887-bdeb-92ebfe103688.1"}
{"source":"Can you also note that I met with my Supervisor last Wednesday at 3 pm ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( previousDayOfWeek ( Today ) # ( DayOfWeek \" WEDNESDAY \" ) ) :time ( NumberPM :number # ( Number 3 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),starts_at(previousDayOfWeek(Today(),DayOfWeek(\" WEDNESDAY \"))),starts_at(NumberPM(3))))","qid":"3a7025bb-f931-418c-9a0d-fef1f9e32a9d.1"}
{"source":"Lets make a meal with my team tonight but do not invite Abby","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) ( AttendeeListExcludesRecipient :recipient ( ?= ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ) ) :start ( DateTimeConstraint :constraint ( Night ) :date ( Today ) ) :subject ( ?= # ( String \" meal \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),avoid_attendee(refer(Recipient?(name=LIKE(Abby)))),has_subject(\" meal \"),starts_at(Night()),starts_at(Today())))","qid":"1dc47a18-9fd7-4532-946e-ea1588f94420.0"}
{"source":"schedule with my team a meeting for today","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Today ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(Today())))","qid":"982bca97-6d7b-4a6f-9682-3ba637a2c919.0"}
{"source":"Can you schedule a meeting at 10 AM with Lisa and her supervisor ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Lisa \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Lisa \" ) ) ) ) ) ) ) ) :start ( ?= ( NextTime :time ( NumberAM :number # ( Number 10.0 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Lisa \"),with_attendee(FindManager(\" Lisa \")),starts_at(NextTime(time=NumberAM(10)))))","qid":"f3c7457e-0db5-46d4-b06c-453c3c0cbe1c.0"}
{"source":"put manners learning with my boss","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :subject ( ?= # ( String \" manners learning \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),has_subject(\" manners learning \")))","qid":"1f27c773-df65-43c5-a780-f431b48e532f.3"}
{"source":"Hi , I need you to schedule a meeting for tomorrow with my manager and Elli 's manager .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Elli \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),with_attendee(FindManager(\" Elli \")),starts_at(Tomorrow())))","qid":"2ead7091-2abc-40ab-a152-9ed76891e225.0"}
{"source":"Put together a meeting with the team tomorrow .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(Tomorrow())))","qid":"f064dd83-5aff-4148-958e-5678da9f97fd.4"}
{"source":"I 'm meeting with Kim Possible and her team on tuesday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim Possible \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim Possible \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Kim Possible \"),with_attendee(FindTeamOf(recipient=\" Kim Possible \")),starts_at(NextDOW(\" TUESDAY \"))))","qid":"3018cbcf-a930-4552-890c-9fe438fda6b6.0"}
{"source":"I will be with Jake and his boss tomorrow","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jake \"),with_attendee(FindManager(\" Jake \")),starts_at(Tomorrow())))","qid":"cc435568-d2c1-4cf3-9081-c3b7f9ed1d82.2"}
{"source":"make a meeting with Kim 's reports then","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindReports :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim \" ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindReports(recipient=refer(Recipient?(name=LIKE(Kim))))))","qid":"86d0d0b2-482c-4ba7-a7aa-17626e61d940.1"}
{"source":"Schedule Museum Tour with Joe and his boss for this coming Tuesday at 1 PM .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Joe \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Joe \" ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) :time ( NumberPM :number # ( Number 1 ) ) ) ) :subject ( ?= # ( String \" Museum Tour \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Joe \"),with_attendee(FindManager(\" Joe \")),has_subject(\" Museum Tour \"),starts_at(NextDOW(\" TUESDAY \")),starts_at(NumberPM(1))))","qid":"7c57ee89-b397-4f88-bead-36c54aaf6478.3"}
{"source":"Please create an even with Hillary and her manager for next week .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Hillary \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Hillary \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( NextWeekList ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Hillary \"),with_attendee(FindManager(\" Hillary \")),starts_at(NextWeekList())))","qid":"b24fb442-98d7-4b5f-a20a-af021e37e69b.0"}
{"source":"My meeting with my team is tomorrow .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(Tomorrow())))","qid":"d3726776-4f51-4eb9-89bd-91cd7e7a683d.2"}
{"source":"Need to make an emergency meeting with Patricia and her boss .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Patricia \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Patricia \" ) ) ) ) ) ) ) ) :subject ( ?= # ( String \" emergency meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Patricia \"),with_attendee(FindManager(\" Patricia \")),has_subject(\" emergency meeting \")))","qid":"1773a4a8-8a03-4ef6-9442-bcbb65adec4b.0"}
{"source":"When Monday 's meeting concludes I have an an appointment with Stacey 's team .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Stacey \" ) ) ) ) ) ) ) :start ( ?= ( :end ( singleton ( :results ( FindEventWrapperWithDefaults :constraint ( EventOnDate :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :event ( Constraint[Event] ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=\" Stacey \")),starts_at(:end(FindEvents(starts_at(NextDOW(\" MONDAY \")))))))","qid":"6bc65b4c-c99c-424b-86fd-9cc38e4efec1.0"}
{"source":"Tomorrow morning I will be eating Carrots with my team","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( DateTimeConstraint :constraint ( Morning ) :date ( Tomorrow ) ) :subject ( ?= # ( String \" eating Carrots \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),has_subject(\" eating Carrots \"),starts_at(Morning()),starts_at(Tomorrow())))","qid":"bc24eede-2cf6-42ca-a32d-85baf3dc448d.0"}
{"source":"I want you to set up a meeting with Jane , her boss , Jennifer and her manager","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jane \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jane \" ) ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jennifer \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jennifer \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Jennifer \")),with_attendee(\" Jennifer \"),with_attendee(\" Jane \"),with_attendee(FindManager(\" Jane \"))))","qid":"a29f2d6c-62cb-45e9-9de0-3f7032515623.1"}
{"source":"Schedule a dinner with my team but do not include Marton please","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) ( AttendeeListExcludesRecipient :recipient ( ?= ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Marton \" ) ) ) ) ) ) ) ) :subject ( ?= # ( String \" dinner \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),avoid_attendee(refer(Recipient?(name=LIKE(Marton)))),has_subject(\" dinner \")))","qid":"f118d41f-0f80-4ece-baa9-e80cfb1d872d.2"}
{"source":"fixing with my team members in tour .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :subject ( ?= # ( String \" tour \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),has_subject(\" tour \")))","qid":"ad6ba6c1-444e-424b-b26e-cf8299d9f13e.1"}
{"source":"Make another event for breakfast with Pearson 's boss tomorrow between 9 - 11 am","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Pearson \" ) ) ) ) ) ) ) :start ( DateTimeAndConstraint :dateTime1 ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberAM :number # ( Number 9 ) ) ) :dateTime2 ( TimeAfterDateTime :dateTime ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberAM :number # ( Number 9 ) ) ) :time ( NumberAM :number # ( Number 11 ) ) ) ) :subject ( ?= # ( String \" breakfast \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Pearson \")),has_subject(\" breakfast \"),starts_at(DateTimeRange(start=DateTime?(date=Tomorrow(),time=NumberAM(9)),end=AND(GE(DateTime?(date=Tomorrow(),time=NumberAM(9))),NumberAM(11))))))","qid":"b57157d1-af9f-4689-8437-d269888394c1.2"}
{"source":"schedule a meeting with karen 's manager Tuesday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" karen \" ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" karen \")),starts_at(NextDOW(\" TUESDAY \"))))","qid":"b37d3ab0-3683-4a73-ae59-a7b047f86548.0"}
{"source":"Schedule a meeting with Kim Possible 's skip manager for 11 am tomorrow .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim Possible \" ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberAM :number # ( Number 11 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(FindManager(\" Kim Possible \"))),starts_at(Tomorrow()),starts_at(NumberAM(11))))","qid":"eb27c3f7-903d-4b6b-aead-81266ad92c4e.0"}
{"source":"Who is my supervisor . Create meeting with Dan","original_target":"( do ( Yield :output ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) ( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Dan \" ) ) ) ) ) ) ) ) ) ) )","target":"do(Yield(FindManager(CurrentUser())),CreateEvent(with_attendee(\" Dan \")))","qid":"7d9cd181-08a3-4f0b-8eaf-34477b680cdf.3"}
{"source":"Thanks , also make a budget meeting with Ricky and his supervisor in two weeks .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Ricky \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Ricky \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( adjustByPeriod ( Today ) ( toWeeks # ( Number 2 ) ) ) ) ) :subject ( ?= # ( String \" budget meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Ricky \"),with_attendee(FindManager(\" Ricky \")),has_subject(\" budget meeting \"),starts_at(adjustByPeriod(Today(),toWeeks(2)))))","qid":"59f02d1d-6343-4e04-8218-61bb006c7d2c.4"}
{"source":"Can you schedule a business proposal meeting for tomorrow at 9 am with Monica , her manager , Elli and her boss ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Monica \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Monica \" ) ) ) ) ) ) ) ) ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Elli \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Elli \" ) ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberAM :number # ( Number 9 ) ) ) ) :subject ( ?= # ( String \" business proposal meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Monica \"),with_attendee(FindManager(\" Monica \")),with_attendee(\" Elli \"),with_attendee(FindManager(\" Elli \")),has_subject(\" business proposal meeting \"),starts_at(Tomorrow()),starts_at(NumberAM(9))))","qid":"aa3dcd87-6917-4768-af00-c531c95ea2f0.0"}
{"source":"I need a meeting with Jackson 's manager monday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jackson \" ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Jackson \")),starts_at(NextDOW(\" MONDAY \"))))","qid":"5b062055-dce0-42bc-a161-516785f39166.3"}
{"source":"meeting with Abby 's team","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindTeamOf(recipient=\" Abby \")))","qid":"cdc878ca-6807-48c8-8e7f-37fbfdaa70ba.3"}
{"source":"Make another event for tomorrow at 3 pm with my team but remove Jesse","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) ( AttendeeListExcludesRecipient :recipient ( ?= ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jesse \" ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 3 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),avoid_attendee(refer(Recipient?(name=LIKE(Jesse)))),starts_at(Tomorrow()),starts_at(NumberPM(3))))","qid":"60eefc2d-7e76-42f7-ac4f-b4c7437c5f78.1"}
{"source":"Please add brunch with Kim and her manager .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim \" ) ) ) ) ) ) ) ) :subject ( ?= # ( String \" brunch \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Kim \"),with_attendee(FindManager(\" Kim \")),has_subject(\" brunch \")))","qid":"0f4ac540-2623-4583-80d1-c0ea7f02e81a.0"}
{"source":"Add a meeting with Bill 's manager tomorrow afternoon .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Bill \" ) ) ) ) ) ) ) :start ( DateTimeConstraint :constraint ( Afternoon ) :date ( Tomorrow ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Bill \")),starts_at(Afternoon()),starts_at(Tomorrow())))","qid":"5c2b95d6-9476-4395-b707-9e69565709d6.1"}
{"source":"Will you schedule a meeting with kim and her boss as well as brad and their boss ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" kim \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" kim \" ) ) ) ) ) ) ) ) ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" brad \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" brad \" ) ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" kim \"),with_attendee(FindManager(\" kim \")),with_attendee(\" brad \"),with_attendee(FindManager(\" brad \"))))","qid":"a29f2d6c-62cb-45e9-9de0-3f7032515623.2"}
{"source":"I need an event named \" tailgate \" with my team on Saturday at 9 am .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" SATURDAY \" ) ) :time ( NumberAM :number # ( Number 9 ) ) ) ) :subject ( ?= # ( String \" tailgate \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),has_subject(\" tailgate \"),starts_at(NextDOW(\" SATURDAY \")),starts_at(NumberAM(9))))","qid":"85f65227-ecdf-49d9-bd38-11eea1916151.4"}
{"source":"have a meeting on wednesday with Bill and his boss","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Bill \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Bill \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" WEDNESDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Bill \"),with_attendee(FindManager(\" Bill \")),starts_at(NextDOW(\" WEDNESDAY \"))))","qid":"899c4585-0568-4f12-8d39-3831de599c0a.0"}
{"source":"Add a meeting with my manager Wednesday at 11 am","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" WEDNESDAY \" ) ) :time ( NumberAM :number # ( Number 11 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),starts_at(NextDOW(\" WEDNESDAY \")),starts_at(NumberAM(11))))","qid":"1d8561a0-b363-4e5d-b475-8bd1a6a1a630.3"}
{"source":"Good , set meeting with Priya 's manager for 4 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Priya \" ) ) ) ) ) ) ) :start ( ?= ( NextTime :time ( NumberPM :number # ( Number 4 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Priya \")),starts_at(NextTime(time=NumberPM(4)))))","qid":"a6a7c95b-19a6-4877-9370-85f968eb0534.1"}
{"source":"Can you schedule a meeting with Credence and his boss to watch Fantastic Beasts and Where to Find Them ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Credence \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Credence \" ) ) ) ) ) ) ) ) :subject ( ?= # ( String \" watch Fantastic Beasts and Where to Find Them \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Credence \"),with_attendee(FindManager(\" Credence \")),has_subject(\" watch Fantastic Beasts and Where to Find Them \")))","qid":"e272673a-bd47-4d7e-a59e-706efc147ba9.3"}
{"source":"Put secret planning meeting on my calendar and add Sam and his boss .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Sam \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Sam \" ) ) ) ) ) ) ) ) :subject ( ?= # ( String \" secret planning meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Sam \"),with_attendee(FindManager(\" Sam \")),has_subject(\" secret planning meeting \")))","qid":"03aaa06f-0452-4190-8123-88a66f06bc0a.4"}
{"source":"Schedule a meeting with my team on Friday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(NextDOW(\" FRIDAY \"))))","qid":"f5a7a082-7088-4da4-a462-6c3684decdf5.0"}
{"source":"I need a meeting scheduled with my team","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindTeamOf(recipient=CurrentUser())))","qid":"039f30e1-4236-42e0-94d1-3f18433cf52d.0"}
{"source":"I need a meeting with the team","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindTeamOf(recipient=CurrentUser())))","qid":"a0249f99-06ff-4e58-bfc9-3c2965166616.0"}
{"source":"Add dinner with Will 's maanager for tomorrow at 8 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Will \" ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 8 ) ) ) ) :subject ( ?= # ( String \" dinner \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Will \")),has_subject(\" dinner \"),starts_at(Tomorrow()),starts_at(NumberPM(8))))","qid":"1f572536-bec0-45fc-a8e5-d0c4cb055c12.0"}
{"source":"create observation on monday with manager","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) ) ) :subject ( ?= # ( String \" observation \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),has_subject(\" observation \"),starts_at(NextDOW(\" MONDAY \"))))","qid":"f9a1d8d4-3ee5-4223-9030-43ef973e327c.0"}
{"source":"Schedule time with Kim Possible 's team on Tuesday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim Possible \" ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=\" Kim Possible \")),starts_at(NextDOW(\" TUESDAY \"))))","qid":"ca5c3ac1-b192-492d-b9ec-89f70c4689ab.1"}
{"source":"I need to schedule a business anniversary lunch with my team on Monday at 12 : 00 to 1 : 00 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :end ( ?= ( TimeAfterDateTime :dateTime ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :time ( NumberPM :number # ( Number 12 ) ) ) :time ( NumberPM :number # ( Number 1 ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :time ( NumberPM :number # ( Number 12 ) ) ) ) :subject ( ?= # ( String \" business anniversary lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(ends_at(AND(GE(DateTime?(date=NextDOW(\" MONDAY \"),time=NumberPM(12))),NumberPM(1))),with_attendee(FindTeamOf(recipient=CurrentUser())),has_subject(\" business anniversary lunch \"),starts_at(NextDOW(\" MONDAY \")),starts_at(NumberPM(12))))","qid":"2911f5a7-7d1d-42c1-81ca-95941947d4a9.7"}
{"source":"Arrange for me to meet with my team later this morning .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( DateTimeConstraint :constraint ( Morning ) :date ( Today ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(Morning()),starts_at(Today())))","qid":"d9b9ca8c-8506-4431-9132-0aa89b792170.2"}
{"source":"Please create an event with Kim and her skip tomorrow","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim \" ) ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Kim \"),with_attendee(FindManager(FindManager(\" Kim \"))),starts_at(Tomorrow())))","qid":"26b6f931-e9e2-4264-9e94-e5ae003849c5.2"}
{"source":"I need another meeting with Kim 's team","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim \" ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindTeamOf(recipient=\" Kim \")))","qid":"e4b2bb57-0b4b-4e95-b361-cbd4bcfdce8b.2"}
{"source":"today night meet my team members","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( DateTimeConstraint :constraint ( Night ) :date ( Today ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(Night()),starts_at(Today())))","qid":"68f6d078-34ce-44fc-81cd-3a4cce5a084c.4"}
{"source":"Make a meeting with Abby 's team but not Jesse","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ) ( AttendeeListExcludesRecipient :recipient ( ?= ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jesse \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=\" Abby \")),avoid_attendee(refer(Recipient?(name=LIKE(Jesse))))))","qid":"84c63a6a-02a7-481d-99aa-0e004e7a3bc2.0"}
{"source":"Create a meeting with Abby 's skip tomorrow","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(FindManager(\" Abby \"))),starts_at(Tomorrow())))","qid":"ef781072-db47-4a6d-adfe-d04db05269a5.4"}
{"source":"Schedule a meeting on Wednesday morning with Ashley and her boss .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Ashley \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Ashley \" ) ) ) ) ) ) ) ) :start ( DateTimeConstraint :constraint ( Morning ) :date ( NextDOW :dow # ( DayOfWeek \" WEDNESDAY \" ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Ashley \"),with_attendee(FindManager(\" Ashley \")),starts_at(Morning()),starts_at(NextDOW(\" WEDNESDAY \"))))","qid":"8a9c2320-72f9-4bf6-8588-cee9a3e877db.0"}
{"source":"Add a meeting with Carla 's manager today at 3 : 00 PM .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Carla \" ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Today ) :time ( NumberPM :number # ( Number 3 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Carla \")),starts_at(Today()),starts_at(NumberPM(3))))","qid":"760e48a3-317f-47cd-bcd7-427939502ed1.3"}
{"source":"Set up an event with my team for Sunday morning .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( DateTimeConstraint :constraint ( Morning ) :date ( NextDOW :dow # ( DayOfWeek \" SUNDAY \" ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(Morning()),starts_at(NextDOW(\" SUNDAY \"))))","qid":"11adb559-6362-4f85-b34f-9c54a1ef42ff.2"}
{"source":"Arrange a meeting with all members for later next week","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( LateDateRange :dateRange ( NextWeekList ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(LateDateRange(dateRange=NextWeekList()))))","qid":"1cc2dead-db94-4ed7-9006-a9b867f21444.0"}
{"source":"Make a dinner appointment with Brenda and Amanda plus their bosses on Friday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Brenda \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Brenda \" ) ) ) ) ) ) ) ) ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Amanda \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Amanda \" ) ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) ) ) :subject ( ?= # ( String \" dinner appointment \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Brenda \"),with_attendee(FindManager(\" Brenda \")),with_attendee(\" Amanda \"),with_attendee(FindManager(\" Amanda \")),has_subject(\" dinner appointment \"),starts_at(NextDOW(\" FRIDAY \"))))","qid":"b529fa53-8baf-4543-ba9d-698ca8cd1947.2"}
{"source":"make meeting kim 's team tomorrow at 12 . 30 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" kim \" ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( HourMinutePm :hours # ( Number 12 ) :minutes # ( Number 30.0 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=\" kim \")),starts_at(Tomorrow()),starts_at(HourMinutePm(hours=12,minutes=30))))","qid":"4635a091-cb2a-4cc4-9ed5-546672fc4469.0"}
{"source":"Create a new event for Dinner with Boss at Olive Garden tomorrow from 7 : 00 to 8 : 00 PM","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :end ( ?= ( TimeAfterDateTime :dateTime ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 7 ) ) ) :time ( NumberPM :number # ( Number 8 ) ) ) ) :location ( ?= # ( LocationKeyphrase \" Olive Garden \" ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 7 ) ) ) ) :subject ( ?= # ( String \" Dinner \" ) ) ) ) ) )","target":"CreateEvent(AND(ends_at(AND(GE(DateTime?(date=Tomorrow(),time=NumberPM(7))),NumberPM(8))),with_attendee(FindManager(CurrentUser())),at_location(\" Olive Garden \"),has_subject(\" Dinner \"),starts_at(Tomorrow()),starts_at(NumberPM(7))))","qid":"50ace70e-ae7b-4548-aa07-1e17c4eb7c47.2"}
{"source":"Can I meet up with the team at all on Friday ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(NextDOW(\" FRIDAY \"))))","qid":"183af753-db5d-4b19-9c7d-fb1d4629e0c6.0"}
{"source":"make a dental checkup this weekend with Abby 's team","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ThisWeekend ) ) :subject ( ?= # ( String \" dental checkup \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=\" Abby \")),has_subject(\" dental checkup \"),starts_at(ThisWeekend())))","qid":"aad567af-5c96-4622-93a7-4a15b1585ee0.0"}
{"source":"Schedule a meeting on Tuesday for 2 pm with the whole work group .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) :time ( NumberPM :number # ( Number 2 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(NextDOW(\" TUESDAY \")),starts_at(NumberPM(2))))","qid":"08b4dbd2-964c-4c8f-a734-e3885e4ad141.0"}
{"source":"Schedule a Farewell lunch with Jennifer and her team and Elli and her team .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jennifer \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jennifer \" ) ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Elli \" ) ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Elli \" ) ) ) ) ) ) ) ) :subject ( ?= # ( String \" Farewell lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=\" Elli \")),with_attendee(\" Elli \"),with_attendee(\" Jennifer \"),with_attendee(FindTeamOf(recipient=\" Jennifer \")),has_subject(\" Farewell lunch \")))","qid":"4d04bbaa-0f12-43c7-af95-094721991f8c.2"}
{"source":"What is the best time next week for me to go meet with my advisor ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( NextWeekList ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),starts_at(NextWeekList())))","qid":"0d7a6e40-567d-4c88-9da5-887fe78b768b.0"}
{"source":"have my entire team attending a coding camp for this entire week","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( EventAllDayForDateRange :dateRange ( ThisWeek ) :event ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :subject ( ?= # ( String \" coding camp \" ) ) ) ) ) ) )","target":"CreateEvent(AND(spans_time(ThisWeek()),with_attendee(FindTeamOf(recipient=CurrentUser())),has_subject(\" coding camp \")))","qid":"bc1c2cc3-bdb8-4a1f-b6ea-fc56f97166bd.0"}
{"source":"Can you schedule a time for me to meet with Amy 's boss ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Amy \" ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindManager(\" Amy \")))","qid":"daa58de5-c981-4fa4-a99a-2975234b30c1.0"}
{"source":"Schedule a Zoo Event with Jesse Rosenfeld and his team .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jesse Rosenfeld \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jesse Rosenfeld \" ) ) ) ) ) ) ) ) :subject ( ?= # ( String \" Zoo Event \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jesse Rosenfeld \"),with_attendee(FindTeamOf(recipient=\" Jesse Rosenfeld \")),has_subject(\" Zoo Event \")))","qid":"d20f0b55-a025-4534-9828-bfde0501e7d7.2"}
{"source":"Schedule another meeting this coming Monday with Abby 's team just right after the staff meeting .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ) :start ( ?= ( :end ( singleton ( :results ( FindEventWrapperWithDefaults :constraint ( EventOnDate :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :event ( Constraint[Event] :subject ( ?~= # ( String \" staff meeting \" ) ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=\" Abby \")),starts_at(:end(FindEvents(AND(starts_at(NextDOW(\" MONDAY \")),has_subject(\" staff meeting \")))))))","qid":"acfab55f-9fa1-4169-8fc9-51da45a600bb.0"}
{"source":"I need to meet with bob 's manager today","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" bob \" ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Today ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" bob \")),starts_at(Today())))","qid":"ed9d2541-6f91-4a7a-9ac0-4a312d1a8081.1"}
{"source":"Add a meeting with the whole team at 430 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( NextTime :time ( HourMinutePm :hours # ( Number 4 ) :minutes # ( Number 30.0 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(NextTime(time=HourMinutePm(hours=4,minutes=30)))))","qid":"d0fe2cc6-7b46-4edc-af22-dcad653520de.1"}
{"source":"Let 's get something going with My team , without Dan Marton , for the end of the week .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) ( AttendeeListExcludesRecipient :recipient ( ?= ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Dan Marton \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( LateDateRange :dateRange ( ThisWeek ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),avoid_attendee(refer(Recipient?(name=LIKE(Dan Marton)))),starts_at(LateDateRange(dateRange=ThisWeek()))))","qid":"561d6b4a-7a91-4a60-8688-9f5230c21aef.0"}
{"source":"Set up a meeting with the team for tomorrow morning","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( DateTimeConstraint :constraint ( Morning ) :date ( Tomorrow ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(Morning()),starts_at(Tomorrow())))","qid":"dca7da18-55d0-4008-a661-ef23f4aafa05.0"}
{"source":"Add a meeting with Kim 's reports tomorrow at 3 .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindReports :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim \" ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 3 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindReports(recipient=refer(Recipient?(name=LIKE(Kim))))),starts_at(Tomorrow()),starts_at(NumberPM(3))))","qid":"e2716180-9e2a-4c85-8d59-07e6ac69f0a3.3"}
{"source":"i need a coffee meeting with my team at noon that is not on the weekend","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( DateTimeFromDowConstraint :dowConstraint ( negate ( Weekend ) ) :time ( Noon ) ) :subject ( ?= # ( String \" coffee meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),has_subject(\" coffee meeting \"),avoid_start(Date(dow=Weekend())),starts_at(Noon())))","qid":"68141df1-7bdd-4a21-9b32-5b786bf2cfe6.0"}
{"source":"Add a meeting with my team for next Thursday at 10 am .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" THURSDAY \" ) ) :time ( NumberAM :number # ( Number 10.0 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(NextDOW(\" THURSDAY \")),starts_at(NumberAM(10))))","qid":"0cc663a4-65cb-4e3d-8c31-41d5d6d4366e.3"}
{"source":"I need to have a review with John 's manager at 4 today","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" John \" ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Today ) :time ( NumberPM :number # ( Number 4 ) ) ) ) :subject ( ?= # ( String \" review \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" John \")),has_subject(\" review \"),starts_at(Today()),starts_at(NumberPM(4))))","qid":"43e63dad-fa38-4dc2-b5d0-fbc6f996ed95.0"}
{"source":"I want to schedule Plan Sarah 's Birthday Party with my manager for tomorrow .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) :subject ( ?= # ( String \" Plan Sarah's Birthday Party \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),has_subject(\" Plan Sarah's Birthday Party \"),starts_at(Tomorrow())))","qid":"e363223c-61b8-4742-a253-ae00f12043a3.4"}
{"source":"setup up a sales meeting with Sam and his manager","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Sam \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Sam \" ) ) ) ) ) ) ) ) :subject ( ?= # ( String \" sales meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Sam \"),with_attendee(FindManager(\" Sam \")),has_subject(\" sales meeting \")))","qid":"69a085e4-0631-4402-8e7f-8f8b0be92791.0"}
{"source":"Schedule a meeting with Rebecca 's manager today .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Rebecca \" ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Today ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Rebecca \")),starts_at(Today())))","qid":"7f83fec7-491d-48dc-8da9-d37391f5ea2c.3"}
{"source":"Add dinner with Manuel 's boss for this Friday at 8 : 00 PM .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Manuel \" ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( NumberPM :number # ( Number 8 ) ) ) ) :subject ( ?= # ( String \" dinner \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Manuel \")),has_subject(\" dinner \"),starts_at(NextDOW(\" FRIDAY \")),starts_at(NumberPM(8))))","qid":"6f4dd56c-ef76-4bac-abe5-0184a8f642c1.0"}
{"source":"Hello , I need to add a Pizza Party with Kim 's team , including Elli","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Elli \" ) ) ) ) ) ) ) :subject ( ?= # ( String \" Pizza Party \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=\" Kim \")),with_attendee(\" Elli \"),has_subject(\" Pizza Party \")))","qid":"ebae405f-d82d-4281-b4b4-1f58b715bb52.0"}
{"source":"After the new hires event , I want to attend a sales meeting with Ann 's team .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Ann \" ) ) ) ) ) ) ) :start ( ?= ( :end ( singleton ( :results ( FindEventWrapperWithDefaults :constraint ( Constraint[Event] :subject ( ?~= # ( String \" new hires \" ) ) ) ) ) ) ) ) :subject ( ?= # ( String \" sales meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=\" Ann \")),has_subject(\" sales meeting \"),starts_at(:end(FindEvents(has_subject(\" new hires \"))))))","qid":"5621a90d-01c3-40ce-b641-214a71048e99.0"}
{"source":"I have a lunch meeting with my boss on thursday at 1 pm , at the chili 's","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :location ( ?= # ( LocationKeyphrase \" chili's \" ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" THURSDAY \" ) ) :time ( NumberPM :number # ( Number 1 ) ) ) ) :subject ( ?= # ( String \" lunch meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),at_location(\" chili's \"),has_subject(\" lunch meeting \"),starts_at(NextDOW(\" THURSDAY \")),starts_at(NumberPM(1))))","qid":"0b769019-843e-4c8a-a0f6-bd59e598d05e.2"}
{"source":"Schedule a meeting with bob 's manager between 1 - 5 pm for 20 minutes on thursday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" bob \" ) ) ) ) ) ) ) :duration ( ?= ( toMinutes # ( Number 20.0 ) ) ) :start ( DateTimeAndConstraint :dateTime1 ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" THURSDAY \" ) ) :time ( NumberPM :number # ( Number 1 ) ) ) :dateTime2 ( TimeAfterDateTime :dateTime ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" THURSDAY \" ) ) :time ( NumberPM :number # ( Number 1 ) ) ) :time ( NumberPM :number # ( Number 5 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" bob \")),starts_at(DateTimeRange(start=DateTime?(date=NextDOW(\" THURSDAY \"),time=NumberPM(1)),end=AND(GE(DateTime?(date=NextDOW(\" THURSDAY \"),time=NumberPM(1))),NumberPM(5)))),has_duration(toMinutes(20))))","qid":"51a8507a-5500-4ba2-b335-e003fc7c80ab.2"}
{"source":"Book a meeting with Cornelia 's team for the 6 th at 5 am .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Cornelia \" ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( nextDayOfMonth ( Today ) # ( Number 6 ) ) :time ( NumberAM :number # ( Number 5 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=\" Cornelia \")),starts_at(nextDayOfMonth(Today(),6)),starts_at(NumberAM(5))))","qid":"940667a9-5108-49ba-8455-7c1c42357641.4"}
{"source":"I need to meet with my team","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindTeamOf(recipient=CurrentUser())))","qid":"d9647175-3e9b-4782-aabd-7989c77a6a61.1"}
{"source":"Once my lunch meeting ends , I 'm going to see Carl 's team .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Carl \" ) ) ) ) ) ) ) :start ( ?= ( :end ( singleton ( :results ( FindEventWrapperWithDefaults :constraint ( Constraint[Event] :subject ( ?~= # ( String \" lunch meeting \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=\" Carl \")),starts_at(:end(FindEvents(has_subject(\" lunch meeting \"))))))","qid":"6aa568e8-69d9-45df-95b7-6ea4cd166174.0"}
{"source":"i have to lunch in my team members .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :subject ( ?= # ( String \" lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),has_subject(\" lunch \")))","qid":"53bbc03e-c022-462d-bf3f-1c70fc998ade.1"}
{"source":"schedule an appointment with my manager tomorrow at 2 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 2 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),starts_at(Tomorrow()),starts_at(NumberPM(2))))","qid":"99e311db-bae2-40ef-bd0a-864313aba0eb.1"}
{"source":"Hello i need to make a meeting with Maya and her team","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Maya \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Maya \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Maya \"),with_attendee(FindTeamOf(recipient=\" Maya \"))))","qid":"f9a30136-1c68-4a18-bee9-fa477191613e.0"}
{"source":"Can you schedule a staff meeting with Tim , Tom and Tom 's Boss tomorrow ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Tim \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Tom \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Tom \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) :subject ( ?= # ( String \" staff meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Tom \")),with_attendee(\" Tim \"),with_attendee(\" Tom \"),has_subject(\" staff meeting \"),starts_at(Tomorrow())))","qid":"dbcd1ee7-4264-4091-953f-3014d23c7fba.2"}
{"source":"I would like a meeting with the team this coming Friday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(NextDOW(\" FRIDAY \"))))","qid":"a9c20323-c875-4aa7-9b1c-9b6b5cc8b53b.0"}
{"source":"Can you schedule a lunch meeting with Marton and his skip manager ? Let 's do it for tomorrow at 1 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Marton \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Marton \" ) ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 1 ) ) ) ) :subject ( ?= # ( String \" lunch meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Marton \"),with_attendee(FindManager(FindManager(\" Marton \"))),has_subject(\" lunch meeting \"),starts_at(Tomorrow()),starts_at(NumberPM(1))))","qid":"2d6bc9f6-8920-40a7-8014-931f2908a822.0"}
{"source":"Lets go to Dinner with my Team and Crim tomorrow","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Crim \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) :subject ( ?= # ( String \" Dinner \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Crim \"),with_attendee(FindTeamOf(recipient=CurrentUser())),has_subject(\" Dinner \"),starts_at(Tomorrow())))","qid":"b3682bfc-9681-41ac-8a58-99b76fd0ed93.2"}
{"source":"schedule time with Kim 's team on Saturday morning .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim \" ) ) ) ) ) ) ) :start ( DateTimeConstraint :constraint ( Morning ) :date ( NextDOW :dow # ( DayOfWeek \" SATURDAY \" ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=\" Kim \")),starts_at(Morning()),starts_at(NextDOW(\" SATURDAY \"))))","qid":"6237a643-22f5-49c7-90f5-0b5435f06244.2"}
{"source":"Schedule a meeting with Alicia and her manager on Thursday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Alicia \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Alicia \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" THURSDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Alicia \"),with_attendee(FindManager(\" Alicia \")),starts_at(NextDOW(\" THURSDAY \"))))","qid":"f149cbf1-53ed-43ec-b893-127d3fb257a2.4"}
{"source":"Schedule a meeting with my team","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindTeamOf(recipient=CurrentUser())))","qid":"0c96ea92-2cef-4102-9c09-e694725ce5a8.0"}
{"source":"Set another meeting with my team tomorrow afternoon and include Bill Jeffcoat .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Bill Jeffcoat \" ) ) ) ) ) ) ) :start ( DateTimeConstraint :constraint ( Afternoon ) :date ( Tomorrow ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),with_attendee(\" Bill Jeffcoat \"),starts_at(Afternoon()),starts_at(Tomorrow())))","qid":"eb3ea4b2-b5b6-416a-86e5-08981c2f8df4.1"}
{"source":"Add conference call with my team to my schedule for this afternoon .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( DateTimeConstraint :constraint ( Afternoon ) :date ( Today ) ) :subject ( ?= # ( String \" conference call \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),has_subject(\" conference call \"),starts_at(Afternoon()),starts_at(Today())))","qid":"3f353824-4bc6-4272-9c74-a80876b29a02.0"}
{"source":"Right after lunch schedule a meeting with tim 's team","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" tim \" ) ) ) ) ) ) ) :start ( ?= ( :end ( singleton ( :results ( FindEventWrapperWithDefaults :constraint ( Constraint[Event] :subject ( ?~= # ( String \" lunch \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=\" tim \")),starts_at(:end(FindEvents(has_subject(\" lunch \"))))))","qid":"392d8394-d52d-4a42-a9a5-04bef9aea644.0"}
{"source":"put meet with rogers team","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" rogers \" ) ) ) ) ) ) ) :subject ( ?= # ( String \" meet \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=\" rogers \")),has_subject(\" meet \")))","qid":"7634c382-e734-44cb-ae5f-47a4e6a4a42b.0"}
{"source":"Make an event with Belinda 's boss","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Belinda \" ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindManager(\" Belinda \")))","qid":"96edfd50-96a3-4e70-9b9a-7a67e4fe1ce9.1"}
{"source":"Schedule a project meeting with Bob and his boss tomorrow at 3 .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Bob \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Bob \" ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 3 ) ) ) ) :subject ( ?= # ( String \" project meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Bob \"),with_attendee(FindManager(\" Bob \")),has_subject(\" project meeting \"),starts_at(Tomorrow()),starts_at(NumberPM(3))))","qid":"c64ff935-30ee-4bb1-a151-6190366dc248.0"}
{"source":"Add a meeting with jason and his boss about marketing .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" jason \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" jason \" ) ) ) ) ) ) ) ) :subject ( ?= # ( String \" marketing \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" jason \"),with_attendee(FindManager(\" jason \")),has_subject(\" marketing \")))","qid":"e55682aa-d5cb-4b2c-be6b-19a02416a642.1"}
{"source":"Can you set up an event with Schoffel 's reports for Monday ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindReports :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Schoffel \" ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindReports(recipient=refer(Recipient?(name=LIKE(Schoffel))))),starts_at(NextDOW(\" MONDAY \"))))","qid":"8c5c465a-11d8-4d60-9edc-bcfab8764476.2"}
{"source":"Put on schedule workout with boss on Friday at 10 am .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( NumberAM :number # ( Number 10.0 ) ) ) ) :subject ( ?= # ( String \" workout \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),has_subject(\" workout \"),starts_at(NextDOW(\" FRIDAY \")),starts_at(NumberAM(10))))","qid":"90d86c00-d81f-4812-bedc-84bec840720c.0"}
{"source":"Schedule a communications meeting with Abby and her boss on Monday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) ) ) :subject ( ?= # ( String \" communications meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Abby \"),with_attendee(FindManager(\" Abby \")),has_subject(\" communications meeting \"),starts_at(NextDOW(\" MONDAY \"))))","qid":"6262dc75-3df0-4df4-8982-8bb9ccc89712.0"}
{"source":"Book a meeting with Sarah and her supervisors this Monday at 12 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Sarah \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Sarah \" ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :time ( NumberPM :number # ( Number 12 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Sarah \"),with_attendee(FindManager(\" Sarah \")),starts_at(NextDOW(\" MONDAY \")),starts_at(NumberPM(12))))","qid":"2d4bc1ad-5728-47d3-9222-521ec3f33ff3.0"}
{"source":"I need a meeting with Abby and her skip","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Abby \"),with_attendee(FindManager(FindManager(\" Abby \")))))","qid":"8a480802-6cb0-4fac-8a6e-0f72e6611cc9.4"}
{"source":"Create a meeting with Rob 's boss tomorrow at 1 : 45","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Rob \" ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( HourMinutePm :hours # ( Number 1 ) :minutes # ( Number 45 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Rob \")),starts_at(Tomorrow()),starts_at(HourMinutePm(hours=1,minutes=45))))","qid":"9e09c9b4-ab1b-4d7e-9a7c-c9b00f92ef6b.2"}
{"source":"Now make a party and invite my team","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :subject ( ?= # ( String \" party \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),has_subject(\" party \")))","qid":"86159fa5-548f-4e6b-a895-72260c532216.3"}
{"source":"Thanks , now I need to set up a year end review with Ellen and her boss","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Ellen \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Ellen \" ) ) ) ) ) ) ) ) :subject ( ?= # ( String \" year end review \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Ellen \"),with_attendee(FindManager(\" Ellen \")),has_subject(\" year end review \")))","qid":"bf35a204-527c-409c-a332-d1f6b77418a1.4"}
{"source":"Create an event called \" Memo \" and add my reports","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindReports :recipient ( toRecipient ( CurrentUser ) ) ) ) :subject ( ?= # ( String \" Memo \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindReports(recipient=CurrentUser())),has_subject(\" Memo \")))","qid":"214edaed-219f-43f4-ae45-8615c5bbe85e.1"}
{"source":"After my meeting with the team on Friday , I need to attend another meeting with Steve 's team .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Steve \" ) ) ) ) ) ) ) :start ( ?= ( :end ( singleton ( :results ( FindEventWrapperWithDefaults :constraint ( EventOnDate :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :event ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=\" Steve \")),starts_at(:end(FindEvents(AND(starts_at(NextDOW(\" FRIDAY \")),with_attendee(FindTeamOf(recipient=CurrentUser()))))))))","qid":"11f76738-8e31-47e1-8639-ff33d3f6c3d7.0"}
{"source":"Who is my manager ? Let 's make a meeting with my manager and his team","original_target":"( do ( Yield :output ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) ( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) ) ) ) ) ) ) )","target":"do(Yield(FindManager(CurrentUser())),CreateEvent(AND(with_attendee(FindManager(CurrentUser())),with_attendee(FindTeamOf(recipient=FindManager(CurrentUser()))))))","qid":"eec1e51c-e1aa-40a3-9246-61e9a40cb346.1"}
{"source":"I want a meeting with Karen and her boss .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Karen \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Karen \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Karen \"),with_attendee(FindManager(\" Karen \"))))","qid":"37a1b5f6-b197-4e14-a685-48211ea17bad.0"}
{"source":"I have to see Arthur and his boss on the 18 th around 4 pm if possible .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Arthur \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Arthur \" ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( nextDayOfMonth ( Today ) # ( Number 18 ) ) :time ( NumberPM :number # ( Number 4 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Arthur \"),with_attendee(FindManager(\" Arthur \")),starts_at(nextDayOfMonth(Today(),18)),starts_at(NumberPM(4))))","qid":"82489324-fd22-43f0-b72e-0d4a79a36e81.2"}
{"source":"Add a meeting with the whole team at 4 : 30 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( NextTime :time ( HourMinutePm :hours # ( Number 4 ) :minutes # ( Number 30.0 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(NextTime(time=HourMinutePm(hours=4,minutes=30)))))","qid":"77176366-4868-47cc-84b3-5d6f35af006b.1"}
{"source":"I also want a tea break with my skip early on the 26 th","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) ) :start ( DateTimeConstraint :constraint ( Early ) :date ( nextDayOfMonth ( Today ) # ( Number 26 ) ) ) :subject ( ?= # ( String \" tea break \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(FindManager(CurrentUser()))),has_subject(\" tea break \"),starts_at(Early()),starts_at(nextDayOfMonth(Today(),26))))","qid":"6c6cf450-7ac4-47a4-9e42-a7a10408235f.1"}
{"source":"Can you add an event with John 's manager ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" John \" ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindManager(\" John \")))","qid":"70142e92-bf1f-42af-af19-acd62af02ea1.2"}
{"source":"Please create a meeting with Matthew and his managers at 3 p today .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Matthew \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Matthew \" ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Today ) :time ( NumberPM :number # ( Number 3 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Matthew \"),with_attendee(FindManager(\" Matthew \")),starts_at(Today()),starts_at(NumberPM(3))))","qid":"bbd23a45-97df-470a-a8c3-e1bfd64f073e.0"}
{"source":"Thanks , also I need a brunch at 1100 hours on Friday with the boss .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( HourMinuteMilitary :hours # ( Number 11 ) :minutes # ( Number 0 ) ) ) ) :subject ( ?= # ( String \" brunch \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),has_subject(\" brunch \"),starts_at(NextDOW(\" FRIDAY \")),starts_at(HourMinuteMilitary(hours=11,minutes=0))))","qid":"1bf7526a-795b-4cbc-8703-0ea12bda241b.4"}
{"source":"Make me a dinner with my Team but exclude Thanos","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) ( AttendeeListExcludesRecipient :recipient ( ?= ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Thanos \" ) ) ) ) ) ) ) ) :subject ( ?= # ( String \" dinner \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),avoid_attendee(refer(Recipient?(name=LIKE(Thanos)))),has_subject(\" dinner \")))","qid":"49905958-2066-42b1-8d64-1fc38fe4f927.1"}
{"source":"My team is requesting that we have a meeting on Friday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(NextDOW(\" FRIDAY \"))))","qid":"f57bce5b-ab43-4897-b113-1a5059ac5380.2"}
{"source":"With my team , I 'll have a meeting today .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Today ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(Today())))","qid":"2751fb60-c342-4edb-b12a-25c709c2b61f.3"}
{"source":"can you add a meeting with Amy and Pam with their bosses on the 14 th ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Amy \" ) ) ) ) ) ) ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Pam \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Amy \" ) ) ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Pam \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( nextDayOfMonth ( Today ) # ( Number 14 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Pam \")),with_attendee(\" Amy \"),with_attendee(\" Pam \"),with_attendee(FindManager(\" Amy \")),starts_at(nextDayOfMonth(Today(),14))))","qid":"f7008642-4ff7-4728-8157-1743166685b3.3"}
{"source":"Make a party with Abby 's team and Crim","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Crim \" ) ) ) ) ) ) ) :subject ( ?= # ( String \" party \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=\" Abby \")),with_attendee(\" Crim \"),has_subject(\" party \")))","qid":"cc184f89-ec35-4ae0-8349-6a9c82e47878.1"}
{"source":"i wanna meet Lian 's manager","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Lian \" ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindManager(\" Lian \")))","qid":"41841669-54ce-4877-afac-ff3b3c1d71f8.1"}
{"source":"make a code meeting with sarah and her manager in this week","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" sarah \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" sarah \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ThisWeek ) ) :subject ( ?= # ( String \" code meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" sarah \"),with_attendee(FindManager(\" sarah \")),has_subject(\" code meeting \"),starts_at(ThisWeek())))","qid":"e99b2ee5-d58b-472a-8fee-5f12150b9ad0.0"}
{"source":"create a lunch after shopping with John and his boss","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" John \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" John \" ) ) ) ) ) ) ) ) :start ( ?= ( :end ( singleton ( :results ( FindEventWrapperWithDefaults :constraint ( Constraint[Event] :subject ( ?~= # ( String \" shopping \" ) ) ) ) ) ) ) ) :subject ( ?= # ( String \" lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" John \"),with_attendee(FindManager(\" John \")),has_subject(\" lunch \"),starts_at(:end(FindEvents(has_subject(\" shopping \"))))))","qid":"1d92c9a6-a41e-4d63-ba5a-44047b4cc770.2"}
{"source":"can you add an appointment with Henny 's boss at 10 am on Tuesday ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Henny \" ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) :time ( NumberAM :number # ( Number 10.0 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Henny \")),starts_at(NextDOW(\" TUESDAY \")),starts_at(NumberAM(10))))","qid":"bd26e3e1-d116-430d-89c6-92ea903edc10.0"}
{"source":"Ok , can you schedule a football game with Dan and his team ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Dan \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Dan \" ) ) ) ) ) ) ) ) :subject ( ?= # ( String \" football game \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Dan \"),with_attendee(FindTeamOf(recipient=\" Dan \")),has_subject(\" football game \")))","qid":"056eaabb-bd84-4d55-b9ff-a93ae8b927b1.4"}
{"source":"Schedule a finance meeting with Ted and his team on Thursday afternoon .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Ted \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Ted \" ) ) ) ) ) ) ) ) :start ( DateTimeConstraint :constraint ( Afternoon ) :date ( NextDOW :dow # ( DayOfWeek \" THURSDAY \" ) ) ) :subject ( ?= # ( String \" finance meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Ted \"),with_attendee(FindTeamOf(recipient=\" Ted \")),has_subject(\" finance meeting \"),starts_at(Afternoon()),starts_at(NextDOW(\" THURSDAY \"))))","qid":"8eeac725-07e9-4297-b21e-56869ebc77c6.0"}
{"source":"i need meeting with Jennifer , her boss , Elli and her boss","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jennifer \" ) ) ) ) ) ) ( andConstraint ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jennifer \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Elli \" ) ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Elli \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Elli \")),with_attendee(\" Jennifer \"),with_attendee(FindManager(\" Jennifer \")),with_attendee(\" Elli \")))","qid":"a29f2d6c-62cb-45e9-9de0-3f7032515623.0"}
{"source":"make dinner with manager tomorrow 8 . 00 to 8 . 30 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :end ( ?= ( TimeAfterDateTime :dateTime ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberAM :number # ( Number 8 ) ) ) :time ( HourMinutePm :hours # ( Number 8 ) :minutes # ( Number 30.0 ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberAM :number # ( Number 8 ) ) ) ) :subject ( ?= # ( String \" dinner \" ) ) ) ) ) )","target":"CreateEvent(AND(ends_at(AND(GE(DateTime?(date=Tomorrow(),time=NumberAM(8))),HourMinutePm(hours=8,minutes=30))),with_attendee(FindManager(CurrentUser())),has_subject(\" dinner \"),starts_at(Tomorrow()),starts_at(NumberAM(8))))","qid":"c49f29fb-d759-4f5e-a7ff-b535d43e2759.0"}
{"source":"Make an appointment with Terry and his supervisor","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Terry \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Terry \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Terry \"),with_attendee(FindManager(\" Terry \"))))","qid":"e71e3656-a30c-4ff3-b7a4-3e2d57be27e8.0"}
{"source":"Make a meeting with David Crim and team","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" David Crim \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" David Crim \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" David Crim \"),with_attendee(FindTeamOf(recipient=\" David Crim \"))))","qid":"ec64e0ca-10f0-4400-bf8a-732c027a3a2b.1"}
{"source":"Set a meeting with David Crim and his team","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" David Crim \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" David Crim \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" David Crim \"),with_attendee(FindTeamOf(recipient=\" David Crim \"))))","qid":"f6a22152-062f-45be-ba39-9569d1d5cb4c.3"}
{"source":"set up a meeting with the team for Monday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(NextDOW(\" MONDAY \"))))","qid":"b77d37fa-b038-46b1-b890-db734dc71dab.0"}
{"source":"I need a meeting with Joanne and her skip tomorrow morning .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Joanne \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Joanne \" ) ) ) ) ) ) ) ) ) :start ( DateTimeConstraint :constraint ( Morning ) :date ( Tomorrow ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Joanne \"),with_attendee(FindManager(FindManager(\" Joanne \"))),starts_at(Morning()),starts_at(Tomorrow())))","qid":"809d3e23-f1c5-481a-ae93-6f1b6df79e11.0"}
{"source":"Put a birthday party on my calendar with my boss and my coworkers amanda , noelle and rob .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" amanda \" ) ) ) ) ) ) ) ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" noelle \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" rob \" ) ) ) ) ) ) ) ) :subject ( ?= # ( String \" birthday party \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),with_attendee(\" amanda \"),with_attendee(\" noelle \"),with_attendee(\" rob \"),has_subject(\" birthday party \")))","qid":"a07e32a6-5607-4881-9d38-0d1ae3627a22.0"}
{"source":"schedule a meeting with Amy 's manager","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Amy \" ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindManager(\" Amy \")))","qid":"6706b3b1-8fd4-42ab-99de-be18d788bf3c.2"}
{"source":"I need a meeting with Elli 's skip this afternoon .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Elli \" ) ) ) ) ) ) ) ) :start ( DateTimeConstraint :constraint ( Afternoon ) :date ( Today ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(FindManager(\" Elli \"))),starts_at(Afternoon()),starts_at(Today())))","qid":"3a40d19c-921d-4e72-b544-ee8264014439.3"}
{"source":"Ok . Instead add meeting with Riles and her boss .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Riles \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Riles \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Riles \"),with_attendee(FindManager(\" Riles \"))))","qid":"d74d8ef7-46c6-47a3-a479-06eaf68236bd.2"}
{"source":"Carol ; please put a meeting with her manager on my calendar tomorrow","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Carol \" ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Carol \")),starts_at(Tomorrow())))","qid":"6bd1ef96-7aac-459c-8a4f-64f4acf73b77.0"}
{"source":"Do I have any time I can see my team next week ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( NextWeekList ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(NextWeekList())))","qid":"ba18d738-d475-4383-8bac-ac5dfdf4b293.0"}
{"source":"meeting with Jake and his supervisor .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jake \"),with_attendee(FindManager(\" Jake \"))))","qid":"acfb47bb-3574-49d6-9070-f3c4484ac1b8.0"}
{"source":"Thanks . Can you add a meeting with Sharon 's manager ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Sharon \" ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindManager(\" Sharon \")))","qid":"357302c0-9e16-47bf-89c2-5f4f5795ac4c.2"}
{"source":"Schedule drinks with the team for Friday evening .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( DateTimeConstraint :constraint ( Evening ) :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) ) :subject ( ?= # ( String \" drinks \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),has_subject(\" drinks \"),starts_at(Evening()),starts_at(NextDOW(\" FRIDAY \"))))","qid":"c27ab570-2669-4a6a-8ede-a18f41450d9b.1"}
{"source":"Please set up a meeting with the team on Monday at breakfast","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :time ( Breakfast ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(NextDOW(\" MONDAY \")),starts_at(Breakfast())))","qid":"7227471a-53a4-44f4-a3b0-32306cc93399.0"}
{"source":"Set up a Brainstorming Meeting with my boss for Thursday at 11 am .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" THURSDAY \" ) ) :time ( NumberAM :number # ( Number 11 ) ) ) ) :subject ( ?= # ( String \" Brainstorming Meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),has_subject(\" Brainstorming Meeting \"),starts_at(NextDOW(\" THURSDAY \")),starts_at(NumberAM(11))))","qid":"69b3c357-7863-401e-a2c7-7cca57569b7d.3"}
{"source":"At 2 tomorrow set a one - on - one with Isca 's manager","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Isca \" ) ) ) ) ) ) ) :isOneOnOne ( ?= # ( Boolean true ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 2 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(is_oneOnOne(),with_attendee(FindManager(\" Isca \")),starts_at(Tomorrow()),starts_at(NumberPM(2))))","qid":"d666ffeb-184e-462e-8448-9b9af0f269ed.4"}
{"source":"Add a lunch event with Jake 's Boss 's Boss for Friday at noon .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( Noon ) ) ) :subject ( ?= # ( String \" lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(FindManager(\" Jake \"))),has_subject(\" lunch \"),starts_at(NextDOW(\" FRIDAY \")),starts_at(Noon())))","qid":"0709dcd0-cfbd-4333-9050-50456df66bcb.1"}
{"source":"Create on Tuesday afternoon a meeting with my team .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( DateTimeConstraint :constraint ( Afternoon ) :date ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(Afternoon()),starts_at(NextDOW(\" TUESDAY \"))))","qid":"2be6e2cf-b987-4fb7-9758-f7ea30bcc810.0"}
{"source":"Schedule a meeting with Pam 's boss Wednesday at 3","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Pam \" ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" WEDNESDAY \" ) ) :time ( NumberPM :number # ( Number 3 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Pam \")),starts_at(NextDOW(\" WEDNESDAY \")),starts_at(NumberPM(3))))","qid":"d8fc57f1-527e-4c77-a028-89eff71a8ac7.1"}
{"source":"I will be with my team in Kansas tomorrow","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :location ( ?= # ( LocationKeyphrase \" Kansas \" ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),at_location(\" Kansas \"),starts_at(Tomorrow())))","qid":"0c887beb-6162-4920-9cad-5c3dec0a2120.0"}
{"source":"Make a meeting with my team but without Abby","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) ( AttendeeListExcludesRecipient :recipient ( ?= ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),avoid_attendee(refer(Recipient?(name=LIKE(Abby))))))","qid":"d763a1a1-e88f-4ef8-81e9-8f426d3cc27e.0"}
{"source":"Add to calendar a pitch meeting with Ross and his manager on Thursday at 10 : 30 am .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Ross \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Ross \" ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" THURSDAY \" ) ) :time ( HourMinuteAm :hours # ( Number 10.0 ) :minutes # ( Number 30.0 ) ) ) ) :subject ( ?= # ( String \" pitch meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Ross \"),with_attendee(FindManager(\" Ross \")),has_subject(\" pitch meeting \"),starts_at(NextDOW(\" THURSDAY \")),starts_at(HourMinuteAm(hours=10,minutes=30))))","qid":"1bef2f97-a315-4f5f-a91a-b16764259f20.0"}
{"source":"I need to create an event for lunch with Luis ' manager .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Luis \" ) ) ) ) ) ) ) :subject ( ?= # ( String \" lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Luis \")),has_subject(\" lunch \")))","qid":"a3041ebc-80f0-4bf4-a698-1e5d7256c2fe.0"}
{"source":"Make me an event with Jake and his boss at the survey site .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) ) ) :location ( ?= # ( LocationKeyphrase \" the survey site \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jake \"),with_attendee(FindManager(\" Jake \")),at_location(\" the survey site \")))","qid":"c0b288b7-01f4-4cf1-86a6-8b246d998f77.2"}
{"source":"make a holiday party with Dan Schoffel and his team","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Dan Schoffel \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Dan Schoffel \" ) ) ) ) ) ) ) ) :subject ( ?= # ( String \" holiday party \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Dan Schoffel \"),with_attendee(FindTeamOf(recipient=\" Dan Schoffel \")),has_subject(\" holiday party \")))","qid":"0e323a56-01bf-463d-8964-a89249d44d4b.0"}
{"source":"Create a time slot for a meeting with my team tomorrow .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(Tomorrow())))","qid":"d9b9ca8c-8506-4431-9132-0aa89b792170.4"}
{"source":"Set up a round table with David Crim and David Lax and his team .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" David Crim \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" David Lax \" ) ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" David Lax \" ) ) ) ) ) ) ) ) :subject ( ?= # ( String \" round table \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=\" David Lax \")),with_attendee(\" David Crim \"),with_attendee(\" David Lax \"),has_subject(\" round table \")))","qid":"66662830-32e2-4984-a931-f88e8a2ee686.2"}
{"source":"I 'll be meeting Angela and her manager 9 : 30 Tuesday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Angela \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Angela \" ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) :time ( HourMinuteAm :hours # ( Number 9 ) :minutes # ( Number 30.0 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Angela \"),with_attendee(FindManager(\" Angela \")),starts_at(NextDOW(\" TUESDAY \")),starts_at(HourMinuteAm(hours=9,minutes=30))))","qid":"a55f8dc7-1657-4fcf-bbd5-e4eb5918131c.0"}
{"source":"Make me a meeting with Kim , her manager , Elli , and her manager","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim \" ) ) ) ) ) ) ) ) ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Elli \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Elli \" ) ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Kim \"),with_attendee(FindManager(\" Kim \")),with_attendee(\" Elli \"),with_attendee(FindManager(\" Elli \"))))","qid":"c0cab6e3-cbf0-4dc6-ae9f-c76a73758d87.0"}
{"source":"add an appointment with my boss on Monday at 11 am","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :time ( NumberAM :number # ( Number 11 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),starts_at(NextDOW(\" MONDAY \")),starts_at(NumberAM(11))))","qid":"81022ea9-d0ad-4d64-8f9c-6ccafded704f.0"}
{"source":"I need an appointment with Steven and his boss for tomorrow night .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Steven \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Steven \" ) ) ) ) ) ) ) ) :start ( DateTimeConstraint :constraint ( Night ) :date ( Tomorrow ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Steven \"),with_attendee(FindManager(\" Steven \")),starts_at(Night()),starts_at(Tomorrow())))","qid":"954f5749-b624-489f-abdb-c296fde181ca.0"}
{"source":"I need a meeting with Elli and her team on Wednesday afternoon .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Elli \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Elli \" ) ) ) ) ) ) ) ) :start ( DateTimeConstraint :constraint ( Afternoon ) :date ( NextDOW :dow # ( DayOfWeek \" WEDNESDAY \" ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Elli \"),with_attendee(FindTeamOf(recipient=\" Elli \")),starts_at(Afternoon()),starts_at(NextDOW(\" WEDNESDAY \"))))","qid":"01d06e12-f445-43da-9159-84a7c16efada.0"}
{"source":"Can you set a meeting with my managers manager ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindManager(FindManager(CurrentUser()))))","qid":"8d313e2f-0757-4a24-ab5f-60a4ec7d3bf4.3"}
{"source":"Thanks , schedule a new hire planning session on Friday at 2 : 00 pm . with Abby and her boss","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( NumberPM :number # ( Number 2 ) ) ) ) :subject ( ?= # ( String \" new hire planning session \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Abby \"),with_attendee(FindManager(\" Abby \")),has_subject(\" new hire planning session \"),starts_at(NextDOW(\" FRIDAY \")),starts_at(NumberPM(2))))","qid":"038f5076-835b-4fd8-90ae-a594acef4b57.2"}
{"source":"I need to be with my team tomorrow for 918 days","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :nonEmptyBase ( EventAllDayStartingDateForPeriod :event ( Constraint[Event] ) :period ( toDays # ( Number 918 ) ) :startDate ( Tomorrow ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),has_duration(toDays(918)),starts_at(Tomorrow()),starts_at(Time(hour=0,minute=0))))","qid":"ab3f230c-5524-4aa0-86b6-6b51bccb096c.3"}
{"source":"Who is Kevin 's skip ? I need a meeting with both of them before the end of the week .","original_target":"( do ( Yield :output ( FindManager :recipient ( FindManager :recipient x0 ) ) ) ( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kevin \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( FindManager :recipient x0 ) ) ) ) :start ( Constraint[DateTime] :date ( ThisWeek ) ) ) ) ) ) )","target":"do(Yield(FindManager(FindManager($x0))),CreateEvent(AND(with_attendee(\" Kevin \"),with_attendee(FindManager(FindManager($x0))),starts_at(ThisWeek()))))","qid":"f3a29cc2-d842-4678-94a5-038d63285466.0"}
{"source":"Add an appointment with my team for Thursday at 5 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" THURSDAY \" ) ) :time ( NumberPM :number # ( Number 5 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(NextDOW(\" THURSDAY \")),starts_at(NumberPM(5))))","qid":"ef822b59-4c82-4794-8922-92db6bbd90c8.2"}
{"source":"Thursday I have a lunch with boss at 1 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" THURSDAY \" ) ) :time ( NumberPM :number # ( Number 1 ) ) ) ) :subject ( ?= # ( String \" lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),has_subject(\" lunch \"),starts_at(NextDOW(\" THURSDAY \")),starts_at(NumberPM(1))))","qid":"25e0009f-3b3c-4b75-8f4c-5b398f3c0a80.1"}
{"source":"Please schedule a call with my manager Friday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) ) ) :subject ( ?= # ( String \" call \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),has_subject(\" call \"),starts_at(NextDOW(\" FRIDAY \"))))","qid":"2a207f04-6185-480d-bdf3-77fdf26fc867.4"}
{"source":"ask all the staff members to come to starbucks for lunch","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :location ( ?= # ( LocationKeyphrase \" starbucks \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),at_location(\" starbucks \")))","qid":"f72176d2-5634-4562-974c-cd6b347d6d64.0"}
{"source":"create meeting with my boss on monday at 1","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :time ( NumberPM :number # ( Number 1 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),starts_at(NextDOW(\" MONDAY \")),starts_at(NumberPM(1))))","qid":"0f3978b8-51c0-4c21-8197-992a50425ff5.0"}
{"source":"I have a meeting with Jana and her manager next Thursday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jana \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jana \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" THURSDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jana \"),with_attendee(FindManager(\" Jana \")),starts_at(NextDOW(\" THURSDAY \"))))","qid":"c245d619-0495-475b-9776-e7d48b8b2ea1.0"}
{"source":"Put on my calendar meeting with my manager on Thursday at 2 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" THURSDAY \" ) ) :time ( NumberPM :number # ( Number 2 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),starts_at(NextDOW(\" THURSDAY \")),starts_at(NumberPM(2))))","qid":"a4d2045b-e422-4b2f-90cb-2ca97a378b65.0"}
{"source":"The team and I will meet on Tuesday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(NextDOW(\" TUESDAY \"))))","qid":"23c93edc-8eaf-491c-8247-1de064aa2a95.2"}
{"source":"Schedule a finance meeting with Lous and his team","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Lous \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Lous \" ) ) ) ) ) ) ) ) :subject ( ?= # ( String \" finance meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Lous \"),with_attendee(FindTeamOf(recipient=\" Lous \")),has_subject(\" finance meeting \")))","qid":"ca22ef76-5078-4a7e-852e-83b74187442c.4"}
{"source":"Give me a meeting on Tuesday with Loraine and Jimmy and I want their supervisors there as well .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Loraine \" ) ) ) ) ) ) ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jimmy \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Loraine \" ) ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jimmy \" ) ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Loraine \"),with_attendee(FindManager(\" Jimmy \")),with_attendee(\" Jimmy \"),with_attendee(FindManager(\" Loraine \")),starts_at(NextDOW(\" TUESDAY \"))))","qid":"52c1c401-9bcc-45ee-b5c8-a2f785013271.1"}
{"source":"Make a meeting with Dan Schoffel 's reports","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindReports :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Dan Schoffel \" ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindReports(recipient=refer(Recipient?(name=LIKE(Dan Schoffel))))))","qid":"5245dbe1-3440-48b7-8ace-29a00bc73e23.1"}
{"source":"My date with my team is on Friday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) ) ) :subject ( ?= # ( String \" date \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),has_subject(\" date \"),starts_at(NextDOW(\" FRIDAY \"))))","qid":"78069b1d-ae6a-4037-8b13-9704c40243de.3"}
{"source":"Schedule a meeting with Jake 's skip .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindManager(FindManager(\" Jake \"))))","qid":"efb6bd99-c92f-44e0-b380-e4834df38a28.1"}
{"source":"I need to spend the weekend with my team","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ThisWeekend ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(ThisWeekend())))","qid":"c78f262b-e9ad-4053-9eb3-f9a71bc7ea2b.0"}
{"source":"Organize a meeting for me and Sally 's manager at 10 am . Call it tea break and put it at The Ruby Slipper on Canal Street .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Sally \" ) ) ) ) ) ) ) :location ( ?= # ( LocationKeyphrase \" The Ruby Slipper on Canal Street \" ) ) :start ( ?= ( NextTime :time ( NumberAM :number # ( Number 10.0 ) ) ) ) :subject ( ?= # ( String \" tea break \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Sally \")),at_location(\" The Ruby Slipper on Canal Street \"),has_subject(\" tea break \"),starts_at(NextTime(time=NumberAM(10)))))","qid":"cd408d18-230d-490e-a663-9c01e347044a.0"}
{"source":"Schedule conference with the team for next Saturday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" SATURDAY \" ) ) ) ) :subject ( ?= # ( String \" conference \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),has_subject(\" conference \"),starts_at(NextDOW(\" SATURDAY \"))))","qid":"4343bb57-7be1-4e02-b3fd-5779619c41ac.4"}
{"source":"Thanks , please schedule a meet - and - greet with Abby and her team for Friday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) ) ) :subject ( ?= # ( String \" meet-and-greet \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Abby \"),with_attendee(FindTeamOf(recipient=\" Abby \")),has_subject(\" meet_and_greet \"),starts_at(NextDOW(\" FRIDAY \"))))","qid":"bd4566a2-abde-4668-87f0-eee05ae13cb9.3"}
{"source":"Add meeting with boss to tomorrow at 2 : 15 pm for 30 minutes .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :duration ( ?= ( toMinutes # ( Number 30.0 ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( HourMinutePm :hours # ( Number 2 ) :minutes # ( Number 15 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(has_duration(toMinutes(30)),with_attendee(FindManager(CurrentUser())),starts_at(Tomorrow()),starts_at(HourMinutePm(hours=2,minutes=15))))","qid":"f6f2b690-cdbe-47aa-ab36-08cb9b22c03d.0"}
{"source":"schedule a meeting with Jacob 's manager Wednesday afternoon","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jacob \" ) ) ) ) ) ) ) :start ( DateTimeConstraint :constraint ( Afternoon ) :date ( NextDOW :dow # ( DayOfWeek \" WEDNESDAY \" ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Jacob \")),starts_at(Afternoon()),starts_at(NextDOW(\" WEDNESDAY \"))))","qid":"6528ae54-b0aa-4f9b-b1d5-65d359848bd1.2"}
{"source":"Yes , please create a meeting with Paula and her supervisor , on Friday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Paula \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Paula \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Paula \"),with_attendee(FindManager(\" Paula \")),starts_at(NextDOW(\" FRIDAY \"))))","qid":"37735a1b-48fc-419d-863d-cf4b98cb3a38.1"}
{"source":"create meeting with my manager tomorrow","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),starts_at(Tomorrow())))","qid":"64bda405-2214-4f71-a9bc-9119586cf91b.0"}
{"source":"I want to meet with Jake and his supervisor on Tuesday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jake \"),with_attendee(FindManager(\" Jake \")),starts_at(NextDOW(\" TUESDAY \"))))","qid":"acfb47bb-3574-49d6-9070-f3c4484ac1b8.2"}
{"source":"add a meeting with Amanda 's boss tomorrow at 2 pm calling it catch up","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Amanda \" ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 2 ) ) ) ) :subject ( ?= # ( String \" catch up \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Amanda \")),has_subject(\" catch up \"),starts_at(Tomorrow()),starts_at(NumberPM(2))))","qid":"fa61cd57-abf4-4e88-aaac-570c349e11f4.1"}
{"source":"I must put together a meeting with my team this afternoon .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( DateTimeConstraint :constraint ( Afternoon ) :date ( Today ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(Afternoon()),starts_at(Today())))","qid":"c512903e-853b-4f01-933a-2dc2c950c02b.1"}
{"source":"TOMORROW SET SCHEDULE TO MEET Cindy 's MANAGER AT 10 PM","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Cindy \" ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 10.0 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Cindy \")),starts_at(Tomorrow()),starts_at(NumberPM(10))))","qid":"3c427d4e-5e40-4d19-a4f9-d9813a74956a.1"}
{"source":"Great , I want to put a conference with Lenny and his supervisor on Friday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Lenny \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Lenny \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) ) ) :subject ( ?= # ( String \" conference \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Lenny \"),with_attendee(FindManager(\" Lenny \")),has_subject(\" conference \"),starts_at(NextDOW(\" FRIDAY \"))))","qid":"acfb47bb-3574-49d6-9070-f3c4484ac1b8.4"}
{"source":"I want a meeting scheduled on Monday with my team","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(NextDOW(\" MONDAY \"))))","qid":"d0802159-4fb7-4fc5-b219-b7cc3de8e8e7.0"}
{"source":"i have to dinner my team members","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :subject ( ?= # ( String \" dinner \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),has_subject(\" dinner \")))","qid":"c18600ba-12a5-4877-8c8f-7952ada08772.1"}
{"source":"I need to meet with Crim 's team","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Crim \" ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindTeamOf(recipient=\" Crim \")))","qid":"9b22e669-378b-49f2-8990-c194fc662bf0.0"}
{"source":"Can you schedule a meeting with Hunter 's boss on December 15 , 2019 sometime between 9 am and noon .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Hunter \" ) ) ) ) ) ) ) :start ( DateTimeAndConstraint :dateTime1 ( DateAtTimeWithDefaults :date ( MDY :day # ( Number 15 ) :month # ( Month \" DECEMBER \" ) :year # ( Number 2019 ) ) :time ( NumberAM :number # ( Number 9 ) ) ) :dateTime2 ( TimeAfterDateTime :dateTime ( DateAtTimeWithDefaults :date ( MDY :day # ( Number 15 ) :month # ( Month \" DECEMBER \" ) :year # ( Number 2019 ) ) :time ( NumberAM :number # ( Number 9 ) ) ) :time ( Noon ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Hunter \")),starts_at(DateTimeRange(start=DateTime?(date=MDY(month=Month(\" DECEMBER \"),day=15,year=2019),time=NumberAM(9)),end=AND(GE(DateTime?(date=MDY(month=Month(\" DECEMBER \"),day=15,year=2019),time=NumberAM(9))),Noon())))))","qid":"902a403d-e953-47c3-9428-3b06ec67ab67.1"}
{"source":"I want to meet with Marge 's manager Tuesday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Marge \" ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Marge \")),starts_at(NextDOW(\" TUESDAY \"))))","qid":"b65f37d3-fbd9-43f2-8d5c-8645154f3897.3"}
{"source":"I need a meeting room in Seattle with my team tomorrow","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :location ( andConstraint ( ?= # ( LocationKeyphrase \" Seattle \" ) ) ( roomRequest ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),at_location(\" Seattle \"),at_location(roomRequest()),starts_at(Tomorrow())))","qid":"681424c6-38de-494e-8925-56b02674a772.2"}
{"source":"Find 45 minutes on Friday for a meeting with Ham and his supervisor","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Ham \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Ham \" ) ) ) ) ) ) ) ) :duration ( ?= ( toMinutes # ( Number 45 ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Ham \"),with_attendee(FindManager(\" Ham \")),starts_at(NextDOW(\" FRIDAY \")),has_duration(toMinutes(45))))","qid":"b5518b70-419c-4b7c-8d2c-00110e0e34c2.0"}
{"source":"i 'd also like to have a team meetings with all team members next Tuesday morning at 9 am","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) :time ( NumberAM :number # ( Number 9 ) ) ) ) :subject ( ?= # ( String \" team meetings \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),has_subject(\" team meetings \"),starts_at(NextDOW(\" TUESDAY \")),starts_at(NumberAM(9))))","qid":"a1ef16f5-10ca-428f-ae11-2165b0ad1a23.9"}
{"source":"I 'd like to put a meeting on my calendar for coffee with my boss at Macrina Bakery on Wednesday at their Belltown location .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :location ( ?= # ( LocationKeyphrase \" Macrina Bakery \" ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" WEDNESDAY \" ) ) ) ) :subject ( ?= # ( String \" coffee \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),at_location(\" Macrina Bakery \"),has_subject(\" coffee \"),starts_at(NextDOW(\" WEDNESDAY \"))))","qid":"fe548cfe-617f-4056-82c0-aba8f95d8c2d.0"}
{"source":"I need a dinner date with Kim Possible and her skip tomorrow .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim Possible \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim Possible \" ) ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) :subject ( ?= # ( String \" dinner date \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Kim Possible \"),with_attendee(FindManager(FindManager(\" Kim Possible \"))),has_subject(\" dinner date \"),starts_at(Tomorrow())))","qid":"de7fcef6-577b-4539-b32c-3cee7a38da80.2"}
{"source":"Can you make an appointment tomorrow with tom 's manager ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" tom \" ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" tom \")),starts_at(Tomorrow())))","qid":"35edb411-7adc-40a6-b6c0-0cc7fe42fb8f.1"}
{"source":"Please create lunch with boss tomorrow at 11 am","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberAM :number # ( Number 11 ) ) ) ) :subject ( ?= # ( String \" lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),has_subject(\" lunch \"),starts_at(Tomorrow()),starts_at(NumberAM(11))))","qid":"c3eca98e-95f0-4e01-9c32-a67dd165e3b6.1"}
{"source":"Meeting with Abby and her Supervisor ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Abby \"),with_attendee(FindManager(\" Abby \"))))","qid":"91f1a13e-fd00-4a46-914a-b4f4de7c8b54.4"}
{"source":"create a meeting with rory 's boss next week","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Rory \" ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( NextWeekList ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Rory \")),starts_at(NextWeekList())))","qid":"27d797f7-ab9d-42be-bdbf-02915f68d828.1"}
{"source":"make a lunch event with my boss at 2 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( NextTime :time ( NumberPM :number # ( Number 2 ) ) ) ) :subject ( ?= # ( String \" lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),has_subject(\" lunch \"),starts_at(NextTime(time=NumberPM(2)))))","qid":"61bf79c6-a313-40a5-b982-70ab50123b54.3"}
{"source":"Can you schedule Apple Picking with my boss for tomorrow at 10 am ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberAM :number # ( Number 10.0 ) ) ) ) :subject ( ?= # ( String \" Apple Picking \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),has_subject(\" Apple Picking \"),starts_at(Tomorrow()),starts_at(NumberAM(10))))","qid":"902211a1-37f7-4852-94b1-a3bf468a77e5.4"}
{"source":"Make a meeting with Kim 's team","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim \" ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindTeamOf(recipient=\" Kim \")))","qid":"fcebbb46-9437-40ae-b887-6d70deaaa3e8.0"}
{"source":"schedula a meeting with John 's manager today","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" John \" ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Today ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" John \")),starts_at(Today())))","qid":"60deacaa-ddf8-4a5c-a9c5-b43a01d209f0.4"}
{"source":"Can you schedule a meeting between Nancy , James and their two bosses ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Nancy \" ) ) ) ) ) ) ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" James \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Nancy \" ) ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" James \" ) ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Nancy \"),with_attendee(FindManager(\" James \")),with_attendee(\" James \"),with_attendee(FindManager(\" Nancy \"))))","qid":"82f4a240-837c-49cb-a4b5-fe32ff994e97.1"}
{"source":"Can you schedule a meeting with my boss two Tuesdays from today at 3 : 00 pm ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( nextDayOfWeek ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) # ( DayOfWeek \" TUESDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),starts_at(nextDayOfWeek(NextDOW(\" TUESDAY \"),DayOfWeek(\" TUESDAY \")))))","qid":"5c4a3239-1778-4403-a920-f3b6fe07a37b.1"}
{"source":"Schedule a dinner with Simone , his boss , Janet and her boss at the cafeteria","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Simone \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Simone \" ) ) ) ) ) ) ) ) ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Janet \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Janet \" ) ) ) ) ) ) ) ) ) :location ( ?= # ( LocationKeyphrase \" cafeteria \" ) ) :subject ( ?= # ( String \" dinner \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Simone \"),with_attendee(FindManager(\" Simone \")),with_attendee(\" Janet \"),with_attendee(FindManager(\" Janet \")),at_location(\" cafeteria \"),has_subject(\" dinner \")))","qid":"153990a5-5c76-4561-9881-47b177e27303.1"}
{"source":"I want a meeting with my team and dan schoffel 's team","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" dan schoffel \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),with_attendee(FindTeamOf(recipient=\" dan schoffel \"))))","qid":"3018cbcf-a930-4552-890c-9fe438fda6b6.2"}
{"source":"I need to schedule a meeting with Tara and her manager .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Tara \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Tara \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Tara \"),with_attendee(FindManager(\" Tara \"))))","qid":"cf36c929-4573-4fa3-a7f1-a4e13bafbe5c.4"}
{"source":"Can you please set up a meeting for me with Sara and Max and their managers tomorrow afternoon around 1 ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Sara \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Sara \" ) ) ) ) ) ) ) ) ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Max \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Max \" ) ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 1 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Sara \"),with_attendee(FindManager(\" Sara \")),with_attendee(\" Max \"),with_attendee(FindManager(\" Max \")),starts_at(Tomorrow()),starts_at(NumberPM(1))))","qid":"8cbc5022-88d0-48ca-94d5-a7e1e17370db.2"}
{"source":"Make me an event for 3 pm tomorrow with my team","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 3 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(Tomorrow()),starts_at(NumberPM(3))))","qid":"471380f8-305c-4b7c-a3bb-7535dcc4ae65.0"}
{"source":"Schedule a review meeting with David Lax and his team on Wednesday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" David Lax \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" David Lax \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" WEDNESDAY \" ) ) ) ) :subject ( ?= # ( String \" review meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" David Lax \"),with_attendee(FindTeamOf(recipient=\" David Lax \")),has_subject(\" review meeting \"),starts_at(NextDOW(\" WEDNESDAY \"))))","qid":"53c4c29e-a0c4-4a21-bc2c-280c0e75bff0.2"}
{"source":"Hey lets make a meeting with my team tomorrow from 1 till end of work day .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :end ( ?= ( TimeAfterDateTime :dateTime ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 1 ) ) ) :time ( EndOfWorkDay ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 1 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(ends_at(AND(GE(DateTime?(date=Tomorrow(),time=NumberPM(1))),EndOfWorkDay())),with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(Tomorrow()),starts_at(NumberPM(1))))","qid":"4adeced1-28ea-436f-b046-f4ad156f3e3a.0"}
{"source":"I need to schedule a luncheon dance party with Dan Schoffel and his team on October 31 st at noon .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Dan Schoffel \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Dan Schoffel \" ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( MD :day # ( Number 31 ) :month # ( Month \" OCTOBER \" ) ) :time ( Noon ) ) ) :subject ( ?= # ( String \" luncheon dance party \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Dan Schoffel \"),with_attendee(FindTeamOf(recipient=\" Dan Schoffel \")),has_subject(\" luncheon dance party \"),starts_at(MD(month=\" OCTOBER \",day=31)),starts_at(Noon())))","qid":"672c9cd3-5c49-46ec-a0f3-eab7a120873d.0"}
{"source":"After the comedy special I need to set something up with Lloyd 's team .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Lloyd \" ) ) ) ) ) ) ) :start ( ?= ( :end ( singleton ( :results ( FindEventWrapperWithDefaults :constraint ( Constraint[Event] :subject ( ?~= # ( String \" comedy special \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=\" Lloyd \")),starts_at(:end(FindEvents(has_subject(\" comedy special \"))))))","qid":"ccafc802-ff1c-45ea-a8a6-3076e4bc1f5f.4"}
{"source":"Book a meeting with Abby 's team","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindTeamOf(recipient=\" Abby \")))","qid":"547dbde5-25a7-4f8e-851f-a738d199247c.1"}
{"source":"Schedule lunch with Jennifer Watts ' team on the 11 th","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jennifer Watts \" ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( nextDayOfMonth ( Today ) # ( Number 11 ) ) ) ) :subject ( ?= # ( String \" lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=\" Jennifer Watts \")),has_subject(\" lunch \"),starts_at(nextDayOfMonth(Today(),11))))","qid":"6512a5d1-d31f-451b-a83b-66904c3b4d1e.0"}
{"source":"I would like to meet with my manager earlier than monday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?< ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),starts_at(LT(NextDOW(\" MONDAY \")))))","qid":"e194ba9d-ccfc-4fa4-ad50-ce665e62430a.0"}
{"source":"make an appointment with my Rachel 's boss at today 6 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Rachel \" ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Today ) :time ( NumberPM :number # ( Number 6 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Rachel \")),starts_at(Today()),starts_at(NumberPM(6))))","qid":"7c3056d2-24a0-410d-aa40-6f7d5c684bb1.0"}
{"source":"I need a meeting this Friday with Kyle and his manager at 1 PM","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kyle \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kyle \" ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( NumberPM :number # ( Number 1 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Kyle \"),with_attendee(FindManager(\" Kyle \")),starts_at(NextDOW(\" FRIDAY \")),starts_at(NumberPM(1))))","qid":"34d9ff68-e72e-48b7-b825-ba0a3e8fb1e6.0"}
{"source":"Create a meeting with Abby Gonano and her team .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby Gonano \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby Gonano \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Abby Gonano \"),with_attendee(FindTeamOf(recipient=\" Abby Gonano \"))))","qid":"2cc71580-b634-434e-9865-74dcdea97343.1"}
{"source":"add a meeting with all team members tomorrow","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(Tomorrow())))","qid":"f88db65f-29f7-49de-9ca1-8a0490594771.0"}
{"source":"I also need a team meeting with everyone on my team","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :subject ( ?= # ( String \" team meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),has_subject(\" team meeting \")))","qid":"f4019877-3588-4e7d-9fa1-f7bc2c511ddd.6"}
{"source":"Thursday I have a lunch with boss at 1 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" THURSDAY \" ) ) :time ( NumberPM :number # ( Number 1 ) ) ) ) :subject ( ?= # ( String \" lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),has_subject(\" lunch \"),starts_at(NextDOW(\" THURSDAY \")),starts_at(NumberPM(1))))","qid":"f4cc68c8-2772-43f0-9162-31985cc05364.1"}
{"source":"Please make an appointment with the boss for 3 pm tomorrow .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 3 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),starts_at(Tomorrow()),starts_at(NumberPM(3))))","qid":"562a15a6-01c5-41c5-b630-52aa9d3d16c0.0"}
{"source":"Set up an event with Greg and his boss Friday at 3 .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Greg \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Greg \" ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( NumberPM :number # ( Number 3 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Greg \"),with_attendee(FindManager(\" Greg \")),starts_at(NextDOW(\" FRIDAY \")),starts_at(NumberPM(3))))","qid":"8a480802-6cb0-4fac-8a6e-0f72e6611cc9.0"}
{"source":"I need to meet with Jake and his boss","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jake \"),with_attendee(FindManager(\" Jake \"))))","qid":"7b6fd772-aaab-4015-9519-5b7c3459c2b6.4"}
{"source":"create a meeting with Elli , kim and their managers for thursday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Elli \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" kim \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Elli \" ) ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" kim \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" THURSDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" kim \")),with_attendee(FindManager(\" Elli \")),with_attendee(\" Elli \"),with_attendee(\" kim \"),starts_at(NextDOW(\" THURSDAY \"))))","qid":"d64b9bb5-2a71-4eb4-8f3c-5d2be35dda1e.1"}
{"source":"Make an appointment with my team for next Monday at 9 am .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :time ( NumberAM :number # ( Number 9 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(NextDOW(\" MONDAY \")),starts_at(NumberAM(9))))","qid":"da38f1c6-148e-48f4-a8d9-13cb3e525518.3"}
{"source":"Schedule the appointment with the boss for Monday at 2 : 00 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :time ( NumberPM :number # ( Number 2 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),starts_at(NextDOW(\" MONDAY \")),starts_at(NumberPM(2))))","qid":"ce106bb8-8720-4fc8-b8ee-de60655bf8ba.2"}
{"source":"Next Monday I have meeting at 10 am with Ella 's boss","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Ella \" ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :time ( NumberAM :number # ( Number 10.0 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Ella \")),starts_at(NextDOW(\" MONDAY \")),starts_at(NumberAM(10))))","qid":"f0c397ed-9d05-4487-956a-5b9adacb46e4.3"}
{"source":"I want to have brunch with Emily and her manager this weekend","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Emily \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Emily \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ThisWeekend ) ) :subject ( ?= # ( String \" brunch \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Emily \"),with_attendee(FindManager(\" Emily \")),has_subject(\" brunch \"),starts_at(ThisWeekend())))","qid":"026de97f-5e18-4cf6-8b0d-8d812fab4a63.0"}
{"source":"Help in making an appointment with the staff tomorrow at 11 am","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindReports :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberAM :number # ( Number 11 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindReports(recipient=CurrentUser())),starts_at(Tomorrow()),starts_at(NumberAM(11))))","qid":"27dcfdd4-91a9-457c-9f17-23336a344eb7.0"}
{"source":"Drinking coffee with boss at 5 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( NextTime :time ( NumberPM :number # ( Number 5 ) ) ) ) :subject ( ?= # ( String \" Drinking coffee \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),has_subject(\" Drinking coffee \"),starts_at(NextTime(time=NumberPM(5)))))","qid":"d397ff34-c1d9-44c8-af0d-b8afcbcfab65.0"}
{"source":"i need a meeting with kim , crim , and their bosses","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" kim \" ) ) ) ) ) ) ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" crim \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" kim \" ) ) ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" crim \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" crim \")),with_attendee(\" kim \"),with_attendee(\" crim \"),with_attendee(FindManager(\" kim \"))))","qid":"c2ad3536-74e9-4e64-8072-b8154ca6d687.0"}
{"source":"Show event list for this week . Add meeting with my team and jennifer .","original_target":"( do ( Yield :output ( FindEventWrapperWithDefaults :constraint ( EventDuringRange :event ( Constraint[Event] ) :range ( ThisWeek ) ) ) ) ( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" jennifer \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) ) ) ) ) ) )","target":"do(Yield(FindEvents(at_time(ThisWeek()))),CreateEvent(AND(with_attendee(\" jennifer \"),with_attendee(FindTeamOf(recipient=CurrentUser())))))","qid":"f0504cba-b9ef-4ac9-ab83-526b2091c660.0"}
{"source":"I have to see my team on Monday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(NextDOW(\" MONDAY \"))))","qid":"c512903e-853b-4f01-933a-2dc2c950c02b.4"}
{"source":"set up meeting with Scott 's boss for monday at 12","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Scott \" ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :time ( NumberPM :number # ( Number 12 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Scott \")),starts_at(NextDOW(\" MONDAY \")),starts_at(NumberPM(12))))","qid":"cb14db8b-2583-4645-a313-19bcd6110032.1"}
{"source":"Schedule an appointment with Randy 's team after I finish my manicure .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Randy \" ) ) ) ) ) ) ) :start ( ?= ( :end ( singleton ( :results ( FindEventWrapperWithDefaults :constraint ( Constraint[Event] :subject ( ?~= # ( String \" manicure \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=\" Randy \")),starts_at(:end(FindEvents(has_subject(\" manicure \"))))))","qid":"4f03d051-782e-4f8c-aa05-e83adcb03260.0"}
{"source":"Please put a meeting with Lous and his manager tomorrow","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Lous \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Lous \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Lous \"),with_attendee(FindManager(\" Lous \")),starts_at(Tomorrow())))","qid":"0c06bcf6-a040-4478-a951-082d292dc7bd.3"}
{"source":"Invite Sam , Denice and their respective supervisors to tomorrow 's morning meeting","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Sam \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Sam \" ) ) ) ) ) ) ) ) ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Denice \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Denice \" ) ) ) ) ) ) ) ) ) :start ( DateTimeConstraint :constraint ( Morning ) :date ( Tomorrow ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Sam \"),with_attendee(FindManager(\" Sam \")),with_attendee(\" Denice \"),with_attendee(FindManager(\" Denice \")),starts_at(Morning()),starts_at(Tomorrow())))","qid":"070831c4-56bf-4815-af39-9d426178489d.3"}
{"source":"I have a Dinner Meeting with Paul and his boss at 7 pm on Saturday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Paul \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Paul \" ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" SATURDAY \" ) ) :time ( NumberPM :number # ( Number 7 ) ) ) ) :subject ( ?= # ( String \" Dinner Meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Paul \"),with_attendee(FindManager(\" Paul \")),has_subject(\" Dinner Meeting \"),starts_at(NextDOW(\" SATURDAY \")),starts_at(NumberPM(7))))","qid":"97908e9b-adc1-4da8-80e0-ce1d03e6e9ad.2"}
{"source":"Schedule Intervention with Boss and invite Frodo for tomorrow at 1 PM .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Frodo \" ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 1 ) ) ) ) :subject ( ?= # ( String \" Intervention \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),with_attendee(\" Frodo \"),has_subject(\" Intervention \"),starts_at(Tomorrow()),starts_at(NumberPM(1))))","qid":"cf07dff8-a72b-4af0-827f-029fe95d1dde.0"}
{"source":"please make meet with kim possible team on tomorrow","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" kim possible \" ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=\" kim possible \")),starts_at(Tomorrow())))","qid":"d3272b28-933a-42ee-8783-04fa1743884a.1"}
{"source":"Add to calendar a evaluation hearing with John and his boss on Tuesday at 10 am .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" John \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" John \" ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) :time ( NumberAM :number # ( Number 10.0 ) ) ) ) :subject ( ?= # ( String \" evaluation hearing \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" John \"),with_attendee(FindManager(\" John \")),has_subject(\" evaluation hearing \"),starts_at(NextDOW(\" TUESDAY \")),starts_at(NumberAM(10))))","qid":"6c13fa16-8254-4675-8a30-abba23b3ebe8.0"}
{"source":"Also , book a meeting with Sala 's manager next Tuesday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Sala \" ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Sala \")),starts_at(NextDOW(\" TUESDAY \"))))","qid":"0452181a-4997-4a7f-9649-77ce2136a9f8.4"}
{"source":"Can you make an event for Fred and his supervisor for golf on Friday ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Fred \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Fred \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) ) ) :subject ( ?= # ( String \" golf \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Fred \"),with_attendee(FindManager(\" Fred \")),has_subject(\" golf \"),starts_at(NextDOW(\" FRIDAY \"))))","qid":"81cf24a3-88ed-4545-b3ee-53168f2d2caf.0"}
{"source":"I need an event for tomorrow with Lax 's team but with Abby too","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Lax \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=\" Lax \")),with_attendee(\" Abby \"),starts_at(Tomorrow())))","qid":"139a22d6-2cfd-423e-a9c6-3ebfca4747fd.2"}
{"source":"Hello ! I need to you to plan a meeting with Jake and his boss and David Lax and his boss","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) ) ) ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" David Lax \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" David Lax \" ) ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jake \"),with_attendee(FindManager(\" Jake \")),with_attendee(\" David Lax \"),with_attendee(FindManager(\" David Lax \"))))","qid":"26d1bbd5-ec8e-4c44-a3ff-b801de8df8df.0"}
{"source":"schedule dinner with the team after the game","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( :end ( singleton ( :results ( FindEventWrapperWithDefaults :constraint ( Constraint[Event] :subject ( ?~= # ( String \" game \" ) ) ) ) ) ) ) ) :subject ( ?= # ( String \" dinner \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),has_subject(\" dinner \"),starts_at(:end(FindEvents(has_subject(\" game \"))))))","qid":"fb287c6f-5dfc-4978-90fb-46c77087f592.7"}
{"source":"Let 's start over . Add a meeting with boss tomorrow at 1 : 30 .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( HourMinutePm :hours # ( Number 1 ) :minutes # ( Number 30.0 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),starts_at(Tomorrow()),starts_at(HourMinutePm(hours=1,minutes=30))))","qid":"ac0c3157-af1e-433c-9aad-0ff6355349b8.2"}
{"source":"Create a meeting with my boss to talk about company goals tomorrow at 2 : 00 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 2 ) ) ) ) :subject ( ?= # ( String \" talk about company goals \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),has_subject(\" talk about company goals \"),starts_at(Tomorrow()),starts_at(NumberPM(2))))","qid":"97c34ad1-3e3f-45f3-a32b-510d0bf7e910.1"}
{"source":"Okay , add a one - on - one with my supervisor this afternoon","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :isOneOnOne ( ?= # ( Boolean true ) ) :start ( DateTimeConstraint :constraint ( Afternoon ) :date ( Today ) ) ) ) ) )","target":"CreateEvent(AND(is_oneOnOne(),with_attendee(FindManager(CurrentUser())),starts_at(Afternoon()),starts_at(Today())))","qid":"aaa1f842-c970-4839-8628-53000cd01d98.4"}
{"source":"Set up a training with Fred and his manager .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Fred \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Fred \" ) ) ) ) ) ) ) ) :subject ( ?= # ( String \" training \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Fred \"),with_attendee(FindManager(\" Fred \")),has_subject(\" training \")))","qid":"a031ae03-b1f1-447f-89d9-75b1efe795ce.0"}
{"source":"Please make a conference call with Abby and her skip","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ) ) ) :subject ( ?= # ( String \" conference call \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Abby \"),with_attendee(FindManager(FindManager(\" Abby \"))),has_subject(\" conference call \")))","qid":"dcaa5782-47cd-4a2b-9f3b-615ae242731a.3"}
{"source":"Now schedule a follow - up party , with my team but exclude Jesse .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) ( AttendeeListExcludesRecipient :recipient ( ?= ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jesse \" ) ) ) ) ) ) ) ) :subject ( ?= # ( String \" follow-up party \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),avoid_attendee(refer(Recipient?(name=LIKE(Jesse)))),has_subject(\" follow_up party \")))","qid":"cc184f89-ec35-4ae0-8349-6a9c82e47878.3"}
{"source":"i need a meet with berlin 's boss tomorrow .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" berlin \" ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" berlin \")),starts_at(Tomorrow())))","qid":"e9054572-f08f-4099-882e-f0b78226de0a.0"}
{"source":"Can you set a meeting with Kim 's skip tomorrow ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(FindManager(\" Kim \"))),starts_at(Tomorrow())))","qid":"bdbd67a3-9fe3-41c8-93d5-f1d2884c6374.3"}
{"source":"Schedule meeting with the Supervisor on monday at 10 am","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :time ( NumberAM :number # ( Number 10.0 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),starts_at(NextDOW(\" MONDAY \")),starts_at(NumberAM(10))))","qid":"5d139e80-1053-4b6a-8a3c-8dc3be190907.0"}
{"source":"Set up lunch tomorrow with Jake and his boss .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) :subject ( ?= # ( String \" lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jake \"),with_attendee(FindManager(\" Jake \")),has_subject(\" lunch \"),starts_at(Tomorrow())))","qid":"90838099-2615-4433-8b18-a9103231ffeb.0"}
{"source":"I want to be with my team tomorrow in Bellevue","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :location ( ?= # ( LocationKeyphrase \" Bellevue \" ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),at_location(\" Bellevue \"),starts_at(Tomorrow())))","qid":"5f13f19c-5b51-4776-a2bb-40e0c843a432.0"}
{"source":"I am meeting with my team tomorrow at 3 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 3 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(Tomorrow()),starts_at(NumberPM(3))))","qid":"b6d97830-1b96-44ca-91f7-412c89aeed44.2"}
{"source":"Add a meeting with Nelly , Tony and their respective bosses to be conducted tomorrow .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Nelly \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Tony \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Nelly \" ) ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Tony \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Tony \")),with_attendee(FindManager(\" Nelly \")),with_attendee(\" Nelly \"),with_attendee(\" Tony \"),starts_at(Tomorrow())))","qid":"c064032a-4710-4651-9255-5445ca3a4bda.4"}
{"source":"Create meeting with Cole 's boss for Monday at 2 pm to 3 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Cole \" ) ) ) ) ) ) ) :end ( ?= ( TimeAfterDateTime :dateTime ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :time ( NumberPM :number # ( Number 2 ) ) ) :time ( NumberPM :number # ( Number 3 ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :time ( NumberPM :number # ( Number 2 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(ends_at(AND(GE(DateTime?(date=NextDOW(\" MONDAY \"),time=NumberPM(2))),NumberPM(3))),with_attendee(FindManager(\" Cole \")),starts_at(NextDOW(\" MONDAY \")),starts_at(NumberPM(2))))","qid":"19c6f1be-db12-4e4a-9408-790dfae02fe8.0"}
{"source":"Create a event for Ben with team","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Ben \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Ben \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Ben \"),with_attendee(FindTeamOf(recipient=\" Ben \"))))","qid":"aaed6204-513c-4a85-adef-d2018e1b58f1.0"}
{"source":"Schedule a meeting with John and his manager today at 3 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" John \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" John \" ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Today ) :time ( NumberPM :number # ( Number 3 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" John \"),with_attendee(FindManager(\" John \")),starts_at(Today()),starts_at(NumberPM(3))))","qid":"e2cf35e7-8550-4191-859c-900794de1d14.2"}
{"source":"Can I get a meeting with my team on Tuesday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(NextDOW(\" TUESDAY \"))))","qid":"b53069ea-0155-480f-a291-363ef4d9d21f.4"}
{"source":"Create a meeting with myself and Tyreek 's supervisor tomorrow at noon .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Tyreek \" ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( Noon ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Tyreek \")),starts_at(Tomorrow()),starts_at(Noon())))","qid":"ce765372-3322-4bdf-b24c-2902c245d528.4"}
{"source":"CHECK FOR THE AVAILABILITY OF SUSIE 'S SUPERVISOR","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" SUSIE \" ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindManager(\" SUSIE \")))","qid":"32b1c028-1d2d-49aa-aee7-3f12ffacf951.3"}
{"source":"I have a Graphic Design Seminar at 1 pm on Friday with Casey and her manager .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Casey \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Casey \" ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( NumberPM :number # ( Number 1 ) ) ) ) :subject ( ?= # ( String \" Graphic Design Seminar \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Casey \"),with_attendee(FindManager(\" Casey \")),has_subject(\" Graphic Design Seminar \"),starts_at(NextDOW(\" FRIDAY \")),starts_at(NumberPM(1))))","qid":"90391651-ced2-4a49-b232-530ee2b8fade.1"}
{"source":"Yes . Create a project follow up with Brenda and her boss tomorrow .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Brenda \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Brenda \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) :subject ( ?= # ( String \" project follow up \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Brenda \"),with_attendee(FindManager(\" Brenda \")),has_subject(\" project follow up \"),starts_at(Tomorrow())))","qid":"3dce88f5-f41d-4190-8acd-559ae5fe4ba8.1"}
{"source":"I need an appointment to update memos with John and his manager , preferably tomorrow at 5 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" John \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" John \" ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 5 ) ) ) ) :subject ( ?= # ( String \" update memos \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" John \"),with_attendee(FindManager(\" John \")),has_subject(\" update memos \"),starts_at(Tomorrow()),starts_at(NumberPM(5))))","qid":"fe406153-5e5b-40cd-bb94-97c7d9532c3e.0"}
{"source":"Hello i need to make a meeting with Maya and her team","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Maya \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Maya \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Maya \"),with_attendee(FindTeamOf(recipient=\" Maya \"))))","qid":"cb4e05c4-be3f-4def-be13-7bb3abb73b8e.0"}
{"source":"schedule a meeting with Abby , Elli and their managers","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Elli \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Elli \" ) ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Abby \"),with_attendee(FindManager(\" Elli \")),with_attendee(\" Elli \"),with_attendee(FindManager(\" Abby \"))))","qid":"151c8744-6698-4b55-a7da-a2c868fc8ecc.0"}
{"source":"Schedule a morning bagel run , with my team but do n't include Dan Marton .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) ( AttendeeListExcludesRecipient :recipient ( ?= ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Dan Marton \" ) ) ) ) ) ) ) ) :subject ( ?= # ( String \" morning bagel run \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),avoid_attendee(refer(Recipient?(name=LIKE(Dan Marton)))),has_subject(\" morning bagel run \")))","qid":"82eedd12-f12c-4919-afb2-56e424095f9a.2"}
{"source":"I need to make an appointment with my boss","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindManager(CurrentUser())))","qid":"536464f6-7c6b-41b3-b130-bdacd6aac851.0"}
{"source":"I need a meeting with Abby 's team","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindTeamOf(recipient=\" Abby \")))","qid":"bbaa880d-ac04-4b5d-8a9f-469240165b92.4"}
{"source":"Schedule lunch at lunch on Friday with my team","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( Lunch ) ) ) :subject ( ?= # ( String \" lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),has_subject(\" lunch \"),starts_at(NextDOW(\" FRIDAY \")),starts_at(Lunch())))","qid":"23df908c-b2ce-4573-9f72-f59a52a23baa.0"}
{"source":"book a meeting with sam and his manager today before noon","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" sam \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" sam \" ) ) ) ) ) ) ) ) :start ( OnDateBeforeTime :date ( Today ) :time ( Noon ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" sam \"),with_attendee(FindManager(\" sam \")),starts_at(OnDateBeforeTime(date=Today(),time=Noon()))))","qid":"6be5a542-5ece-49e8-9b0c-268f52ed19c7.4"}
{"source":"I need a meeting with Tammy 's managers tomorrow morning","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Tammy \" ) ) ) ) ) ) ) :start ( DateTimeConstraint :constraint ( Morning ) :date ( Tomorrow ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Tammy \")),starts_at(Morning()),starts_at(Tomorrow())))","qid":"59b9ba72-e4fe-4b42-972c-360772a5ec38.0"}
{"source":"Make me an event with my team for tomorrow at 3 : 57 am","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( HourMinuteAm :hours # ( Number 3 ) :minutes # ( Number 57 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(Tomorrow()),starts_at(HourMinuteAm(hours=3,minutes=57))))","qid":"cdbee09d-2d55-4e98-9935-73658fc32cc0.0"}
{"source":"Schedule meeting with Carl and his boss at 2 : 30 today .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Carl \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Carl \" ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Today ) :time ( HourMinutePm :hours # ( Number 2 ) :minutes # ( Number 30.0 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Carl \"),with_attendee(FindManager(\" Carl \")),starts_at(Today()),starts_at(HourMinutePm(hours=2,minutes=30))))","qid":"60878a60-e62f-4767-84ed-a4bfc50ddef2.0"}
{"source":"Schedule something with my manager","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindManager(CurrentUser())))","qid":"10034fb6-114b-4b2c-87d7-b436717d2da7.2"}
{"source":"Schedule Art Lesson with Martha and her boss for 1 pm on Friday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Martha \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Martha \" ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( NumberPM :number # ( Number 1 ) ) ) ) :subject ( ?= # ( String \" Art Lesson \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Martha \"),with_attendee(FindManager(\" Martha \")),has_subject(\" Art Lesson \"),starts_at(NextDOW(\" FRIDAY \")),starts_at(NumberPM(1))))","qid":"ebe26fd7-5341-4fef-9c1d-dda13902b1c9.4"}
{"source":"book a meeting with Ken and his manager tomorrow","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Ken \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Ken \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Ken \"),with_attendee(FindManager(\" Ken \")),starts_at(Tomorrow())))","qid":"7fedb6c3-00ff-45db-aae5-f722474ebff6.1"}
{"source":"I want to have coffee with James , May and their respective supervisors at the cafeteria this afternoon .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" James \" ) ) ) ) ) ) ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" May \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" James \" ) ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" May \" ) ) ) ) ) ) ) ) ) :location ( ?= # ( LocationKeyphrase \" cafeteria \" ) ) :start ( DateTimeConstraint :constraint ( Afternoon ) :date ( Today ) ) :subject ( ?= # ( String \" coffee \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" James \"),with_attendee(FindManager(\" May \")),with_attendee(\" May \"),with_attendee(FindManager(\" James \")),at_location(\" cafeteria \"),has_subject(\" coffee \"),starts_at(Afternoon()),starts_at(Today())))","qid":"6da7f7df-4f4a-4951-9d79-6a08bd75916c.2"}
{"source":"The is going to be a Surprise Party for Lucy and Boss for July 25 th at 1 PM .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Lucy \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Lucy \" ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( MD :day # ( Number 25 ) :month # ( Month \" JULY \" ) ) :time ( NumberPM :number # ( Number 1 ) ) ) ) :subject ( ?= # ( String \" Surprise Party \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Lucy \"),with_attendee(FindManager(\" Lucy \")),has_subject(\" Surprise Party \"),starts_at(MD(month=\" JULY \",day=25)),starts_at(NumberPM(1))))","qid":"96d77ff6-09f9-4d25-84be-fbb964284746.0"}
{"source":"I will be in Seattle tomorrow with my team . Can you get us a room ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :location ( andConstraint ( ?= # ( LocationKeyphrase \" Seattle \" ) ) ( roomRequest ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),at_location(\" Seattle \"),at_location(roomRequest()),starts_at(Tomorrow())))","qid":"60bf1d15-bd89-4ed3-a337-84378841033b.4"}
{"source":"Friday I have a meeting with coworkers at 2 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( NumberPM :number # ( Number 2 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(NextDOW(\" FRIDAY \")),starts_at(NumberPM(2))))","qid":"44669d20-6e24-4c64-a79b-c1a3f86a74a0.1"}
{"source":"Schedule an open - bar party for my team but exclude Abby .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) ( AttendeeListExcludesRecipient :recipient ( ?= ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ) ) :subject ( ?= # ( String \" open-bar party \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),avoid_attendee(refer(Recipient?(name=LIKE(Abby)))),has_subject(\" open_bar party \")))","qid":"de29acdc-f5ad-4e82-a262-d9d343383b8d.2"}
{"source":"Please put a date to meet with Shirley and boss","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Shirley \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Shirley \" ) ) ) ) ) ) ) ) :subject ( ?= # ( String \" date \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Shirley \"),with_attendee(FindManager(\" Shirley \")),has_subject(\" date \")))","qid":"7e9edfd6-35d3-4928-8f2c-63b5bef33891.2"}
{"source":"put dinner meeting with yulella 's team","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" yulella \" ) ) ) ) ) ) ) :subject ( ?= # ( String \" dinner meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=\" yulella \")),has_subject(\" dinner meeting \")))","qid":"f7b5e46b-fafb-43fc-bea4-8e3afb59a269.4"}
{"source":"I need to see Jill and her whole team today .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jill \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jill \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Today ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jill \"),with_attendee(FindTeamOf(recipient=\" Jill \")),starts_at(Today())))","qid":"281bec10-0302-4938-98b9-258086d038f9.0"}
{"source":"Create a meeting with my boss on Thursday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" THURSDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),starts_at(NextDOW(\" THURSDAY \"))))","qid":"71853733-1334-4ccc-8c28-b6957f25f2a1.0"}
{"source":"I need to meet with my boss tomorrow before 11 am .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( OnDateBeforeTime :date ( Tomorrow ) :time ( NumberAM :number # ( Number 11 ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),starts_at(OnDateBeforeTime(date=Tomorrow(),time=NumberAM(11)))))","qid":"8affc92b-7bdf-4067-81f7-6e32f909ad23.4"}
{"source":"put meeting with my team","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindTeamOf(recipient=CurrentUser())))","qid":"7ff78623-8ce2-403b-ad70-d984b889f454.0"}
{"source":"Put me in a meeting with David Lax 's team","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" David Lax \" ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindTeamOf(recipient=\" David Lax \")))","qid":"029a4ae0-b5c8-4927-b9f9-b281a466d636.0"}
{"source":"Create an event called lunch with James , Mary and their bosses","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" James \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Mary \" ) ) ) ) ) ) ) ( andConstraint ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" James \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Mary \" ) ) ) ) ) ) ) ) ) :subject ( ?= # ( String \" lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" James \"),with_attendee(\" Mary \"),with_attendee(FindManager(\" James \")),with_attendee(FindManager(\" Mary \")),has_subject(\" lunch \")))","qid":"2ead7091-2abc-40ab-a152-9ed76891e225.5"}
{"source":"create work conference and invite supervisor","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :subject ( ?= # ( String \" work conference \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),has_subject(\" work conference \")))","qid":"14063ffb-ad8c-44ba-b68f-30d44f143ef5.0"}
{"source":"create work thing on tuesday with my boss","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) ) ) :subject ( ?= # ( String \" work thing \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),has_subject(\" work thing \"),starts_at(NextDOW(\" TUESDAY \"))))","qid":"9b772604-c89c-4a5b-b8b5-a3f2212f9081.0"}
{"source":"Schedule a meeting with Kim 's report on Friday at 3 : 00 pm to talk about contracts .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindReports :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim \" ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( NumberPM :number # ( Number 3 ) ) ) ) :subject ( ?= # ( String \" talk about contracts \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindReports(recipient=refer(Recipient?(name=LIKE(Kim))))),has_subject(\" talk about contracts \"),starts_at(NextDOW(\" FRIDAY \")),starts_at(NumberPM(3))))","qid":"5bf4c68b-ee2e-4c4d-a64d-a753c7add772.3"}
{"source":"i want to meet alice 's manager tuesday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" alice \" ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" alice \")),starts_at(NextDOW(\" TUESDAY \"))))","qid":"52249af8-d0c8-4de6-a672-24e0e48db39f.0"}
{"source":"create a meeting with my team on Monday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(NextDOW(\" MONDAY \"))))","qid":"b6d97830-1b96-44ca-91f7-412c89aeed44.0"}
{"source":"oh ok make a meeting with my boos","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindManager(CurrentUser())))","qid":"81d10c64-4afb-4f89-9f42-b2db564c8a27.1"}
{"source":"From the 4 th to the 23 rd I will be with my team","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :nonEmptyBase ( EventAllDayForDateRange :dateRange ( DateAndConstraint :date1 ( nextDayOfMonth ( Today ) # ( Number 4 ) ) :date2 ( nextDayOfMonth ( nextDayOfMonth ( Today ) # ( Number 4 ) ) # ( Number 23 ) ) ) :event ( Constraint[Event] ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),spans_time(DateAndConstraint(date1=nextDayOfMonth(Today(),4),date2=nextDayOfMonth(nextDayOfMonth(Today(),4),23)))))","qid":"c7b61f60-6686-48dd-9395-5772055393a9.0"}
{"source":"create meeting with Sam 's boss on tuesday night","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Sam \" ) ) ) ) ) ) ) :start ( DateTimeConstraint :constraint ( Night ) :date ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Sam \")),starts_at(Night()),starts_at(NextDOW(\" TUESDAY \"))))","qid":"3626cde5-f576-4eb5-b2bc-24e3810b96a1.0"}
{"source":"Set up a conference with Kim Possible and her team .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim Possible \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim Possible \" ) ) ) ) ) ) ) ) :subject ( ?= # ( String \" conference \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Kim Possible \"),with_attendee(FindTeamOf(recipient=\" Kim Possible \")),has_subject(\" conference \")))","qid":"76036482-8077-4d94-9153-aca4743a737a.2"}
{"source":"Please schedule a meeting with Michael , Elli and both of their managers for noon tomorrow .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Michael \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Michael \" ) ) ) ) ) ) ) ) ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Elli \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Elli \" ) ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( Noon ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Michael \"),with_attendee(FindManager(\" Michael \")),with_attendee(\" Elli \"),with_attendee(FindManager(\" Elli \")),starts_at(Tomorrow()),starts_at(Noon())))","qid":"68346318-e301-4c96-b0f7-5a92db92fdf9.0"}
{"source":"I need a meeting with Meghan , James and their supervisors this week","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Meghan \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" James \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Meghan \" ) ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" James \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ThisWeek ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" James \")),with_attendee(FindManager(\" Meghan \")),with_attendee(\" Meghan \"),with_attendee(\" James \"),starts_at(ThisWeek())))","qid":"c064032a-4710-4651-9255-5445ca3a4bda.3"}
{"source":"Add meeting with boss to tomorrow at 2 : 15 pm for 30 minutes .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :duration ( ?= ( toMinutes # ( Number 30.0 ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( HourMinutePm :hours # ( Number 2 ) :minutes # ( Number 15 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(has_duration(toMinutes(30)),with_attendee(FindManager(CurrentUser())),starts_at(Tomorrow()),starts_at(HourMinutePm(hours=2,minutes=15))))","qid":"c40b0883-14d0-4460-b004-b7c669bd7370.0"}
{"source":"I will need to schedule a meeting with Craig and his immediate supervisor for next Monday at 9 AM .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Craig \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Craig \" ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :time ( NumberAM :number # ( Number 9 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Craig \"),with_attendee(FindManager(\" Craig \")),starts_at(NextDOW(\" MONDAY \")),starts_at(NumberAM(9))))","qid":"16e33434-39ac-4834-ba70-18e52ffec39c.0"}
{"source":"Please make an event and invite my manager .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindManager(CurrentUser())))","qid":"feb2d0d5-b990-49e0-8d00-3305e9a0adc8.3"}
{"source":"Josh and his boss are coming to town tomorrow and I need to pick them up from the airport at noon .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Josh \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Josh \" ) ) ) ) ) ) ) ) :location ( ?= # ( LocationKeyphrase \" airport \" ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( Noon ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Josh \"),with_attendee(FindManager(\" Josh \")),at_location(\" airport \"),starts_at(Tomorrow()),starts_at(Noon())))","qid":"a395acb9-22ad-4ae0-86e9-5319e01b5aa7.2"}
{"source":"Schedule a meeting with those who report to me for Thursday afternoon .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindReports :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( DateTimeConstraint :constraint ( Afternoon ) :date ( NextDOW :dow # ( DayOfWeek \" THURSDAY \" ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindReports(recipient=CurrentUser())),starts_at(Afternoon()),starts_at(NextDOW(\" THURSDAY \"))))","qid":"f3cfcaa6-3e42-446e-a7a1-343371da490c.4"}
{"source":"have the team meet on Wednesday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" WEDNESDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(NextDOW(\" WEDNESDAY \"))))","qid":"f064dd83-5aff-4148-958e-5678da9f97fd.0"}
{"source":"meeting with Abby and her manager ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Abby \"),with_attendee(FindManager(\" Abby \"))))","qid":"9f03add2-234d-4c63-a36f-d4b30a29eefa.0"}
{"source":"create work thing on saturday with boss","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" SATURDAY \" ) ) ) ) :subject ( ?= # ( String \" work thing \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),has_subject(\" work thing \"),starts_at(NextDOW(\" SATURDAY \"))))","qid":"d39e7e11-bb04-42af-b718-ca28bda57224.0"}
{"source":"Schedule a meeting David Crim 's team on Monday at 4 : 00 PM .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" David Crim \" ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :time ( NumberPM :number # ( Number 4 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=\" David Crim \")),starts_at(NextDOW(\" MONDAY \")),starts_at(NumberPM(4))))","qid":"8b02806f-593e-4702-8c7c-fe07fe211afd.1"}
{"source":"Hey . Make an event with Kim 's team but make sure Jesse is n't there","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim \" ) ) ) ) ) ) ) ( AttendeeListExcludesRecipient :recipient ( ?= ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jesse \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=\" Kim \")),avoid_attendee(refer(Recipient?(name=LIKE(Jesse))))))","qid":"139a22d6-2cfd-423e-a9c6-3ebfca4747fd.0"}
{"source":"Create a meeting with Abby 's team","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindTeamOf(recipient=\" Abby \")))","qid":"7c8fc548-d943-4883-bca2-2b1131d44759.1"}
{"source":"please make a meet with my team","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindTeamOf(recipient=CurrentUser())))","qid":"14bb30f9-1f99-4dec-9669-b8c2e802cff4.0"}
{"source":"I want to have a meeting with my team September 3 rd at 11 : 00 am .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( MD :day # ( Number 3 ) :month # ( Month \" SEPTEMBER \" ) ) :time ( NumberAM :number # ( Number 11 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(MD(month=\" SEPTEMBER \",day=3)),starts_at(NumberAM(11))))","qid":"c878fcd7-6572-4b11-a5a3-91738fddf59f.0"}
{"source":"I need and event with Frank and his boss for Tuesday at 10 am .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Frank \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Frank \" ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) :time ( NumberAM :number # ( Number 10.0 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Frank \"),with_attendee(FindManager(\" Frank \")),starts_at(NextDOW(\" TUESDAY \")),starts_at(NumberAM(10))))","qid":"c64ff935-30ee-4bb1-a151-6190366dc248.3"}
{"source":"Set a meeting with the team for Thursday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" THURSDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(NextDOW(\" THURSDAY \"))))","qid":"78069b1d-ae6a-4037-8b13-9704c40243de.0"}
{"source":"i wanna meet Marigold 's boss at today 3 pm to 6 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Marigold \" ) ) ) ) ) ) ) :end ( ?= ( TimeAfterDateTime :dateTime ( DateAtTimeWithDefaults :date ( Today ) :time ( NumberPM :number # ( Number 3 ) ) ) :time ( NumberPM :number # ( Number 6 ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Today ) :time ( NumberPM :number # ( Number 3 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(ends_at(AND(GE(DateTime?(date=Today(),time=NumberPM(3))),NumberPM(6))),with_attendee(FindManager(\" Marigold \")),starts_at(Today()),starts_at(NumberPM(3))))","qid":"a768969a-d1e7-4c0d-91d3-99af63b993c1.0"}
{"source":"Schedule a lunch with Dante and his boss for two days from today","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Dante \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Dante \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( adjustByPeriod ( Today ) ( toDays # ( Number 2 ) ) ) ) ) :subject ( ?= # ( String \" lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Dante \"),with_attendee(FindManager(\" Dante \")),has_subject(\" lunch \"),starts_at(adjustByPeriod(Today(),toDays(2)))))","qid":"2b3719ff-6b15-4fb5-b207-dd0ad8f626ae.0"}
{"source":"Please add meeting with June 's Manager on Saturday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" June \" ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" SATURDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" June \")),starts_at(NextDOW(\" SATURDAY \"))))","qid":"1a25682f-b82c-4aa9-9837-5edc0f8661f5.1"}
{"source":"Schedule a planning session with Bob and his boss at Chili 's on Thursday at 4 : 00 pm for 1 hour .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Bob \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Bob \" ) ) ) ) ) ) ) ) :duration ( ?= ( toHours # ( Number 1 ) ) ) :location ( ?= # ( LocationKeyphrase \" Chili's \" ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" THURSDAY \" ) ) :time ( NumberPM :number # ( Number 4 ) ) ) ) :subject ( ?= # ( String \" planning session \" ) ) ) ) ) )","target":"CreateEvent(AND(has_duration(toHours(1)),with_attendee(\" Bob \"),with_attendee(FindManager(\" Bob \")),at_location(\" Chili's \"),has_subject(\" planning session \"),starts_at(NextDOW(\" THURSDAY \")),starts_at(NumberPM(4))))","qid":"0e50bf6f-fda8-405e-a9db-0a25bf0db3c2.1"}
{"source":"put on \" appointment \" with manager tomorrow morning 9 . 00 to 9 . 00 am","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :end ( ?= ( TimeAfterDateTime :dateTime ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberAM :number # ( Number 9 ) ) ) :time ( NumberAM :number # ( Number 9 ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberAM :number # ( Number 9 ) ) ) ) :subject ( ?= # ( String \" appointment \" ) ) ) ) ) )","target":"CreateEvent(AND(ends_at(AND(GE(DateTime?(date=Tomorrow(),time=NumberAM(9))),NumberAM(9))),with_attendee(FindManager(CurrentUser())),has_subject(\" appointment \"),starts_at(Tomorrow()),starts_at(NumberAM(9))))","qid":"23dc943f-e4dc-43f8-9845-67e7193f3525.2"}
{"source":"Let 's make a meeting called pay raise with Bonnie 's manager on friday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Bonnie \" ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) ) ) :subject ( ?= # ( String \" pay raise \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Bonnie \")),has_subject(\" pay raise \"),starts_at(NextDOW(\" FRIDAY \"))))","qid":"abf20f6b-590c-4926-a609-4f63f87a458a.3"}
{"source":"Make an event at 2 pm tomorrow my Abby 's team but without Jesse","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ) ( AttendeeListExcludesRecipient :recipient ( ?= ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jesse \" ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 2 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=\" Abby \")),avoid_attendee(refer(Recipient?(name=LIKE(Jesse)))),starts_at(Tomorrow()),starts_at(NumberPM(2))))","qid":"cc184f89-ec35-4ae0-8349-6a9c82e47878.0"}
{"source":"Can you add dinner with Karina and her manager tomorrow ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Karina \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Karina \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) :subject ( ?= # ( String \" dinner \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Karina \"),with_attendee(FindManager(\" Karina \")),has_subject(\" dinner \"),starts_at(Tomorrow())))","qid":"e067282f-e526-4b57-a30f-5a6bf42f6b8c.2"}
{"source":"Please schedule an hour long meeting with Keith 's team directly after the morning meeting .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Keith \" ) ) ) ) ) ) ) :duration ( ?= ( toHours # ( Number 1 ) ) ) :start ( ?= ( :end ( singleton ( :results ( FindEventWrapperWithDefaults :constraint ( EventOnDateWithTimeRange :event ( EventOnDate :date ( Today ) :event ( Constraint[Event] ) ) :timeRange ( Morning ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=\" Keith \")),starts_at(:end(FindEvents(AND(starts_at(Today()),at_time(Morning()))))),has_duration(toHours(1))))","qid":"ccafc802-ff1c-45ea-a8a6-3076e4bc1f5f.0"}
{"source":"Schedule a picnic with David Crim and his team .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" David Crim \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" David Crim \" ) ) ) ) ) ) ) ) :subject ( ?= # ( String \" picnic \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" David Crim \"),with_attendee(FindTeamOf(recipient=\" David Crim \")),has_subject(\" picnic \")))","qid":"7344f6e1-dfe4-4dab-bd5b-dcd17bd93d95.0"}
{"source":"Make a meeting with Jake 's team for next friday please","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=\" Jake \")),starts_at(NextDOW(\" FRIDAY \"))))","qid":"8ea4d433-1a04-4e8f-ac8d-da2ea175b06c.0"}
{"source":"I need to schedule a meeting with Mr. Price , Ruby 's Manager , for Friday August 9 th at 10 am","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Mr. Price \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Ruby \" ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( MD :day # ( Number 9 ) :month # ( Month \" AUGUST \" ) ) :time ( NumberAM :number # ( Number 10.0 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Mr. Price \"),with_attendee(FindManager(\" Ruby \")),starts_at(MD(month=\" AUGUST \",day=9)),starts_at(NumberAM(10))))","qid":"c8d22dce-895b-4ad5-a9c9-a15571f37e25.0"}
{"source":"SET UP A MEETING WITH MY WORKERS AT NOON","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( NextTime :time ( Noon ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(NextTime(time=Noon()))))","qid":"1a20447d-b44b-40dc-8d6b-eb723926098f.0"}
{"source":"I need a end of day meeting today with my team before our presentation tomorrow .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Today ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(Today())))","qid":"9250eadd-37d8-4729-a515-cae49f9850f4.0"}
{"source":"Add a team meeting with Jake , his boss , Elli and her boss","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) ) ) ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Elli \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Elli \" ) ) ) ) ) ) ) ) ) :subject ( ?= # ( String \" team meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jake \"),with_attendee(FindManager(\" Jake \")),with_attendee(\" Elli \"),with_attendee(FindManager(\" Elli \")),has_subject(\" team meeting \")))","qid":"6d45452e-7b03-49b9-b8ba-4b518a3fe120.2"}
{"source":"Schedule meeting with boss for Tuesday the 26 th at 1 : 00 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( nextDayOfMonth ( Today ) # ( Number 26 ) ) :time ( NumberPM :number # ( Number 1 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),starts_at(nextDayOfMonth(Today(),26)),starts_at(NumberPM(1))))","qid":"3fc70bac-98dd-4566-ae11-de09f5fc964e.3"}
{"source":"Add a meeting with Elli , her manager , Kim and her supervisor please for Friday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Elli \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Elli \" ) ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Kim \")),with_attendee(\" Kim \"),with_attendee(\" Elli \"),with_attendee(FindManager(\" Elli \")),starts_at(NextDOW(\" FRIDAY \"))))","qid":"31eff775-7b2e-4acf-9874-7af560eccbce.0"}
{"source":"I need to create an event to meet with my boss tomorrow at 9 am","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberAM :number # ( Number 9 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),starts_at(Tomorrow()),starts_at(NumberAM(9))))","qid":"f3e4b9cc-df4c-401e-aeeb-1e417ea3b5ab.0"}
{"source":"I have a date with Marton and his skip Monday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Marton \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Marton \" ) ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) ) ) :subject ( ?= # ( String \" date \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Marton \"),with_attendee(FindManager(FindManager(\" Marton \"))),has_subject(\" date \"),starts_at(NextDOW(\" MONDAY \"))))","qid":"07ac8e0c-a2e5-4c50-8b07-9076f715ea0a.0"}
{"source":"Schedule a team meeting with my team on December 24 th at 8 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( MD :day # ( Number 24 ) :month # ( Month \" DECEMBER \" ) ) :time ( NumberPM :number # ( Number 8 ) ) ) ) :subject ( ?= # ( String \" team meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),has_subject(\" team meeting \"),starts_at(MD(month=\" DECEMBER \",day=24)),starts_at(NumberPM(8))))","qid":"494a631f-0edb-4703-8400-4b3d307fe978.2"}
{"source":"I need to meet with Rokaru 's boss at 3 pm tomorrow about scheduling .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Rokaru \" ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 3 ) ) ) ) :subject ( ?= # ( String \" about scheduling \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Rokaru \")),has_subject(\" about scheduling \"),starts_at(Tomorrow()),starts_at(NumberPM(3))))","qid":"3058bd9a-c972-4776-a46a-cdebd38b736f.0"}
{"source":"I had a one - on - one with my manager last monday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :isOneOnOne ( ?= # ( Boolean true ) ) :start ( Constraint[DateTime] :date ( ?= ( previousDayOfWeek ( Today ) # ( DayOfWeek \" MONDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),starts_at(previousDayOfWeek(Today(),DayOfWeek(\" MONDAY \"))),is_oneOnOne()))","qid":"44ffc29b-c476-4233-b2f6-3480cd2ce5d5.0"}
{"source":"Make a meeting with David Crim and his team .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" David Crim \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" David Crim \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" David Crim \"),with_attendee(FindTeamOf(recipient=\" David Crim \"))))","qid":"bc764b47-7208-4950-97b0-f07e3ef8140f.1"}
{"source":"I need to make an appointment with Terry and his supervisor and Brad and his manager .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Terry \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Terry \" ) ) ) ) ) ) ) ) ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Brad \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Brad \" ) ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Terry \"),with_attendee(FindManager(\" Terry \")),with_attendee(\" Brad \"),with_attendee(FindManager(\" Brad \"))))","qid":"d8e1f5e8-5a70-4b1e-a19d-80bbef65a1fe.0"}
{"source":"It is urgent that I meet with my team tomorrow .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(Tomorrow())))","qid":"d0802159-4fb7-4fc5-b219-b7cc3de8e8e7.4"}
{"source":"Book a meeting with the manager in a room in Cambridge tomorrow","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :location ( andConstraint ( ?= # ( LocationKeyphrase \" Cambridge \" ) ) ( roomRequest ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),at_location(\" Cambridge \"),at_location(roomRequest()),starts_at(Tomorrow())))","qid":"ecf7fb74-f61a-4236-9cb3-b975a2cf79cc.0"}
{"source":"Can you invite my entire team to a staff meeting monday morning at 8 ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :time ( NumberAM :number # ( Number 8 ) ) ) ) :subject ( ?= # ( String \" staff meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),has_subject(\" staff meeting \"),starts_at(NextDOW(\" MONDAY \")),starts_at(NumberAM(8))))","qid":"e1fde51b-d5bf-40ed-9826-6490bf241d3a.0"}
{"source":"Add an event with my team for tomorrow morning at 8 am .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberAM :number # ( Number 8 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(Tomorrow()),starts_at(NumberAM(8))))","qid":"f064dd83-5aff-4148-958e-5678da9f97fd.2"}
{"source":"Add an event with David Crim and his team .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" David Crim \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" David Crim \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" David Crim \"),with_attendee(FindTeamOf(recipient=\" David Crim \"))))","qid":"12365f33-9e95-456e-bdda-cd7ba99a1997.2"}
{"source":"I 'm going to be with Abby and her boss tomorrow","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Abby \"),with_attendee(FindManager(\" Abby \")),starts_at(Tomorrow())))","qid":"d356fb34-a95c-49e4-9df3-159f72475878.3"}
{"source":"I need another meeting with my team on Friday at 3 .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( NumberPM :number # ( Number 3 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(NextDOW(\" FRIDAY \")),starts_at(NumberPM(3))))","qid":"b02d56c6-a293-468c-a3a6-02ec530b05b6.2"}
{"source":"Can you make me a Press Conference with my team at around 7 tomorrow evening ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( AroundDateTime :dateTime ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 7 ) ) ) ) :subject ( ?= # ( String \" Press Conference \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),has_subject(\" Press Conference \"),starts_at(AroundDateTime(dateTime=DateTime?(date=Tomorrow(),time=NumberPM(7))))))","qid":"c9956c82-c8fd-4486-bfd6-d95bd5c08729.1"}
{"source":"please make a meet with my manager","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindManager(CurrentUser())))","qid":"d2240be6-ba7b-4865-9475-64d1428911e1.0"}
{"source":"Can I meet with Jonathan 's manager ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jonathan \" ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindManager(\" Jonathan \")))","qid":"645124a7-1b71-4b53-9880-af2ee9eb0aa9.0"}
{"source":"Hi ! Can you set up a meeting with Elli Parker 's team for this afternoon ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Elli Parker \" ) ) ) ) ) ) ) :start ( DateTimeConstraint :constraint ( Afternoon ) :date ( Today ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=\" Elli Parker \")),starts_at(Afternoon()),starts_at(Today())))","qid":"699f0d9f-c440-4bad-86a2-4e13f3c5bedb.0"}
{"source":"Get the team together for a meeting next Friday at 2 : 30 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( HourMinutePm :hours # ( Number 2 ) :minutes # ( Number 30.0 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(NextDOW(\" FRIDAY \")),starts_at(HourMinutePm(hours=2,minutes=30))))","qid":"2be6e2cf-b987-4fb7-9758-f7ea30bcc810.4"}
{"source":"schedule a meeting with Dan Schoffel and his team on Tuesday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Dan Schoffel \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Dan Schoffel \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Dan Schoffel \"),with_attendee(FindTeamOf(recipient=\" Dan Schoffel \")),starts_at(NextDOW(\" TUESDAY \"))))","qid":"8781d824-d38b-4660-a23b-309b86d80eb7.1"}
{"source":"After lunch on Wedneday I would like to see Carl 's team .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Carl \" ) ) ) ) ) ) ) :start ( ?= ( :end ( singleton ( :results ( FindEventWrapperWithDefaults :constraint ( EventOnDate :date ( NextDOW :dow # ( DayOfWeek \" WEDNESDAY \" ) ) :event ( Constraint[Event] :subject ( ?~= # ( String \" lunch \" ) ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=\" Carl \")),starts_at(:end(FindEvents(AND(starts_at(NextDOW(\" WEDNESDAY \")),has_subject(\" lunch \")))))))","qid":"3dc93931-ecc4-4d70-9d7f-c89858779d8f.2"}
{"source":"I want to meet with Wendy and her manager","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Wendy \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Wendy \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Wendy \"),with_attendee(FindManager(\" Wendy \"))))","qid":"8b4cd7a6-fe0b-4581-aff6-7aabb55d447d.3"}
{"source":"Schedule Lunch with David Lax 's team right after the finance meeting","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" David Lax \" ) ) ) ) ) ) ) :start ( ?= ( :end ( singleton ( :results ( FindEventWrapperWithDefaults :constraint ( Constraint[Event] :subject ( ?~= # ( String \" finance meeting \" ) ) ) ) ) ) ) ) :subject ( ?= # ( String \" Lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=\" David Lax \")),has_subject(\" Lunch \"),starts_at(:end(FindEvents(has_subject(\" finance meeting \"))))))","qid":"6bfaf6b1-65fe-465b-9cb9-5b70b11d6139.4"}
{"source":"I need a meeting with Kevin and his boss for next Tuesday at 5 pm . We 'll need a conference room at City Center .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kevin \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kevin \" ) ) ) ) ) ) ) ) :location ( andConstraint ( ?= # ( LocationKeyphrase \" City Center \" ) ) ( roomRequest ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) :time ( NumberPM :number # ( Number 5 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Kevin \"),with_attendee(FindManager(\" Kevin \")),at_location(\" City Center \"),at_location(roomRequest()),starts_at(NextDOW(\" TUESDAY \")),starts_at(NumberPM(5))))","qid":"6262dc75-3df0-4df4-8982-8bb9ccc89712.2"}
{"source":"Set a meeting with Bob 's team right after lunch .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Bob \" ) ) ) ) ) ) ) :start ( GreaterThanFromStructDateTime :dateTimeConstraint ( ?= ( NextTime :time ( Lunch ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=\" Bob \")),starts_at(GT(NextTime(time=Lunch())))))","qid":"08965039-01fc-4c24-aaf0-084b21183045.0"}
{"source":"How about a meeting with my team on Monday ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(NextDOW(\" MONDAY \"))))","qid":"85f65227-ecdf-49d9-bd38-11eea1916151.0"}
{"source":"When the Science briefing ends I would like to see Gabriel and his team .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Gabriel \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Gabriel \" ) ) ) ) ) ) ) ) :start ( ?= ( :end ( singleton ( :results ( FindEventWrapperWithDefaults :constraint ( Constraint[Event] :subject ( ?~= # ( String \" Science briefing \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Gabriel \"),with_attendee(FindTeamOf(recipient=\" Gabriel \")),starts_at(:end(FindEvents(has_subject(\" Science briefing \"))))))","qid":"392d8394-d52d-4a42-a9a5-04bef9aea644.2"}
{"source":"Schedule dinner at 6 tonight with my team but without Jesse","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) ( AttendeeListExcludesRecipient :recipient ( ?= ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jesse \" ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Today ) :time ( NumberPM :number # ( Number 6 ) ) ) ) :subject ( ?= # ( String \" dinner \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),avoid_attendee(refer(Recipient?(name=LIKE(Jesse)))),has_subject(\" dinner \"),starts_at(Today()),starts_at(NumberPM(6))))","qid":"49905958-2066-42b1-8d64-1fc38fe4f927.0"}
{"source":"Schedule a meeting with Noelle and her manager ROb on Monday night","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Noelle \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Noelle \" ) ) ) ) ) ) ) :start ( DateTimeConstraint :constraint ( Night ) :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Noelle \")),with_attendee(\" Noelle \"),starts_at(Night()),starts_at(NextDOW(\" MONDAY \"))))","qid":"f2d554f7-df59-411f-ab17-762ca92bdd3e.1"}
{"source":"Can you add an event with Abby and her boss tomorrow at 3 .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 3 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Abby \"),with_attendee(FindManager(\" Abby \")),starts_at(Tomorrow()),starts_at(NumberPM(3))))","qid":"7e46d4d5-e2f9-4420-b731-2ea9eb04c9cd.2"}
{"source":"Thanks , set up a dinner with Kim Possible and her team tomorrow at 5 .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim Possible \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim Possible \" ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 5 ) ) ) ) :subject ( ?= # ( String \" dinner \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Kim Possible \"),with_attendee(FindTeamOf(recipient=\" Kim Possible \")),has_subject(\" dinner \"),starts_at(Tomorrow()),starts_at(NumberPM(5))))","qid":"7f8dc7d2-d51f-4887-bdeb-92ebfe103688.3"}
{"source":"I need to schedule a meeting with both Lisa and Kim 's manager for 9 AM tomorrow .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Lisa \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim \" ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberAM :number # ( Number 9 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Lisa \")),with_attendee(FindManager(\" Kim \")),starts_at(Tomorrow()),starts_at(NumberAM(9))))","qid":"1769d271-9fcc-45cd-b5ec-5dad4dc61bd4.0"}
{"source":"Plan a meeting with Haley , Gift and their bosses for Tuesday in my office .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Haley \" ) ) ) ) ) ) ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Gift \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Haley \" ) ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Gift \" ) ) ) ) ) ) ) ) ) :location ( ?= # ( LocationKeyphrase \" my office \" ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Haley \"),with_attendee(FindManager(\" Gift \")),with_attendee(\" Gift \"),with_attendee(FindManager(\" Haley \")),at_location(\" my office \"),starts_at(NextDOW(\" TUESDAY \"))))","qid":"49219cb1-923f-4643-8af6-e051aeadd100.2"}
{"source":"when can fix a meeting with my staff","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindReports :recipient ( toRecipient ( CurrentUser ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindReports(recipient=CurrentUser())))","qid":"7118e427-414c-46cd-8cd0-30dd6acbdac9.0"}
{"source":"Schedule Road Trip on July 29 th at 8 am with Scott and his manager .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Scott \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Scott \" ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( MD :day # ( Number 29 ) :month # ( Month \" JULY \" ) ) :time ( NumberAM :number # ( Number 8 ) ) ) ) :subject ( ?= # ( String \" Road Trip \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Scott \"),with_attendee(FindManager(\" Scott \")),has_subject(\" Road Trip \"),starts_at(MD(month=\" JULY \",day=29)),starts_at(NumberAM(8))))","qid":"8458e161-ce76-4305-85c9-cabb044750c6.4"}
{"source":"Schedule a meeting with my department manager .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindManager(CurrentUser())))","qid":"b65c3fc3-b44d-4a96-ad68-e017d0ec2b00.3"}
{"source":"I want to meet with Jim 's manager next week","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jim \" ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( NextWeekList ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Jim \")),starts_at(NextWeekList())))","qid":"50186efa-d48f-4271-ba2d-a5d8635d0fb8.3"}
{"source":"Hey lets make a PR meeting with my team this Friday from 1 to end of work day .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :end ( ?= ( TimeAfterDateTime :dateTime ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( NumberPM :number # ( Number 1 ) ) ) :time ( EndOfWorkDay ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( NumberPM :number # ( Number 1 ) ) ) ) :subject ( ?= # ( String \" PR meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(ends_at(AND(GE(DateTime?(date=NextDOW(\" FRIDAY \"),time=NumberPM(1))),EndOfWorkDay())),with_attendee(FindTeamOf(recipient=CurrentUser())),has_subject(\" PR meeting \"),starts_at(NextDOW(\" FRIDAY \")),starts_at(NumberPM(1))))","qid":"262edfad-d36f-44a4-aa26-140237d1a903.0"}
{"source":"I need a 1 hour Intervention with Dani and her boss on Friday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Dani \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Dani \" ) ) ) ) ) ) ) ) :duration ( ?= ( toHours # ( Number 1 ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) ) ) :subject ( ?= # ( String \" Intervention \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Dani \"),with_attendee(FindManager(\" Dani \")),has_subject(\" Intervention \"),starts_at(NextDOW(\" FRIDAY \")),has_duration(toHours(1))))","qid":"e9f82dde-b5e1-497c-b0bb-9da39015f34d.3"}
{"source":"Schedule a dinner date with Jake and his team .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) ) ) :subject ( ?= # ( String \" dinner date \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jake \"),with_attendee(FindTeamOf(recipient=\" Jake \")),has_subject(\" dinner date \")))","qid":"0fb1cd6d-cbf9-4983-8806-0c4f8191c458.2"}
{"source":"Yes , schedule me for lunch with my boss Friday at 1 p.m. and show me as busy during that time .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :showAs ( ?= # ( ShowAsStatus \" Busy \" ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( NumberPM :number # ( Number 1 ) ) ) ) :subject ( ?= # ( String \" lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(has_status(ShowAsStatus(\" Busy \")),with_attendee(FindManager(CurrentUser())),has_subject(\" lunch \"),starts_at(NextDOW(\" FRIDAY \")),starts_at(NumberPM(1))))","qid":"f18bbb48-2981-4b6b-89fc-3020ff58764d.0"}
{"source":"Set a reminder for dinner with Tessa 's boss at 6 : 30 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Tessa \" ) ) ) ) ) ) ) :start ( ?= ( NextTime :time ( HourMinutePm :hours # ( Number 6 ) :minutes # ( Number 30.0 ) ) ) ) :subject ( ?= # ( String \" dinner \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Tessa \")),has_subject(\" dinner \"),starts_at(NextTime(time=HourMinutePm(hours=6,minutes=30)))))","qid":"962344d2-1bc9-4b6c-aa37-3b3303d48669.3"}
{"source":"I have a budget meeting with Aaron and his manager tomorrow .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Aaron \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Aaron \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) :subject ( ?= # ( String \" budget meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Aaron \"),with_attendee(FindManager(\" Aaron \")),has_subject(\" budget meeting \"),starts_at(Tomorrow())))","qid":"e2cac88d-2438-4879-84e3-5b6db0acec16.0"}
{"source":"Now add a meeting with DAn and his manager please","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" DAn \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" DAn \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" DAn \"),with_attendee(FindManager(\" DAn \"))))","qid":"42b941e3-7e29-4673-bf93-862f96961747.3"}
{"source":"Hi , please invite Ron 's manager to dinner !","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Ron \" ) ) ) ) ) ) ) :subject ( ?= # ( String \" dinner! \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Ron \")),has_subject(\" dinner! \")))","qid":"a30325b7-63af-4781-a073-8e946592df68.0"}
{"source":"I definitely need to have a meeting with the team Wednesday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" WEDNESDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(NextDOW(\" WEDNESDAY \"))))","qid":"c512903e-853b-4f01-933a-2dc2c950c02b.0"}
{"source":"add Abby 's team to a meeting please","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindTeamOf(recipient=\" Abby \")))","qid":"bf4531cc-8881-4d90-8696-348d22a2e50a.0"}
{"source":"Meeting with the team , next Thursday 8 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" THURSDAY \" ) ) :time ( NumberPM :number # ( Number 8 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(NextDOW(\" THURSDAY \")),starts_at(NumberPM(8))))","qid":"dca7da18-55d0-4008-a661-ef23f4aafa05.4"}
{"source":"I want to book 45 minutes with Jessica and her boss for tomorrow at 1 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jessica \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jessica \" ) ) ) ) ) ) ) ) :duration ( ?= ( toMinutes # ( Number 45 ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 1 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(has_duration(toMinutes(45)),with_attendee(\" Jessica \"),with_attendee(FindManager(\" Jessica \")),starts_at(Tomorrow()),starts_at(NumberPM(1))))","qid":"b24fb442-98d7-4b5f-a20a-af021e37e69b.4"}
{"source":"Add a meeting with my team on Monday at noon","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :time ( Noon ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(NextDOW(\" MONDAY \")),starts_at(Noon())))","qid":"5f4b447f-3d4b-4e58-bae2-a3fbbbdef0d7.4"}
{"source":"create meeting with Sean 's boss at 3 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Sean \" ) ) ) ) ) ) ) :start ( ?= ( NextTime :time ( NumberPM :number # ( Number 3 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Sean \")),starts_at(NextTime(time=NumberPM(3)))))","qid":"efdd9868-0f0a-41f1-9978-ea2de5b40188.0"}
{"source":"I have a meeting with Sam and Sally tomorrow at 5 pm and their managers are coming too .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Sam \" ) ) ) ) ) ) ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Sally \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Sam \" ) ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Sally \" ) ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 5 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Sam \"),with_attendee(FindManager(\" Sally \")),with_attendee(\" Sally \"),with_attendee(FindManager(\" Sam \")),starts_at(Tomorrow()),starts_at(NumberPM(5))))","qid":"82f4a240-837c-49cb-a4b5-fe32ff994e97.3"}
{"source":"schedule time with Gina and her boss on Thursday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Gina \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Gina \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" THURSDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Gina \"),with_attendee(FindManager(\" Gina \")),starts_at(NextDOW(\" THURSDAY \"))))","qid":"e067282f-e526-4b57-a30f-5a6bf42f6b8c.0"}
{"source":"make an appointment with my boss in about 35 minutes","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( adjustByPeriodDuration ( Now ) ( PeriodDuration :duration ( toMinutes # ( Number 35 ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),starts_at(adjustByPeriodDuration(Now(),PeriodDuration(duration=toMinutes(35))))))","qid":"1dad6470-a55a-4558-a322-46902c4f7b90.0"}
{"source":"After the budget meeting I need to see Mark and his team .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Mark \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Mark \" ) ) ) ) ) ) ) ) :start ( ?= ( :end ( singleton ( :results ( FindEventWrapperWithDefaults :constraint ( Constraint[Event] :subject ( ?~= # ( String \" budget meeting \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Mark \"),with_attendee(FindTeamOf(recipient=\" Mark \")),starts_at(:end(FindEvents(has_subject(\" budget meeting \"))))))","qid":"3b5285df-2bae-4ae0-b3d9-4707e06ac49d.3"}
{"source":"I need an appointment with the manager .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindManager(CurrentUser())))","qid":"8d98031b-588b-4b5b-ad51-1616cb7d68d0.0"}
{"source":"Can you add a baseball event with my team for Tuesday night at 6 ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) :time ( NumberPM :number # ( Number 6 ) ) ) ) :subject ( ?= # ( String \" baseball \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),has_subject(\" baseball \"),starts_at(NextDOW(\" TUESDAY \")),starts_at(NumberPM(6))))","qid":"dca7da18-55d0-4008-a661-ef23f4aafa05.2"}
{"source":"I want you to add my meeting with Dan Schoffel 's team that was scheduled right after dinner .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Dan Schoffel \" ) ) ) ) ) ) ) :start ( ?= ( :end ( singleton ( :results ( FindEventWrapperWithDefaults :constraint ( Constraint[Event] :subject ( ?~= # ( String \" dinner \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=\" Dan Schoffel \")),starts_at(:end(FindEvents(has_subject(\" dinner \"))))))","qid":"77024f1d-8cd4-4e18-a782-680deb62fe42.4"}
{"source":"Create a meeting tomorrow with the staff .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindReports :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindReports(recipient=CurrentUser())),starts_at(Tomorrow())))","qid":"f2bcef39-05a7-4e88-bb06-9bc74aa27496.0"}
{"source":"Make a meeting with Abby 's team","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindTeamOf(recipient=\" Abby \")))","qid":"c20a6725-5fc4-4a5e-9b6b-74d8befb41b6.1"}
{"source":"I want a meeting with john and his boss for Monday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" john \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" john \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" john \"),with_attendee(FindManager(\" john \")),starts_at(NextDOW(\" MONDAY \"))))","qid":"b44ce65e-1081-49ce-a83c-470fea4c9fb5.0"}
{"source":"Thanks . Can you also put that I will be hanging out with Jennifer , her manager , Jimmy and his boss this Saturday at 2 PM ?","original_target":"( do ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jennifer \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jennifer \" ) ) ) ) ) ) ) ) ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jimmy \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jimmy \" ) ) ) ) ) ) ) ) ) ( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" SATURDAY \" ) ) ) ) :subject ( ?= # ( String \" hanging out \" ) ) ) ) ) ) )","target":"do(AND(with_attendee(\" Jennifer \"),AttendeeListHasRecipient(recipient=FindManager(\" Jennifer \")),with_attendee(\" Jimmy \"),AttendeeListHasRecipient(recipient=FindManager(\" Jimmy \"))),CreateEvent(AND(has_subject(\" hanging out \"),starts_at(NextDOW(\" SATURDAY \")))))","qid":"52c1c401-9bcc-45ee-b5c8-a2f785013271.3"}
{"source":"Hi - See if the team is available for an Outward Bound trip next Tuesday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) ) ) :subject ( ?= # ( String \" Outward Bound trip \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),has_subject(\" Outward Bound trip \"),starts_at(NextDOW(\" TUESDAY \"))))","qid":"9ce0b4cf-4d38-4b64-a84b-5fa4cb394194.0"}
{"source":"Put a meeting with Chuck 's team on my calendar right after I am done meeting with Tom .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Chuck \" ) ) ) ) ) ) ) :start ( ?= ( :end ( singleton ( :results ( FindEventWrapperWithDefaults :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipientConstraint :recipientConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Tom \" ) ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=\" Chuck \")),starts_at(:end(FindEvents(with_attendee(\" Tom \"))))))","qid":"e40d0582-3c58-4155-b0b9-ea6b7a14f762.0"}
{"source":"Can you set up a meeting with Sandy and the rest of the team this tuesday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Sandy \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Sandy \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Sandy \"),with_attendee(FindTeamOf(recipient=\" Sandy \")),starts_at(NextDOW(\" TUESDAY \"))))","qid":"b9c46e33-88d6-45cb-a5c8-9d1b655095df.0"}
{"source":"Set me up a meeting with Carol 's boss for sometime after lunch today .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Carol \" ) ) ) ) ) ) ) :start ( OnDateAfterTime :date ( Today ) :time ( Lunch ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Carol \")),starts_at(OnDateAfterTime(date=Today(),time=Lunch()))))","qid":"8c74b9ae-63d2-4bae-939a-2d65674e295b.0"}
{"source":"Add a meeting on Thursday with my manager","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" THURSDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),starts_at(NextDOW(\" THURSDAY \"))))","qid":"20a0b266-fb2b-4e8b-8214-296e0eb106f7.0"}
{"source":"I need to schedule a meeting with Abby and her boss","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Abby \"),with_attendee(FindManager(\" Abby \"))))","qid":"07ac8e0c-a2e5-4c50-8b07-9076f715ea0a.4"}
{"source":"Set up that meeting with Jon and his manager about the Excel spreadsheets","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jon \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jon \" ) ) ) ) ) ) ) ) :subject ( ?= # ( String \" Excel spreadsheets \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jon \"),with_attendee(FindManager(\" Jon \")),has_subject(\" Excel spreadsheets \")))","qid":"3e0ab53b-7804-4665-953d-415b8223acb1.0"}
{"source":"schedule a meeting with Alan 's manager at 5 pm Tuesday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Alan \" ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) :time ( NumberPM :number # ( Number 5 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Alan \")),starts_at(NextDOW(\" TUESDAY \")),starts_at(NumberPM(5))))","qid":"6706b3b1-8fd4-42ab-99de-be18d788bf3c.0"}
{"source":"Make a new Office Party Planning event for Monday at 1 with Jennifer , her boss , Elli and her manager","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jennifer \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jennifer \" ) ) ) ) ) ) ) ) ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Elli \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Elli \" ) ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :time ( NumberPM :number # ( Number 1 ) ) ) ) :subject ( ?= # ( String \" Office Party Planning \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jennifer \"),with_attendee(FindManager(\" Jennifer \")),with_attendee(\" Elli \"),with_attendee(FindManager(\" Elli \")),has_subject(\" Office Party Planning \"),starts_at(NextDOW(\" MONDAY \")),starts_at(NumberPM(1))))","qid":"c2ad3536-74e9-4e64-8072-b8154ca6d687.1"}
{"source":"Can you make a meeting with Dan Marton 's team","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Dan Marton \" ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindTeamOf(recipient=\" Dan Marton \")))","qid":"957b0fcd-8c59-4318-b229-904d77ab8f05.2"}
{"source":"Now schedule a working lunch with my team and add Jenn and her team ,","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jenn \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jenn \" ) ) ) ) ) ) ) ) ) :subject ( ?= # ( String \" working lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),with_attendee(\" Jenn \"),with_attendee(FindTeamOf(recipient=\" Jenn \")),has_subject(\" working lunch \")))","qid":"3826365a-8a06-4d79-8fb0-6d984645413c.2"}
{"source":"Thanks . Also need to meet with Lauren and her team","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Lauren \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Lauren \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Lauren \"),with_attendee(FindTeamOf(recipient=\" Lauren \"))))","qid":"281bec10-0302-4938-98b9-258086d038f9.3"}
{"source":"set up a meeting with my Jake Farm 's manager","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake Farm \" ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindManager(\" Jake Farm \")))","qid":"c8a7ccec-7f56-439a-b95f-084ffcc71103.0"}
{"source":"Schedule a lunch with my boss .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :subject ( ?= # ( String \" lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),has_subject(\" lunch \")))","qid":"e363223c-61b8-4742-a253-ae00f12043a3.0"}
{"source":"Create a meeting with Simon 's team ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Simon \" ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindTeamOf(recipient=\" Simon \")))","qid":"6e3df5fe-430f-40a9-b821-cff243b72a5f.0"}
{"source":"Schedule a meeting with Ross 's team right after the meeting with Rachel .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Ross \" ) ) ) ) ) ) ) :start ( ?= ( :end ( singleton ( :results ( FindEventWrapperWithDefaults :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipientConstraint :recipientConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Rachel \" ) ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=\" Ross \")),starts_at(:end(FindEvents(with_attendee(\" Rachel \"))))))","qid":"ef5c545a-47d4-4436-9315-724f98793808.0"}
{"source":"Also make a room in Seattle for my team","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :location ( andConstraint ( ?= # ( LocationKeyphrase \" Seattle \" ) ) ( roomRequest ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),at_location(\" Seattle \"),at_location(roomRequest())))","qid":"477ae30f-8ba9-4f20-92ae-913935826c9a.4"}
{"source":"Create an appointment with the team on Monday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(NextDOW(\" MONDAY \"))))","qid":"b53069ea-0155-480f-a291-363ef4d9d21f.0"}
{"source":"Hi , I 'm well . looking to schedule a meeting with my manager","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindManager(CurrentUser())))","qid":"c615dc2c-af65-4cc5-93ba-a626206e93a0.0"}
{"source":"Can you add a meeting next week with Elli Parker and her team ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Elli Parker \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Elli Parker \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( NextWeekList ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Elli Parker \"),with_attendee(FindTeamOf(recipient=\" Elli Parker \")),starts_at(NextWeekList())))","qid":"f0504cba-b9ef-4ac9-ab83-526b2091c660.3"}
{"source":"Set up meeting with coworkers at 8 .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( NextTime :time ( NumberAM :number # ( Number 8 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(NextTime(time=NumberAM(8)))))","qid":"f8893bfd-ef71-4c9e-9307-17069292795d.3"}
{"source":"Add a lunch meeting with Carolyn 's manager Thursday at 12 : 30 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Carolyn \" ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" THURSDAY \" ) ) :time ( HourMinutePm :hours # ( Number 12 ) :minutes # ( Number 30.0 ) ) ) ) :subject ( ?= # ( String \" lunch meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Carolyn \")),has_subject(\" lunch meeting \"),starts_at(NextDOW(\" THURSDAY \")),starts_at(HourMinutePm(hours=12,minutes=30))))","qid":"92079bc0-3c91-403d-87ac-84d7e1f27ff0.0"}
{"source":"Schedule an event called \" lunch meeting with the team \" include jack and james and jack 's manager .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" jack \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" james \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" jack \" ) ) ) ) ) ) ) ) :subject ( ?= # ( String \" lunch meeting with the team \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" jack \")),with_attendee(\" jack \"),with_attendee(\" james \"),has_subject(\" lunch meeting with the team \")))","qid":"8da555fe-c18d-402c-bdba-545094a45b57.1"}
{"source":"Please add a Sales Team meeting tomorrow with Alayna and her Supervisor at 3 : 15 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Alayna \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Alayna \" ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( HourMinutePm :hours # ( Number 3 ) :minutes # ( Number 15 ) ) ) ) :subject ( ?= # ( String \" Sales Team meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Alayna \"),with_attendee(FindManager(\" Alayna \")),has_subject(\" Sales Team meeting \"),starts_at(Tomorrow()),starts_at(HourMinutePm(hours=3,minutes=15))))","qid":"05ebe070-0a78-4357-a51d-200dbba8a71d.2"}
{"source":"After the conference I would like to set something up with Wendy and her team .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Wendy \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Wendy \" ) ) ) ) ) ) ) ) :start ( ?= ( :end ( singleton ( :results ( FindEventWrapperWithDefaults :constraint ( Constraint[Event] :subject ( ?~= # ( String \" conference \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Wendy \"),with_attendee(FindTeamOf(recipient=\" Wendy \")),starts_at(:end(FindEvents(has_subject(\" conference \"))))))","qid":"08965039-01fc-4c24-aaf0-084b21183045.2"}
{"source":"thank you , please also schedule a meeting with David Lax and his team .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" David Lax \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" David Lax \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" David Lax \"),with_attendee(FindTeamOf(recipient=\" David Lax \"))))","qid":"4635a091-cb2a-4cc4-9ed5-546672fc4469.2"}
{"source":"Make a dentist appointment with Abby 's team","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ) :subject ( ?= # ( String \" dentist appointment \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=\" Abby \")),has_subject(\" dentist appointment \")))","qid":"1d12d656-d1e6-4598-aadd-d99ab8783964.0"}
{"source":"Add a meeting with Sandra and her boss tomorrow .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Sandra \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Sandra \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Sandra \"),with_attendee(FindManager(\" Sandra \")),starts_at(Tomorrow())))","qid":"6ecf313f-a647-45b3-bd5b-5905c05f9f8d.0"}
{"source":"Okay , set up a meeting with David Lax and his team on Friday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" David Lax \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" David Lax \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" David Lax \"),with_attendee(FindTeamOf(recipient=\" David Lax \")),starts_at(NextDOW(\" FRIDAY \"))))","qid":"2be8a28a-358f-4b98-a76d-299ae73bd48b.1"}
{"source":"Create an Event with my team","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindTeamOf(recipient=CurrentUser())))","qid":"6c885146-41a5-4c41-b5de-086ddede4a72.0"}
{"source":"I 'm going to get together with my boss for a meeting today .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Today ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),starts_at(Today())))","qid":"842f50b1-894d-450f-9366-c070479bbcb8.0"}
{"source":"I need to add an appointment with Katie and her boss Friday at 11 .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Katie \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Katie \" ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( NumberAM :number # ( Number 11 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Katie \"),with_attendee(FindManager(\" Katie \")),starts_at(NextDOW(\" FRIDAY \")),starts_at(NumberAM(11))))","qid":"15edf3cf-eaaf-448e-a0ed-159cafcc763e.0"}
{"source":"I need a meeting with Kyle 's boss tomorrow at 12 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kyle \" ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 12 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Kyle \")),starts_at(Tomorrow()),starts_at(NumberPM(12))))","qid":"cc3fdb4d-cb6a-4e9a-80b9-c87a39bd9503.0"}
{"source":"Need to meet to talk about code with Amy and her supervisor","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Amy \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Amy \" ) ) ) ) ) ) ) ) :subject ( ?= # ( String \" talk about code \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Amy \"),with_attendee(FindManager(\" Amy \")),has_subject(\" talk about code \")))","qid":"3e554b67-995b-481a-92f1-6f483bfd7649.2"}
{"source":"schedule a meeting with Kim and her skip on Monday","original_target":"( do # ( PersonName \" Kim \" ) ( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim \" ) ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) ) ) ) ) ) ) )","target":"do(PersonName(\" Kim \"),CreateEvent(AND(with_attendee(\" Kim \"),with_attendee(FindManager(FindManager(\" Kim \"))),starts_at(NextDOW(\" MONDAY \")))))","qid":"4e2f164c-a3ff-49bb-8647-fa1d1101da8a.2"}
{"source":"Schedule a brunch date with Dan Marton 's skip for friday morning","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Dan Marton \" ) ) ) ) ) ) ) ) :start ( DateTimeConstraint :constraint ( Morning ) :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) ) :subject ( ?= # ( String \" brunch date \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(FindManager(\" Dan Marton \"))),has_subject(\" brunch date \"),starts_at(Morning()),starts_at(NextDOW(\" FRIDAY \"))))","qid":"eeaa2a16-4d38-4745-b086-c43329ace5bb.0"}
{"source":"I need a suit session with tony stark and the team","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" tony stark \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" tony stark \" ) ) ) ) ) ) ) ) :subject ( ?= # ( String \" suit session \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" tony stark \"),with_attendee(FindTeamOf(recipient=\" tony stark \")),has_subject(\" suit session \")))","qid":"fece679d-3b07-42d7-918d-4286effda20c.0"}
{"source":"Find 1 hour on Wednesday to meet with Karl and his supervisor .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Karl \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Karl \" ) ) ) ) ) ) ) ) :duration ( ?= ( toHours # ( Number 1 ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" WEDNESDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Karl \"),with_attendee(FindManager(\" Karl \")),starts_at(NextDOW(\" WEDNESDAY \")),has_duration(toHours(1))))","qid":"8177762c-b837-4ee9-b3cd-925333ec1622.3"}
{"source":"I have a Staff Gathering at 1 pm tomorrow with Colleen and her manager .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Colleen \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Colleen \" ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 1 ) ) ) ) :subject ( ?= # ( String \" Staff Gathering \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Colleen \"),with_attendee(FindManager(\" Colleen \")),has_subject(\" Staff Gathering \"),starts_at(Tomorrow()),starts_at(NumberPM(1))))","qid":"8512e5c5-99be-4c5b-8b55-d9938177a713.1"}
{"source":"I need a meeting with Kim and her boss 's boss tomorrow .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim \" ) ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Kim \"),with_attendee(FindManager(FindManager(\" Kim \"))),starts_at(Tomorrow())))","qid":"41cf2d2e-3060-4d92-af52-85aff6bc4422.3"}
{"source":"Make a meeting at Stanford University with my boss at 5 PM today .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :location ( ?= # ( LocationKeyphrase \" Stanford University \" ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Today ) :time ( NumberPM :number # ( Number 5 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),at_location(\" Stanford University \"),starts_at(Today()),starts_at(NumberPM(5))))","qid":"dc9613dc-5687-4c33-994e-cd4b1ff6705c.0"}
{"source":"schedule dinner with Sue 's boss to one hour","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Sue \" ) ) ) ) ) ) ) :duration ( ?= ( toHours # ( Number 1 ) ) ) :subject ( ?= # ( String \" dinner \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Sue \")),has_subject(\" dinner \"),has_duration(toHours(1))))","qid":"70772c71-f848-4274-bd61-c9754f3d7fcd.2"}
{"source":"Set a meeting with Jim and his supervisor in the main conference room tomorrow morning at 8 am .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jim \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jim \" ) ) ) ) ) ) ) ) :location ( ?= # ( LocationKeyphrase \" main conference room \" ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberAM :number # ( Number 8 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jim \"),with_attendee(FindManager(\" Jim \")),at_location(\" main conference room \"),starts_at(Tomorrow()),starts_at(NumberAM(8))))","qid":"0c42d0b2-3fd4-4de6-9723-ff5990072fe1.2"}
{"source":"Pencil in a meeting with Jennifer and her boss as well as Crim and his boss please","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jennifer \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jennifer \" ) ) ) ) ) ) ) ) ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Crim \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Crim \" ) ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jennifer \"),with_attendee(FindManager(\" Jennifer \")),with_attendee(\" Crim \"),with_attendee(FindManager(\" Crim \"))))","qid":"c84512ff-8800-43a1-921c-0713632ae435.2"}
{"source":"Can you schedule a lunch with Elli 's skip ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Elli \" ) ) ) ) ) ) ) ) :subject ( ?= # ( String \" lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(FindManager(\" Elli \"))),has_subject(\" lunch \")))","qid":"61a3c068-a509-45fd-bfd8-05d258700355.0"}
{"source":"I want to meet with my team at the end of day tomorrow","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( EndOfWorkDay ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(Tomorrow()),starts_at(EndOfWorkDay())))","qid":"50944a75-014e-493d-a7fe-e5a90f7c403d.1"}
{"source":"Please set up a meeting with David Crim and his supervisor , and have Jake and his supervisor there as well .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" David Crim \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" David Crim \" ) ) ) ) ) ) ) ) ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" David Crim \"),with_attendee(FindManager(\" David Crim \")),with_attendee(\" Jake \"),with_attendee(FindManager(\" Jake \"))))","qid":"63b017ca-206e-4577-81d7-341755142a54.0"}
{"source":"Make a Golf Trip with Crim 's team and Jesse","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Crim \" ) ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Crim \" ) ) ) ) ) ) ) ) :subject ( ?= # ( String \" Golf Trip \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=\" Crim \")),with_attendee(FindTeamOf(recipient=\" Crim \")),has_subject(\" Golf Trip \")))","qid":"c3b370a9-fb9c-455a-bdbc-4c15d0429344.2"}
{"source":"Can you also schedule a meeting for tomorrow morning with rob and his boss , i 'm not sure what his name ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" rob \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" rob \" ) ) ) ) ) ) ) ) :start ( DateTimeConstraint :constraint ( Morning ) :date ( Tomorrow ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" rob \"),with_attendee(FindManager(\" rob \")),starts_at(Morning()),starts_at(Tomorrow())))","qid":"bac41e2c-44fd-4a04-9aa6-f0a65d96c8dc.2"}
{"source":"add lunch with noelle and her superviosr tomorrow","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" noelle \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" noelle \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) :subject ( ?= # ( String \" lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" noelle \"),with_attendee(FindManager(\" noelle \")),has_subject(\" lunch \"),starts_at(Tomorrow())))","qid":"5e85bc70-5dc5-4d3a-b88a-04604f2b7944.0"}
{"source":"I 'm seeing RIck and his boss for lunch tomorrow .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" RIck \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" RIck \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) :subject ( ?= # ( String \" lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" RIck \"),with_attendee(FindManager(\" RIck \")),has_subject(\" lunch \"),starts_at(Tomorrow())))","qid":"b7e90a9c-01d0-4a40-95e1-486f4cf9f49d.4"}
{"source":"I have a meeting with Carla and her manager Saturday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Carla \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Carla \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" SATURDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Carla \"),with_attendee(FindManager(\" Carla \")),starts_at(NextDOW(\" SATURDAY \"))))","qid":"abf20f6b-590c-4926-a609-4f63f87a458a.0"}
{"source":"I need you to invite James , Bill and their boss to a meeting on Tuesday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" James \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" James \" ) ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Bill \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Bill \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Bill \")),with_attendee(\" Bill \"),with_attendee(\" James \"),with_attendee(FindManager(\" James \")),starts_at(NextDOW(\" TUESDAY \"))))","qid":"c064032a-4710-4651-9255-5445ca3a4bda.1"}
{"source":"Schedule a meeting with julie 's manager for Friday after lunch","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" julie \" ) ) ) ) ) ) ) :start ( OnDateAfterTime :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( Lunch ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" julie \")),starts_at(OnDateAfterTime(date=NextDOW(\" FRIDAY \"),time=Lunch()))))","qid":"864d7fc2-c1f0-4557-9f49-c7a572953c1b.0"}
{"source":"Can you set up a meeting with Jane , her supervisor , Simone and her supervisor ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jane \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jane \" ) ) ) ) ) ) ) ) ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Simone \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Simone \" ) ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jane \"),with_attendee(FindManager(\" Jane \")),with_attendee(\" Simone \"),with_attendee(FindManager(\" Simone \"))))","qid":"c84512ff-8800-43a1-921c-0713632ae435.1"}
{"source":"add team building with both Noelle and Rob and their bosses","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Noelle \" ) ) ) ) ) ) ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Rob \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Noelle \" ) ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Rob \" ) ) ) ) ) ) ) ) ) :subject ( ?= # ( String \" team building \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Noelle \"),with_attendee(FindManager(\" Rob \")),with_attendee(\" Rob \"),with_attendee(FindManager(\" Noelle \")),has_subject(\" team building \")))","qid":"c0cab6e3-cbf0-4dc6-ae9f-c76a73758d87.1"}
{"source":"I am meeting with Abby and her manager later today in Seattle","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ) ) :location ( ?= # ( LocationKeyphrase \" Seattle \" ) ) :start ( DateTimeConstraint :constraint ( Late ) :date ( Today ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Abby \"),with_attendee(FindManager(\" Abby \")),at_location(\" Seattle \"),starts_at(Late()),starts_at(Today())))","qid":"3e554b67-995b-481a-92f1-6f483bfd7649.0"}
{"source":"Confirm meeting with Jake and his manager with Elli and his manager .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) ) ) ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Elli \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Elli \" ) ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jake \"),with_attendee(FindManager(\" Jake \")),with_attendee(\" Elli \"),with_attendee(FindManager(\" Elli \"))))","qid":"1f8c9ffd-a2bb-454a-8db5-3596ba0747e3.5"}
{"source":"I need a meeting with Abby and her boss for tomorrow at 3 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 3 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Abby \"),with_attendee(FindManager(\" Abby \")),starts_at(Tomorrow()),starts_at(NumberPM(3))))","qid":"4d6f3aa8-4813-4870-92da-aa133d1f096c.0"}
{"source":"i need an event with Jake , Elli , and their bosses","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Elli \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Elli \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Elli \")),with_attendee(\" Jake \"),with_attendee(\" Elli \"),with_attendee(FindManager(\" Jake \"))))","qid":"f8c683da-0d6a-4212-a97f-95e67b0a4bf5.0"}
{"source":"Schedule a meeting with my boss tonight","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( DateTimeConstraint :constraint ( Night ) :date ( Today ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),starts_at(Night()),starts_at(Today())))","qid":"87cc88f2-f4ac-4368-bd5c-dbd595144426.3"}
{"source":"I 'd like a meeting with my team for Monday at 2 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :time ( NumberPM :number # ( Number 2 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(NextDOW(\" MONDAY \")),starts_at(NumberPM(2))))","qid":"da38f1c6-148e-48f4-a8d9-13cb3e525518.0"}
{"source":"I wanna meet with my manager at today 7 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Today ) :time ( NumberPM :number # ( Number 7 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),starts_at(Today()),starts_at(NumberPM(7))))","qid":"2c619e94-a885-4f97-8bca-75de709c5209.0"}
{"source":"Make an appointment was Sam 's manager on my next free weekday slot .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Sam \" ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindManager(\" Sam \")))","qid":"d78c1c02-c76a-4942-b807-cdfc09cd2299.2"}
{"source":"Add meeting with boss to tomorrow at 2 : 15 pm for 30 minutes .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :duration ( ?= ( toMinutes # ( Number 30.0 ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( HourMinutePm :hours # ( Number 2 ) :minutes # ( Number 15 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(has_duration(toMinutes(30)),with_attendee(FindManager(CurrentUser())),starts_at(Tomorrow()),starts_at(HourMinutePm(hours=2,minutes=15))))","qid":"f62596ca-0174-4b78-a7ba-f5b85df59715.0"}
{"source":"Can you add meeting with boss at 9 : 00 for next friday ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( NumberAM :number # ( Number 9 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),starts_at(NextDOW(\" FRIDAY \")),starts_at(NumberAM(9))))","qid":"953f5ce0-6ef2-4204-97fc-4e6090d2d5ef.0"}
{"source":"I will be with my team for the 3 rd through the 7 th","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :nonEmptyBase ( EventAllDayForDateRange :dateRange ( DateAndConstraint :date1 ( nextDayOfMonth ( Today ) # ( Number 3 ) ) :date2 ( nextDayOfMonth ( nextDayOfMonth ( Today ) # ( Number 3 ) ) # ( Number 7 ) ) ) :event ( Constraint[Event] ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),spans_time(DateAndConstraint(date1=nextDayOfMonth(Today(),3),date2=nextDayOfMonth(nextDayOfMonth(Today(),3),7)))))","qid":"f363014d-db30-4aac-9781-a57eaa01c023.2"}
{"source":"I want to add a meeting with tommy 's boss next Thursday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" tommy \" ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" THURSDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" tommy \")),starts_at(NextDOW(\" THURSDAY \"))))","qid":"572e15b7-6152-4969-ac4e-045120e15bf8.0"}
{"source":"I need a meeting for Friday with my team","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(NextDOW(\" FRIDAY \"))))","qid":"ac709d73-b2c3-4d8d-95ed-c9503326607a.0"}
{"source":"I also need to meet with David Lax and her reports on the 14 th","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" David Lax \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindReports :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" David Lax \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( nextDayOfMonth ( Today ) # ( Number 14 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" David Lax \"),with_attendee(FindReports(recipient=refer(Recipient?(name=LIKE(David Lax))))),starts_at(nextDayOfMonth(Today(),14))))","qid":"5245dbe1-3440-48b7-8ace-29a00bc73e23.3"}
{"source":"Can you schedule a birthday party with Abby 's team without Jesse","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ) ( AttendeeListExcludesRecipient :recipient ( ?= ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jesse \" ) ) ) ) ) ) ) ) :subject ( ?= # ( String \" birthday party \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=\" Abby \")),avoid_attendee(refer(Recipient?(name=LIKE(Jesse)))),has_subject(\" birthday party \")))","qid":"c3b370a9-fb9c-455a-bdbc-4c15d0429344.0"}
{"source":"make an event with my manager","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindManager(CurrentUser())))","qid":"9617c934-e40c-4383-a826-db1abeb45382.0"}
{"source":"Great , thanks ! I am going to need a meeting with Karen , Jim , and Pam tomorrow before noon .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Karen \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jim \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Pam \" ) ) ) ) ) ) ) :start ( OnDateBeforeTime :date ( Tomorrow ) :time ( Noon ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Pam \"),with_attendee(\" Karen \"),with_attendee(\" Jim \"),starts_at(OnDateBeforeTime(date=Tomorrow(),time=Noon()))))","qid":"02dc1478-3037-4346-92d7-9adc8eaf15ae.3"}
{"source":"Create doctors appointment tomorrow before noon","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( DateTimeConstraint :constraint ( ?< ( Noon ) ) :date ( Tomorrow ) ) :subject ( ?= # ( String \" doctors appointment \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" doctors appointment \"),starts_at(LT(Noon())),starts_at(Tomorrow())))","qid":"300ff464-48fb-41db-b7fb-a1e09a3fe887.1"}
{"source":"Schedule a book club meeting tomorrow at 11 : 30 am .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( HourMinuteAm :hours # ( Number 11 ) :minutes # ( Number 30.0 ) ) ) ) :subject ( ?= # ( String \" book club meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" book club meeting \"),starts_at(Tomorrow()),starts_at(HourMinuteAm(hours=11,minutes=30))))","qid":"9a947987-70fd-44c7-b8f7-319b43395197.1"}
{"source":"Create an event \" getting ready \" from 5 pm to 6 pm on friday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :end ( ?= ( TimeAfterDateTime :dateTime ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( NumberPM :number # ( Number 5 ) ) ) :time ( NumberPM :number # ( Number 6 ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( NumberPM :number # ( Number 5 ) ) ) ) :subject ( ?= # ( String \" getting ready \" ) ) ) ) ) )","target":"CreateEvent(AND(ends_at(AND(GE(DateTime?(date=NextDOW(\" FRIDAY \"),time=NumberPM(5))),NumberPM(6))),has_subject(\" getting ready \"),starts_at(NextDOW(\" FRIDAY \")),starts_at(NumberPM(5))))","qid":"3d404d12-4170-4a62-9e3a-0b187707673d.2"}
{"source":"I need to add a meeting with Janet for next Monday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Janet \" ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Janet \"),starts_at(NextDOW(\" MONDAY \"))))","qid":"0fce18f2-d3fb-42f4-9104-f29297e085dc.0"}
{"source":"Make a new event - lunch with James tomorrow at 1","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" James \" ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 1 ) ) ) ) :subject ( ?= # ( String \" lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" James \"),has_subject(\" lunch \"),starts_at(Tomorrow()),starts_at(NumberPM(1))))","qid":"29bb7b1b-3e55-4c34-a31d-253593389f4a.0"}
{"source":"Hi , can you reschedule me a meeting with Ruth on Monday ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( EventOnDate :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :event ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Ruth \" ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(starts_at(NextDOW(\" MONDAY \")),with_attendee(\" Ruth \")))","qid":"02438f19-d468-4c61-99b0-8be4f518efa6.0"}
{"source":"I want a 2 hour hike at 7 am .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :duration ( ?= ( toHours # ( Number 2 ) ) ) :start ( ?= ( NextTime :time ( NumberAM :number # ( Number 7 ) ) ) ) :subject ( ?= # ( String \" hike \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" hike \"),starts_at(NextTime(time=NumberAM(7))),has_duration(toHours(2))))","qid":"c1fc93b6-5c90-4aee-af4d-ce2772da87c5.0"}
{"source":"Can you also add an event with Barry ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Barry \" ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(\" Barry \"))","qid":"10172656-0599-4e35-b973-4d758bd30990.3"}
{"source":"I need to schedule a 1 - 1 Sunday with Jackson","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jackson \" ) ) ) ) ) ) :isOneOnOne ( ?= # ( Boolean true ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" SUNDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jackson \"),starts_at(NextDOW(\" SUNDAY \")),is_oneOnOne()))","qid":"297ae13b-fea5-4485-975c-4399358d8b20.3"}
{"source":"I want to meet with jessy at morning","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" jessy \" ) ) ) ) ) ) :start ( Constraint[DateTime] :time ( Morning ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" jessy \"),starts_at(Morning())))","qid":"cc0a2246-bd07-4502-aedf-6fd7e1bc26fd.2"}
{"source":"Schedule a team meeting for 8 : 45 AM on Tuesday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) :time ( HourMinuteAm :hours # ( Number 8 ) :minutes # ( Number 45 ) ) ) ) :subject ( ?= # ( String \" team meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" team meeting \"),starts_at(NextDOW(\" TUESDAY \")),starts_at(HourMinuteAm(hours=8,minutes=45))))","qid":"7e277eb7-3bdd-453b-b288-c0f200d7c435.0"}
{"source":"Can you add a dentist appointment on March 22 at 2 pm ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( MD :day # ( Number 22 ) :month # ( Month \" MARCH \" ) ) :time ( NumberPM :number # ( Number 2 ) ) ) ) :subject ( ?= # ( String \" dentist appointment \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" dentist appointment \"),starts_at(MD(month=\" MARCH \",day=22)),starts_at(NumberPM(2))))","qid":"5af12605-2905-4c12-af5c-d897b9521876.4"}
{"source":"please set up lunch at applebee 's Saturday at 1 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :location ( ?= # ( LocationKeyphrase \" applebee's \" ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" SATURDAY \" ) ) :time ( NumberPM :number # ( Number 1 ) ) ) ) :subject ( ?= # ( String \" lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(at_location(\" applebee's \"),has_subject(\" lunch \"),starts_at(NextDOW(\" SATURDAY \")),starts_at(NumberPM(1))))","qid":"378a3380-9876-47d7-8797-9fdbfb31ad8b.0"}
{"source":"Schedule get pizzas for John 's Birthday at 5 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( NextTime :time ( NumberPM :number # ( Number 5 ) ) ) ) :subject ( ?= # ( String \" get pizzas for John's Birthday \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" get pizzas for John's Birthday \"),starts_at(NextTime(time=NumberPM(5)))))","qid":"ea75cd57-3dbb-4d46-8a30-a3aa47a5a6a0.1"}
{"source":"I need 2 hours on monday to check email .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :duration ( ?= ( toHours # ( Number 2 ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) ) ) :subject ( ?= # ( String \" check email \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" check email \"),starts_at(NextDOW(\" MONDAY \")),has_duration(toHours(2))))","qid":"a44610b7-a573-49d6-9995-d17ec1f079e5.4"}
{"source":"add drinks on friday at 5 : 01 PM","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( HourMinutePm :hours # ( Number 5 ) :minutes # ( Number 1 ) ) ) ) :subject ( ?= # ( String \" drinks \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" drinks \"),starts_at(NextDOW(\" FRIDAY \")),starts_at(HourMinutePm(hours=5,minutes=1))))","qid":"ec6a9d39-ae2d-45b8-af1c-083a27520f04.1"}
{"source":"Make a tennis match with Abby Kim and Jake","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) ) :subject ( ?= # ( String \" tennis match \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jake \"),with_attendee(\" Abby \"),with_attendee(\" Kim \"),has_subject(\" tennis match \")))","qid":"884d3f2b-6147-40d0-aa6c-0f78e9d39d41.0"}
{"source":"could you set up dentist appointment for tomorrow ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) :subject ( ?= # ( String \" dentist appointment \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" dentist appointment \"),starts_at(Tomorrow())))","qid":"3a3a1969-1f09-4518-94ff-5b6653d7d1b3.0"}
{"source":"I am going to be lifting weights to 7 am and at 7 : 30 I am going to have a power breakfast .","original_target":"( do ( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( NextTime :time ( NumberAM :number # ( Number 7 ) ) ) ) :subject ( ?= # ( String \" lifting weights \" ) ) ) ) ) ) ( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( NextTime :time ( HourMinuteAm :hours # ( Number 7 ) :minutes # ( Number 30.0 ) ) ) ) :subject ( ?= # ( String \" power breakfast \" ) ) ) ) ) ) )","target":"do(Yield(CreateEvent(AND(has_subject(\" lifting weights \"),starts_at(NextTime(time=NumberAM(7)))))),CreateEvent(AND(has_subject(\" power breakfast \"),starts_at(NextTime(time=HourMinuteAm(hours=7,minutes=30))))))","qid":"e8a3ecb9-ec94-4aa6-b96b-8afbf639f40a.1"}
{"source":"Schedule Save Groot for next Tuesday at 8 am .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) :time ( NumberAM :number # ( Number 8 ) ) ) ) :subject ( ?= # ( String \" Save Groot \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" Save Groot \"),starts_at(NextDOW(\" TUESDAY \")),starts_at(NumberAM(8))))","qid":"c5410c7a-e84e-4892-b731-3883a3e61101.3"}
{"source":"schedule a dentist appointment before brunch","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( LessThanFromStructDateTime :dateTimeConstraint ( ?= ( NextTime :time ( Brunch ) ) ) ) :subject ( ?= # ( String \" dentist appointment \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" dentist appointment \"),starts_at(LT(NextTime(time=Brunch())))))","qid":"b681c171-4658-4310-b116-4e4a606daa67.2"}
{"source":"I 'm going to eat some dinner in a bit","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :subject ( ?= # ( String \" eat some dinner \" ) ) ) ) ) )","target":"CreateEvent(has_subject(\" eat some dinner \"))","qid":"57c6d3ac-483f-45f3-81b4-f338efd79c64.4"}
{"source":"Add trivia and drinks with Ryan and Chad on Wednesday at 8 : 30 PM .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Ryan \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Chad \" ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" WEDNESDAY \" ) ) :time ( HourMinutePm :hours # ( Number 8 ) :minutes # ( Number 30.0 ) ) ) ) :subject ( ?= # ( String \" trivia and drinks \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Ryan \"),with_attendee(\" Chad \"),has_subject(\" trivia and drinks \"),starts_at(NextDOW(\" WEDNESDAY \")),starts_at(HourMinutePm(hours=8,minutes=30))))","qid":"09e9ce0f-6bb2-4ed4-9d20-c3e436546f65.0"}
{"source":"Mark all day friday as busy .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :nonEmptyBase ( EventAllDayOnDate :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :event ( Constraint[Event] ) ) :showAs ( ?= # ( ShowAsStatus \" Busy \" ) ) ) ) ) )","target":"CreateEvent(AND(has_status(ShowAsStatus(\" Busy \")),spans_time(NextDOW(\" FRIDAY \"))))","qid":"588212c0-3aa8-4e73-b496-1fee5750d0b5.1"}
{"source":"I have a meeting at the South tower office on Tuesday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :location ( ?= # ( LocationKeyphrase \" the South tower office \" ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(at_location(\" the South tower office \"),starts_at(NextDOW(\" TUESDAY \"))))","qid":"10f67106-e75d-4666-a562-cb845e3f735f.0"}
{"source":"Schedule Short Run for tomorrow afternoon with Lance .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Lance \" ) ) ) ) ) ) :start ( DateTimeConstraint :constraint ( Afternoon ) :date ( Tomorrow ) ) :subject ( ?= # ( String \" Short Run \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Lance \"),has_subject(\" Short Run \"),starts_at(Afternoon()),starts_at(Tomorrow())))","qid":"6ce521ef-e801-4275-a3a4-1f425112a326.2"}
{"source":"Schedule yoga at 8 : 00 AM to 8 : 45 AM on Saturday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :end ( ?= ( TimeAfterDateTime :dateTime ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" SATURDAY \" ) ) :time ( NumberAM :number # ( Number 8 ) ) ) :time ( HourMinuteAm :hours # ( Number 8 ) :minutes # ( Number 45 ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" SATURDAY \" ) ) :time ( NumberAM :number # ( Number 8 ) ) ) ) :subject ( ?= # ( String \" yoga \" ) ) ) ) ) )","target":"CreateEvent(AND(ends_at(AND(GE(DateTime?(date=NextDOW(\" SATURDAY \"),time=NumberAM(8))),HourMinuteAm(hours=8,minutes=45))),has_subject(\" yoga \"),starts_at(NextDOW(\" SATURDAY \")),starts_at(NumberAM(8))))","qid":"fa8c37d5-0a57-4e68-9dcb-a8b2de750b26.4"}
{"source":"Who is Darren 's manager ?","original_target":"( Yield :output ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Darren \" ) ) ) ) ) ) )","target":"FindManager(\" Darren \")","qid":"c68d7860-542e-474d-a184-98337b6dbda2.1"}
{"source":"Please put my doctor 's appointment for Monday at 2 pm on the calendar .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :time ( NumberPM :number # ( Number 2 ) ) ) ) :subject ( ?= # ( String \" doctor's appointment \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" doctor's appointment \"),starts_at(NextDOW(\" MONDAY \")),starts_at(NumberPM(2))))","qid":"4d1494a5-8098-4032-8709-b5d3c47bce95.2"}
{"source":"I 've got a team meeting from Tuesday through Friday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( EventAllDayForDateRange :dateRange ( DateAndConstraint :date1 ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) :date2 ( nextDayOfWeek ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) # ( DayOfWeek \" FRIDAY \" ) ) ) :event ( Constraint[Event] :subject ( ?= # ( String \" team meeting \" ) ) ) ) ) ) )","target":"CreateEvent(AND(spans_time(DateAndConstraint(date1=NextDOW(\" TUESDAY \"),date2=nextDayOfWeek(NextDOW(\" TUESDAY \"),DayOfWeek(\" FRIDAY \")))),has_subject(\" team meeting \")))","qid":"6f56a2d3-c353-416d-beb1-1355721c8344.0"}
{"source":"Can you also add my face lift ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :subject ( ?= # ( String \" face lift \" ) ) ) ) ) )","target":"CreateEvent(has_subject(\" face lift \"))","qid":"1b0a8fa3-c3b9-4b98-93ec-75d9aaa50a3f.2"}
{"source":"I want to make an appointment with Paige ASHWORTH","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Paige ASHWORTH \" ) ) ) ) ) ) :subject ( ?= # ( String \" appointment \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Paige ASHWORTH \"),has_subject(\" appointment \")))","qid":"9b20d128-f29e-49ed-bc4a-0ce6174fdf23.0"}
{"source":"Please , add a visit to the historic Savannah in Georgia .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :location ( ?= # ( LocationKeyphrase \" Savannah in Georgia \" ) ) :subject ( ?= # ( String \" visit \" ) ) ) ) ) )","target":"CreateEvent(AND(at_location(\" Savannah in Georgia \"),has_subject(\" visit \")))","qid":"a9eb457d-3fea-4893-b409-8fc75b6538cc.0"}
{"source":"I need a meeting today that ends at 4 .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :end ( ?= ( DateAtTimeWithDefaults :date ( Today ) :time ( NumberPM :number # ( Number 4 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(ends_at(Today()),ends_at(NumberPM(4))))","qid":"819cb2f9-be63-46be-821a-4c178ff690da.0"}
{"source":"Create a meeting in the afternoon on Monday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( DateTimeConstraint :constraint ( Afternoon ) :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) ) ) ) ) )","target":"CreateEvent(AND(starts_at(Afternoon()),starts_at(NextDOW(\" MONDAY \"))))","qid":"279a592d-8882-49c4-8dc3-33ee403e2fa3.0"}
{"source":"Create Doctors Appointment monday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) ) ) :subject ( ?= # ( String \" Doctors Appointment \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" Doctors Appointment \"),starts_at(NextDOW(\" MONDAY \"))))","qid":"62ccf297-2a77-41a0-8d64-28ea6babf141.0"}
{"source":"I need to drop my niece off at school tomorrow at 8 am","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :location ( ?= # ( LocationKeyphrase \" school \" ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberAM :number # ( Number 8 ) ) ) ) :subject ( ?= # ( String \" drop my niece off \" ) ) ) ) ) )","target":"CreateEvent(AND(at_location(\" school \"),has_subject(\" drop my niece off \"),starts_at(Tomorrow()),starts_at(NumberAM(8))))","qid":"1dd8d853-d663-49b5-a779-7eb1c798eecb.0"}
{"source":"babysitter today at 5 pm for 3 hours","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :duration ( ?= ( toHours # ( Number 3 ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Today ) :time ( NumberPM :number # ( Number 5 ) ) ) ) :subject ( ?= # ( String \" babysitter \" ) ) ) ) ) )","target":"CreateEvent(AND(has_duration(toHours(3)),has_subject(\" babysitter \"),starts_at(Today()),starts_at(NumberPM(5))))","qid":"01f71499-3e3e-46fa-8348-349374e9b33b.0"}
{"source":"add appointment Monday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(starts_at(NextDOW(\" MONDAY \")))","qid":"944f9ad2-17a0-434d-af8c-34fc4b440de2.0"}
{"source":"My court date is tomorrow at 1,10 PM .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( HourMinutePm :hours # ( Number 1 ) :minutes # ( Number 10.0 ) ) ) ) :subject ( ?= # ( String \" court date \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" court date \"),starts_at(Tomorrow()),starts_at(HourMinutePm(hours=1,minutes=10))))","qid":"fb3becfd-0a78-45a0-86b9-4fae76df9edd.4"}
{"source":"create a new event for saturday at 6 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" SATURDAY \" ) ) :time ( NumberPM :number # ( Number 6 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(starts_at(NextDOW(\" SATURDAY \")),starts_at(NumberPM(6))))","qid":"fcc81755-7b5f-4db2-b04a-6078d2b5e6ff.0"}
{"source":"Sunday I need to schedule an event Presentation review at 1 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" SUNDAY \" ) ) :time ( NumberPM :number # ( Number 1 ) ) ) ) :subject ( ?= # ( String \" Presentation review \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" Presentation review \"),starts_at(NextDOW(\" SUNDAY \")),starts_at(NumberPM(1))))","qid":"807954d7-df44-439d-a941-64621866992d.4"}
{"source":"please make meeting with john tomorrow","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" john \" ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" john \"),starts_at(Tomorrow())))","qid":"18143760-9ffc-4129-8b06-90f2f95ba9b7.3"}
{"source":"Appointment 2 is tomorrow","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) :subject ( ?= # ( String \" Appointment 2 \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" Appointment 2 \"),starts_at(Tomorrow())))","qid":"8bd40720-de1f-4218-8555-a030a19650ec.2"}
{"source":"Create an event titled surprise wedding announcement next week Tuesday at 8 PM .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( DowOfWeekNew :dow # ( DayOfWeek \" TUESDAY \" ) :week ( NextWeekList ) ) :time ( NumberPM :number # ( Number 8 ) ) ) ) :subject ( ?= # ( String \" surprise wedding announcement \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" surprise wedding announcement \"),starts_at(DowOfWeekNew(dow=DayOfWeek(\" TUESDAY \"),week=NextWeekList())),starts_at(NumberPM(8))))","qid":"f2869311-687a-4bc8-b15f-5f30fcaaef59.3"}
{"source":"Put \" swimming with manatees \" on my calendar for April 4 at noon .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( MD :day # ( Number 4 ) :month # ( Month \" APRIL \" ) ) :time ( Noon ) ) ) :subject ( ?= # ( String \" swimming with manatees \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" swimming with manatees \"),starts_at(MD(month=\" APRIL \",day=4)),starts_at(Noon())))","qid":"3a0df5e8-56a7-4223-bc39-4fcd8e28048c.0"}
{"source":"What 's my boss 's name and contact info ?","original_target":"( Yield :output ( PersonFromRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) )","target":"PersonFromRecipient(recipient=FindManager(CurrentUser()))","qid":"0cb84238-8df2-441d-9c7c-227b4c9de0da.2"}
{"source":"Take a rest this afternoon","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( DateTimeConstraint :constraint ( Afternoon ) :date ( Today ) ) :subject ( ?= # ( String \" Take a rest \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" Take a rest \"),starts_at(Afternoon()),starts_at(Today())))","qid":"ebc6c6ae-680d-42d4-be2e-13fc6c5a21cf.0"}
{"source":"Schedule dinner at 5 pm tomorrow","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 5 ) ) ) ) :subject ( ?= # ( String \" dinner \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" dinner \"),starts_at(Tomorrow()),starts_at(NumberPM(5))))","qid":"d6e8af40-b8de-4d3c-98a8-7e78af8215db.0"}
{"source":"Add a meeting with Brad tomorrow afternoon .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Brad \" ) ) ) ) ) ) :start ( DateTimeConstraint :constraint ( Afternoon ) :date ( Tomorrow ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Brad \"),starts_at(Afternoon()),starts_at(Tomorrow())))","qid":"883189f6-721e-4e36-8f5d-98089187ba2f.2"}
{"source":"set a meeting with Elli for Friday at 4 pm through end of day and call it headed to the spa","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Elli \" ) ) ) ) ) ) :end ( ?= ( TimeAfterDateTime :dateTime ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( NumberPM :number # ( Number 4 ) ) ) :time ( EndOfWorkDay ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( NumberPM :number # ( Number 4 ) ) ) ) :subject ( ?= # ( String \" headed to the spa \" ) ) ) ) ) )","target":"CreateEvent(AND(ends_at(AND(GE(DateTime?(date=NextDOW(\" FRIDAY \"),time=NumberPM(4))),EndOfWorkDay())),with_attendee(\" Elli \"),has_subject(\" headed to the spa \"),starts_at(NextDOW(\" FRIDAY \")),starts_at(NumberPM(4))))","qid":"726f6bd4-5ca6-480e-a225-a93db44dd5d3.1"}
{"source":"add learn Wonders game for tonight at 7 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( Today ) :time ( NumberPM :number # ( Number 7 ) ) ) ) :subject ( ?= # ( String \" learn Wonders game \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" learn Wonders game \"),starts_at(Today()),starts_at(NumberPM(7))))","qid":"de59df77-3069-431b-a469-5197279f71ba.0"}
{"source":"kids pickup at 3","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( NextTime :time ( NumberPM :number # ( Number 3 ) ) ) ) :subject ( ?= # ( String \" kids pickup \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" kids pickup \"),starts_at(NextTime(time=NumberPM(3)))))","qid":"611ef4b1-f83b-469a-8dd9-aa972c0afea9.0"}
{"source":"I want you to put Outback on my calendar for tonight at 7 pm please .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( Today ) :time ( NumberPM :number # ( Number 7 ) ) ) ) :subject ( ?= # ( String \" Outback \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" Outback \"),starts_at(Today()),starts_at(NumberPM(7))))","qid":"470ffbb5-af4e-423e-be14-d28f27cd6843.2"}
{"source":"Hello , I want to find a movie to see tonight .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( DateTimeConstraint :constraint ( Night ) :date ( Today ) ) :subject ( ?= # ( String \" find a movie to see \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" find a movie to see \"),starts_at(Night()),starts_at(Today())))","qid":"5b3c6c19-dd1f-4a02-902e-45aeab95b796.0"}
{"source":"Schedule meeting with Karl and Jerri tomorrow at 9 AM","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Karl \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jerri \" ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberAM :number # ( Number 9 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Karl \"),with_attendee(\" Jerri \"),starts_at(Tomorrow()),starts_at(NumberAM(9))))","qid":"df00c4a4-d1dc-4230-9a43-d12bc77ed530.15"}
{"source":"can you schedule dog walking Sunday please ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" SUNDAY \" ) ) ) ) :subject ( ?= # ( String \" dog walking \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" dog walking \"),starts_at(NextDOW(\" SUNDAY \"))))","qid":"8d12124f-ae88-485d-8429-c24cdde5224d.2"}
{"source":"add swim time in the week not the weekend","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( Constraint[Date] :dayOfWeek ( negate ( Weekend ) ) ) ) :subject ( ?= # ( String \" swim time \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" swim time \"),avoid_start(Date?(dayOfWeek=Weekend()))))","qid":"ae62c9b2-2fd0-49ef-950f-a60baaff2da5.1"}
{"source":"Okay , and can you also add that I need to pick up my medical records for that appointment on Thursday the 7 th ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" THURSDAY \" ) ) ) ) :subject ( ?= # ( String \" pick up my medical records \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" pick up my medical records \"),starts_at(NextDOW(\" THURSDAY \"))))","qid":"bcf4a30f-7768-485c-b56c-0eb30b1493a8.1"}
{"source":"I 'll be having a meeting with Jennifer on the 30 th of this month .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jennifer \" ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( MD :day # ( Number 30.0 ) :month ( :month ( Today ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jennifer \"),starts_at(MD(month=:month(Today()),day=30))))","qid":"1014cac1-4158-4072-a3bc-ae6bb703f577.0"}
{"source":"Add a two hour meeting with Elaine beginning at 9 a.m. to my schedule tomorrow .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Elaine \" ) ) ) ) ) ) :duration ( ?= ( toHours # ( Number 2 ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberAM :number # ( Number 9 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(has_duration(toHours(2)),with_attendee(\" Elaine \"),starts_at(Tomorrow()),starts_at(NumberAM(9))))","qid":"464d9d30-11c4-4201-ab23-4cedeb7b0287.1"}
{"source":"Schedule a strategy meeting first thing Monday morning with Derrick , Dave , Donald and Deborah .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Derrick \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Dave \" ) ) ) ) ) ) ) ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Donald \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Deborah \" ) ) ) ) ) ) ) ) :start ( DateTimeConstraint :constraint ( Morning ) :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) ) :subject ( ?= # ( String \" strategy meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Derrick \"),with_attendee(\" Dave \"),with_attendee(\" Donald \"),with_attendee(\" Deborah \"),has_subject(\" strategy meeting \"),starts_at(Morning()),starts_at(NextDOW(\" MONDAY \"))))","qid":"9f2638d6-7d05-4477-acba-05b428bd4df5.0"}
{"source":"I need to block out 5 pm to 8 pm tomorrow on my calendar","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :end ( ?= ( TimeAfterDateTime :dateTime ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 5 ) ) ) :time ( NumberPM :number # ( Number 8 ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 5 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(ends_at(AND(GE(DateTime?(date=Tomorrow(),time=NumberPM(5))),NumberPM(8))),starts_at(Tomorrow()),starts_at(NumberPM(5))))","qid":"4a2ada48-0386-46ab-9593-f4d5ddceb987.2"}
{"source":"Yes , can you also schedule dinner with roger , mike and allen ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" roger \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" mike \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" allen \" ) ) ) ) ) ) ) :subject ( ?= # ( String \" dinner \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" allen \"),with_attendee(\" roger \"),with_attendee(\" mike \"),has_subject(\" dinner \")))","qid":"c22b3318-07ff-4c87-940c-f2a26d55fd32.4"}
{"source":"Add dinner after my last meeting today .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( :end ( FindLastEvent :constraint ( EventOnDate :date ( Today ) :event ( Constraint[Event] ) ) ) ) ) :subject ( ?= # ( String \" dinner \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" dinner \"),starts_at(:end(FindLastEvent(constraint=starts_at(Today()))))))","qid":"8610b0ef-eb46-4d96-b307-52fbe56db8bc.0"}
{"source":"Put visit central park on the 7 th at 3 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( nextDayOfMonth ( Today ) # ( Number 7 ) ) :time ( NumberPM :number # ( Number 3 ) ) ) ) :subject ( ?= # ( String \" visit central park \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" visit central park \"),starts_at(nextDayOfMonth(Today(),7)),starts_at(NumberPM(3))))","qid":"120e2f62-6dd3-472c-87db-b21d9b312bbf.4"}
{"source":"Please set a time for reading from 6 pm to 8 pm tomorrow .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :end ( ?= ( TimeAfterDateTime :dateTime ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 6 ) ) ) :time ( NumberPM :number # ( Number 8 ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 6 ) ) ) ) :subject ( ?= # ( String \" reading \" ) ) ) ) ) )","target":"CreateEvent(AND(ends_at(AND(GE(DateTime?(date=Tomorrow(),time=NumberPM(6))),NumberPM(8))),has_subject(\" reading \"),starts_at(Tomorrow()),starts_at(NumberPM(6))))","qid":"04423ffc-dcf1-418d-9a01-180c8d9f57d4.0"}
{"source":"After my last scheduled Training Session on Tuesday , schedule a Protein Shake .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( :end ( FindLastEvent :constraint ( EventOnDate :date ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) :event ( Constraint[Event] :subject ( ?~= # ( String \" Training Session \" ) ) ) ) ) ) ) :subject ( ?= # ( String \" Protein Shake \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" Protein Shake \"),starts_at(:end(FindLastEvent(constraint=AND(starts_at(NextDOW(\" TUESDAY \")),has_subject(\" Training Session \")))))))","qid":"693c0be4-b846-4231-af4b-704d47e1366a.3"}
{"source":"Need a room in city center next week","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :location ( andConstraint ( ?= # ( LocationKeyphrase \" city center \" ) ) ( roomRequest ) ) :start ( Constraint[DateTime] :date ( NextWeekList ) ) ) ) ) )","target":"CreateEvent(AND(at_location(\" city center \"),at_location(roomRequest()),starts_at(NextWeekList())))","qid":"7579b80e-0f5f-42ef-8cba-59adde1d277b.2"}
{"source":"Add to calendar doctor 's appointment on Tuesday , December 18 @ 2 pm . Mark as out of the office for 2 hours","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :duration ( ?= ( toHours # ( Number 2 ) ) ) :showAs ( ?= # ( ShowAsStatus \" OutOfOffice \" ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( MD :day # ( Number 18 ) :month # ( Month \" DECEMBER \" ) ) :time ( NumberPM :number # ( Number 2 ) ) ) ) :subject ( ?= # ( String \" doctor's appointment \" ) ) ) ) ) )","target":"CreateEvent(AND(has_duration(toHours(2)),has_status(ShowAsStatus(\" OutOfOffice \")),has_subject(\" doctor's appointment \"),starts_at(MD(month=\" DECEMBER \",day=18)),starts_at(NumberPM(2))))","qid":"98eff85f-fe01-4d8f-8ab7-062f253cfe6e.0"}
{"source":"I need a new meeting for next thursday at 6 pm called dinner","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" THURSDAY \" ) ) :time ( NumberPM :number # ( Number 6 ) ) ) ) :subject ( ?= # ( String \" dinner \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" dinner \"),starts_at(NextDOW(\" THURSDAY \")),starts_at(NumberPM(6))))","qid":"cc1c8083-d42f-4031-9fad-85638e7002d2.0"}
{"source":"Please create an event titled \" Nap \" Starting at 3 pm todayfor two hours , and show my status as Out of office .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :duration ( ?= ( toHours # ( Number 2 ) ) ) :showAs ( ?= # ( ShowAsStatus \" OutOfOffice \" ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Today ) :time ( NumberPM :number # ( Number 3 ) ) ) ) :subject ( ?= # ( String \" Nap \" ) ) ) ) ) )","target":"CreateEvent(AND(has_duration(toHours(2)),has_status(ShowAsStatus(\" OutOfOffice \")),has_subject(\" Nap \"),starts_at(Today()),starts_at(NumberPM(3))))","qid":"8e2eb5c4-c8b9-4074-ac81-816ff04f278b.0"}
{"source":"Make a appointment for tomorrow","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) ) ) ) )","target":"CreateEvent(starts_at(Tomorrow()))","qid":"6df6614d-ddc4-4e83-8d5d-8ea6ba55aaf3.1"}
{"source":"Cool , I need salon added","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :subject ( ?= # ( String \" salon \" ) ) ) ) ) )","target":"CreateEvent(has_subject(\" salon \"))","qid":"f89c9d1c-35c6-45af-94e8-737cb62c6cf7.2"}
{"source":"Add a meeting for 1 hour at 9 am on Tuesday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :duration ( ?= ( toHours # ( Number 1 ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) :time ( NumberAM :number # ( Number 9 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(has_duration(toHours(1)),starts_at(NextDOW(\" TUESDAY \")),starts_at(NumberAM(9))))","qid":"02ead8fe-3a51-4b95-8baf-6f71ff01fe26.1"}
{"source":"Can you create an appointment for today ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( Today ) ) ) ) ) ) )","target":"CreateEvent(starts_at(Today()))","qid":"2c1d9136-ccc0-4891-8a7c-44d5592b0863.0"}
{"source":"I need to put Band Practice on Wednesday at 5 : 45 pm for 3 hours .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :duration ( ?= ( toHours # ( Number 3 ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" WEDNESDAY \" ) ) :time ( HourMinutePm :hours # ( Number 5 ) :minutes # ( Number 45 ) ) ) ) :subject ( ?= # ( String \" Band Practice \" ) ) ) ) ) )","target":"CreateEvent(AND(has_duration(toHours(3)),has_subject(\" Band Practice \"),starts_at(NextDOW(\" WEDNESDAY \")),starts_at(HourMinutePm(hours=5,minutes=45))))","qid":"827c473d-ebd9-4757-83d4-17f5f186cfb0.3"}
{"source":"schedule reserve hotel for three pm today","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( Today ) :time ( NumberPM :number # ( Number 3 ) ) ) ) :subject ( ?= # ( String \" reserve hotel \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" reserve hotel \"),starts_at(Today()),starts_at(NumberPM(3))))","qid":"7bf5b1cd-4808-469e-8354-527858d181e8.0"}
{"source":"Make an all day event tomorrow","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( EventAllDayOnDate :date ( Tomorrow ) :event ( Constraint[Event] ) ) ) ) )","target":"CreateEvent(spans_time(Tomorrow()))","qid":"89cbb5b2-efc0-4bc6-bbaf-372a42a0bd94.2"}
{"source":"Who is on Kim 's team ?","original_target":"( Yield :output ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim \" ) ) ) ) ) ) )","target":"FindTeamOf(recipient=with_attendee(\" Kim \"))","qid":"aad567af-5c96-4622-93a7-4a15b1585ee0.4"}
{"source":"Also I have a dinner tomorrow at Julie 's at 7 : 30 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :location ( ?= # ( LocationKeyphrase \" Julie's \" ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( HourMinutePm :hours # ( Number 7 ) :minutes # ( Number 30.0 ) ) ) ) :subject ( ?= # ( String \" dinner \" ) ) ) ) ) )","target":"CreateEvent(AND(at_location(\" Julie's \"),has_subject(\" dinner \"),starts_at(Tomorrow()),starts_at(HourMinutePm(hours=7,minutes=30))))","qid":"b3029fc9-374a-46f7-858f-492c2f2acdf1.2"}
{"source":"There 's going to be a Mortal Kombat Tournament on Saturday from 10 AM to 6 PM at The Center","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :end ( ?= ( TimeAfterDateTime :dateTime ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" SATURDAY \" ) ) :time ( NumberAM :number # ( Number 10.0 ) ) ) :time ( NumberPM :number # ( Number 6 ) ) ) ) :location ( ?= # ( LocationKeyphrase \" The Center \" ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" SATURDAY \" ) ) :time ( NumberAM :number # ( Number 10.0 ) ) ) ) :subject ( ?= # ( String \" Mortal Kombat Tournament \" ) ) ) ) ) )","target":"CreateEvent(AND(ends_at(AND(GE(DateTime?(date=NextDOW(\" SATURDAY \"),time=NumberAM(10))),NumberPM(6))),at_location(\" The Center \"),has_subject(\" Mortal Kombat Tournament \"),starts_at(NextDOW(\" SATURDAY \")),starts_at(NumberAM(10))))","qid":"aa607d22-6629-40cf-a418-61abce7d63f0.0"}
{"source":"Mark that I 'll be in Miami from Friday through Sunday starting next week .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( EventAllDayForDateRange :dateRange ( DateAndConstraint :date1 ( DowOfWeekNew :dow # ( DayOfWeek \" FRIDAY \" ) :week ( NextWeekList ) ) :date2 ( nextDayOfWeek ( DowOfWeekNew :dow # ( DayOfWeek \" FRIDAY \" ) :week ( NextWeekList ) ) # ( DayOfWeek \" SUNDAY \" ) ) ) :event ( Constraint[Event] :location ( ?= # ( LocationKeyphrase \" Miami \" ) ) ) ) ) ) )","target":"CreateEvent(AND(spans_time(DateAndConstraint(date1=DowOfWeekNew(dow=DayOfWeek(\" FRIDAY \"),week=NextWeekList()),date2=nextDayOfWeek(DowOfWeekNew(dow=DayOfWeek(\" FRIDAY \"),week=NextWeekList()),DayOfWeek(\" SUNDAY \")))),at_location(\" Miami \")))","qid":"4910ff0b-5f32-4ebc-acbb-21554910cf3b.2"}
{"source":"I need an appointment","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] ) ) ) )","target":"CreateEvent(Event?())","qid":"91cea2d1-1d45-4fca-8fc7-ebed09f90b52.0"}
{"source":"I have anothe rmeeting at 4 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( NextTime :time ( NumberPM :number # ( Number 4 ) ) ) ) :subject ( ?= # ( String \" anothe rmeeting \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" anothe rmeeting \"),starts_at(NextTime(time=NumberPM(4)))))","qid":"cf1e296d-ebe2-4c21-8c7e-d2a03b559a15.3"}
{"source":"next meeting on 6 am","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( NextTime :time ( NumberAM :number # ( Number 6 ) ) ) ) ) ) ) )","target":"CreateEvent(starts_at(NextTime(time=NumberAM(6))))","qid":"e96e8516-17b2-4952-9109-567248032e0e.3"}
{"source":"put dinner meet with emily","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" emily \" ) ) ) ) ) ) :subject ( ?= # ( String \" dinner meet \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" emily \"),has_subject(\" dinner meet \")))","qid":"92884fc6-e50f-4ea2-ad2f-443beea0c9ae.4"}
{"source":"Mark and Ashley will be going fishing with me this weekend at 3 .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Mark \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Ashley \" ) ) ) ) ) ) ) :start ( andConstraint ( Constraint[DateTime] :date ( ThisWeekend ) ) ( Constraint[DateTime] :time ( ?= ( NumberPM :number # ( Number 3 ) ) ) ) ) :subject ( ?= # ( String \" fishing \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Mark \"),with_attendee(\" Ashley \"),has_subject(\" fishing \"),starts_at(ThisWeekend()),starts_at(NumberPM(3))))","qid":"0e50ab7e-8f0a-4db1-90b9-08807b01404e.2"}
{"source":"Schedule my meeting with Mathew George and Sally the day after tomorrow","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Mathew George \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Sally \" ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( adjustByPeriod ( Tomorrow ) ( toDays # ( Number 1 ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Mathew George \"),with_attendee(\" Sally \"),starts_at(adjustByPeriod(Tomorrow(),toDays(1)))))","qid":"3fb825e7-4d92-4092-9f83-f868bfc4aa93.0"}
{"source":"Can I see Dan 's manager ?","original_target":"( Yield :output ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Dan \" ) ) ) ) ) ) )","target":"FindManager(\" Dan \")","qid":"5d0d1055-7415-4c99-b928-6b908104806c.3"}
{"source":"Thanks , add grocery shopping from 5 pm to 7 pm on Friday 's calendar .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :end ( ?= ( TimeAfterDateTime :dateTime ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( NumberPM :number # ( Number 5 ) ) ) :time ( NumberPM :number # ( Number 7 ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( NumberPM :number # ( Number 5 ) ) ) ) :subject ( ?= # ( String \" grocery shopping \" ) ) ) ) ) )","target":"CreateEvent(AND(ends_at(AND(GE(DateTime?(date=NextDOW(\" FRIDAY \"),time=NumberPM(5))),NumberPM(7))),has_subject(\" grocery shopping \"),starts_at(NextDOW(\" FRIDAY \")),starts_at(NumberPM(5))))","qid":"61bc9824-718b-4edc-a7d5-f85740d73f10.4"}
{"source":"Add project meeting with damon ellery","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" damon ellery \" ) ) ) ) ) ) :subject ( ?= # ( String \" project meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" damon ellery \"),has_subject(\" project meeting \")))","qid":"50a24a7a-fc91-49cd-9246-5a7e317399ac.2"}
{"source":"can you arrange with 12 : 00 AM","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( NextTime :time ( NumberAM :number # ( Number 12 ) ) ) ) ) ) ) )","target":"CreateEvent(starts_at(NextTime(time=NumberAM(12))))","qid":"69c9d721-94a2-4fd6-9431-e1f09b2a6527.4"}
{"source":"Create a training meeting for Sunday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" SUNDAY \" ) ) ) ) :subject ( ?= # ( String \" training meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" training meeting \"),starts_at(NextDOW(\" SUNDAY \"))))","qid":"9d30427e-4f82-4395-ab90-82074cfed845.0"}
{"source":"Create event on calendar Raquetball game with Jill on Friday at 5 : 00 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jill \" ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( NumberPM :number # ( Number 5 ) ) ) ) :subject ( ?= # ( String \" Raquetball game \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jill \"),has_subject(\" Raquetball game \"),starts_at(NextDOW(\" FRIDAY \")),starts_at(NumberPM(5))))","qid":"1c837b50-1d7e-41cd-adf5-3eb1bea3eff1.0"}
{"source":"Let 's meet Brian at 4 .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Brian \" ) ) ) ) ) ) :start ( ?= ( NextTime :time ( NumberPM :number # ( Number 4 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Brian \"),starts_at(NextTime(time=NumberPM(4)))))","qid":"1fd23ec1-e925-4c92-8169-e0c2a55d60c4.2"}
{"source":"Make a meeting event with Jon starting now .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jon \" ) ) ) ) ) ) :start ( ?= ( Now ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jon \"),starts_at(Now())))","qid":"f9f6afd6-9812-4fea-97b2-3cab12bba7a0.0"}
{"source":"Make an event to finish BL3","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :subject ( ?= # ( String \" finish BL3 \" ) ) ) ) ) )","target":"CreateEvent(has_subject(\" finish BL3 \"))","qid":"2b3c437c-c093-4cbb-81d0-cc9a149429bc.0"}
{"source":"I need to set up a dinner with Melody Francis and Beth","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Melody \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Francis \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Beth \" ) ) ) ) ) ) ) :subject ( ?= # ( String \" dinner \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Beth \"),with_attendee(\" Melody \"),with_attendee(\" Francis \"),has_subject(\" dinner \")))","qid":"57cef49c-395b-430b-aeb6-221c5dc7cc81.4"}
{"source":"Can you schedule time to meet with Don ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Don \" ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(\" Don \"))","qid":"4d56feb9-c4b9-47af-a73c-5b5a66011c5f.3"}
{"source":"I 'm going for a run at 6","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( NextTime :time ( NumberPM :number # ( Number 6 ) ) ) ) :subject ( ?= # ( String \" run \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" run \"),starts_at(NextTime(time=NumberPM(6)))))","qid":"a37a2e1a-8c62-43cf-9098-eb71ac83698c.0"}
{"source":"create arm wrestling on tuesday at 7","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) :time ( NumberPM :number # ( Number 7 ) ) ) ) :subject ( ?= # ( String \" arm wrestling \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" arm wrestling \"),starts_at(NextDOW(\" TUESDAY \")),starts_at(NumberPM(7))))","qid":"292e1e03-6eb2-4227-99fa-f315ed86c4fa.0"}
{"source":"Please set up a meeting with Janice next Thursday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Janice \" ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" THURSDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Janice \"),starts_at(NextDOW(\" THURSDAY \"))))","qid":"426d941d-8f7c-4666-9919-86aa28eb495c.2"}
{"source":"make a meeting at 9 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( NextTime :time ( NumberPM :number # ( Number 9 ) ) ) ) ) ) ) )","target":"CreateEvent(starts_at(NextTime(time=NumberPM(9))))","qid":"746bd952-a07d-45f3-a34f-c42c0a62f6ee.0"}
{"source":"put the meeting with rocky","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" rocky \" ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(\" rocky \"))","qid":"e5764f80-e476-4180-a957-c5c60b2a5dba.0"}
{"source":"add a doctors appointment that is n't on the weekend","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( Constraint[Date] :dayOfWeek ( negate ( Weekend ) ) ) ) :subject ( ?= # ( String \" doctors appointment \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" doctors appointment \"),avoid_start(Date?(dayOfWeek=Weekend()))))","qid":"9b6c62b5-9247-4e21-b6d8-d93bca112320.0"}
{"source":"I need to create an event , Joes Birthday Party for December 29 th at 7 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( MD :day # ( Number 29 ) :month # ( Month \" DECEMBER \" ) ) :time ( NumberPM :number # ( Number 7 ) ) ) ) :subject ( ?= # ( String \" Joes Birthday Party \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" Joes Birthday Party \"),starts_at(MD(month=\" DECEMBER \",day=29)),starts_at(NumberPM(7))))","qid":"58f98a32-e727-40dd-9a8a-c612f2dd35c6.0"}
{"source":"My karate competition starts on Monday and goes to Thursday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( EventAllDayForDateRange :dateRange ( DateAndConstraint :date1 ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :date2 ( nextDayOfWeek ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) # ( DayOfWeek \" THURSDAY \" ) ) ) :event ( Constraint[Event] :subject ( ?= # ( String \" karate competition \" ) ) ) ) ) ) )","target":"CreateEvent(AND(spans_time(DateAndConstraint(date1=NextDOW(\" MONDAY \"),date2=nextDayOfWeek(NextDOW(\" MONDAY \"),DayOfWeek(\" THURSDAY \")))),has_subject(\" karate competition \")))","qid":"56cd4e47-b8e3-4864-bb7c-88d47b8d1ad9.0"}
{"source":"I need a dinner for next week starting at 6 pm with end at 7 : 30","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :end ( ?= ( TimeAfterDateTime :dateTime ( DateAtTimeWithDefaults :date ( DowOfWeekNew :dow ( :dayOfWeek ( Execute :intension ( refer ( extensionConstraint ( Constraint[Date] ) ) ) ) ) :week ( NextWeekList ) ) :time ( NumberPM :number # ( Number 6 ) ) ) :time ( HourMinutePm :hours # ( Number 7 ) :minutes # ( Number 30.0 ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( DowOfWeekNew :dow ( :dayOfWeek ( Execute :intension ( refer ( extensionConstraint ( Constraint[Date] ) ) ) ) ) :week ( NextWeekList ) ) :time ( NumberPM :number # ( Number 6 ) ) ) ) :subject ( ?= # ( String \" dinner \" ) ) ) ) ) )","target":"CreateEvent(AND(ends_at(AND(GE(DateTime?(date=DowOfWeekNew(dow=:dayOfWeek(refer(Date?())),week=NextWeekList()),time=NumberPM(6))),HourMinutePm(hours=7,minutes=30))),has_subject(\" dinner \"),starts_at(DowOfWeekNew(dow=:dayOfWeek(refer(Date?())),week=NextWeekList())),starts_at(NumberPM(6))))","qid":"c03f19e8-aa91-4e18-b972-498ecb50089d.0"}
{"source":"On June 6 do I have time to go to the nail sallon","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( MD :day # ( Number 6 ) :month # ( Month \" JUNE \" ) ) ) ) :subject ( ?= # ( String \" go to the nail sallon \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" go to the nail sallon \"),starts_at(MD(month=\" JUNE \",day=6))))","qid":"01afdfef-4308-4d1e-a6a4-537e68f12c78.4"}
{"source":"i have a realtor 's convention Saturday afternoon","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( DateTimeConstraint :constraint ( Afternoon ) :date ( NextDOW :dow # ( DayOfWeek \" SATURDAY \" ) ) ) :subject ( ?= # ( String \" realtor's convention \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" realtor's convention \"),starts_at(Afternoon()),starts_at(NextDOW(\" SATURDAY \"))))","qid":"a10ec237-0396-449b-9ef1-81a2edd85e13.3"}
{"source":"I need to have a lunch with Jake , Abby , and Kim","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim \" ) ) ) ) ) ) ) :subject ( ?= # ( String \" lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Kim \"),with_attendee(\" Jake \"),with_attendee(\" Abby \"),has_subject(\" lunch \")))","qid":"3ff71d07-7dd7-4803-9b19-b5a8b86d27ef.0"}
{"source":"Thank you . Could you please add an Out Of Office status for October 6 through the 15 th ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( EventAllDayForDateRange :dateRange ( DateAndConstraint :date1 ( MD :day # ( Number 6 ) :month # ( Month \" OCTOBER \" ) ) :date2 ( nextDayOfMonth ( MD :day # ( Number 6 ) :month # ( Month \" OCTOBER \" ) ) # ( Number 15 ) ) ) :event ( Constraint[Event] :showAs ( ?= # ( ShowAsStatus \" OutOfOffice \" ) ) ) ) ) ) )","target":"CreateEvent(AND(spans_time(DateAndConstraint(date1=MD(month=\" OCTOBER \",day=6),date2=nextDayOfMonth(MD(month=\" OCTOBER \",day=6),15))),has_status(ShowAsStatus(\" OutOfOffice \"))))","qid":"766505f3-c1a6-4ccf-a3ca-ec6b684afbbb.3"}
{"source":"Who does Abby report to ?","original_target":"( Yield :output ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) )","target":"FindManager(\" Abby \")","qid":"04624e1c-d430-4066-aab9-3f67faafcd30.1"}
{"source":"Schedule lunch with Nick tomorrow at noon","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Nick \" ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( Noon ) ) ) :subject ( ?= # ( String \" lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Nick \"),has_subject(\" lunch \"),starts_at(Tomorrow()),starts_at(Noon())))","qid":"eba9d3e7-91f5-4893-a055-2387a654c89c.0"}
{"source":"Let 's put Baseball game an hour after volleyball .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( adjustByPeriodDuration ( :end ( singleton ( :results ( FindEventWrapperWithDefaults :constraint ( Constraint[Event] :subject ( ?~= # ( String \" volleyball \" ) ) ) ) ) ) ) ( PeriodDuration :duration ( toHours # ( Number 1 ) ) ) ) ) :subject ( ?= # ( String \" Baseball game \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" Baseball game \"),starts_at(adjustByPeriodDuration(:end(FindEvents(has_subject(\" volleyball \"))),PeriodDuration(duration=toHours(1))))))","qid":"a7393a9c-7878-46d8-b807-b83d5cfe97f1.3"}
{"source":"Schedule a meeting with Amy on Friday at 10 : 30 AM .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Amy \" ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( HourMinuteAm :hours # ( Number 10.0 ) :minutes # ( Number 30.0 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Amy \"),starts_at(NextDOW(\" FRIDAY \")),starts_at(HourMinuteAm(hours=10,minutes=30))))","qid":"db7bd176-430d-4a65-b021-d141d6a962b0.6"}
{"source":"Create an event for Sarah 's birthday dinner on April 12 , 2019 at 8 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( MDY :day # ( Number 12 ) :month # ( Month \" APRIL \" ) :year # ( Number 2019 ) ) :time ( NumberPM :number # ( Number 8 ) ) ) ) :subject ( ?= # ( String \" Sarah's birthday dinner \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" Sarah's birthday dinner \"),starts_at(MDY(month=Month(\" APRIL \"),day=12,year=2019)),starts_at(NumberPM(8))))","qid":"529147c0-0ff6-47a7-a056-d57759353e2e.0"}
{"source":"basketball game 8 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( NextTime :time ( NumberPM :number # ( Number 8 ) ) ) ) :subject ( ?= # ( String \" basketball game \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" basketball game \"),starts_at(NextTime(time=NumberPM(8)))))","qid":"1c3ead72-bbe7-4efa-ac30-eb2a9dfcd1ee.0"}
{"source":"There 's going to be a brunch buffet for the team at Joule on Sunday starting at 10 : 45 am for probably ... 1 . 5 hours","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :duration ( ?= ( toHours # ( Number 1.5 ) ) ) :location ( ?= # ( LocationKeyphrase \" Joule \" ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" SUNDAY \" ) ) :time ( HourMinuteAm :hours # ( Number 10.0 ) :minutes # ( Number 45 ) ) ) ) :subject ( ?= # ( String \" brunch buffet for the team \" ) ) ) ) ) )","target":"CreateEvent(AND(has_duration(toHours(1)),at_location(\" Joule \"),has_subject(\" brunch buffet for the team \"),starts_at(NextDOW(\" SUNDAY \")),starts_at(HourMinuteAm(hours=10,minutes=45))))","qid":"65665d37-f178-453e-b238-17665ff02000.0"}
{"source":"can you add a meeting for date night 7 - 8 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :end ( ?= ( TimeAfterDateTime :dateTime ( NextTime :time ( NumberPM :number # ( Number 7 ) ) ) :time ( NumberPM :number # ( Number 8 ) ) ) ) :start ( ?= ( NextTime :time ( NumberPM :number # ( Number 7 ) ) ) ) :subject ( ?= # ( String \" date night \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" date night \"),starts_at(NextTime(time=NumberPM(7))),ends_at(AND(GE(NextTime(time=NumberPM(7))),NumberPM(8)))))","qid":"083f5d77-a460-4137-b25d-42085fe6377a.1"}
{"source":"Hi . I need to make a doctors appointment for Wednesday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" WEDNESDAY \" ) ) ) ) :subject ( ?= # ( String \" doctors appointment \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" doctors appointment \"),starts_at(NextDOW(\" WEDNESDAY \"))))","qid":"68148bec-4e66-433f-b4ac-3b2ccf67fa60.0"}
{"source":"Book a meeting at 3 am tomorrow","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberAM :number # ( Number 3 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(starts_at(Tomorrow()),starts_at(NumberAM(3))))","qid":"b7ba50ab-766e-4334-a8c8-bbaeb2a2a283.3"}
{"source":"Add photo editing for a week from tomorrow at 2 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( adjustByPeriod ( Tomorrow ) ( toWeeks # ( Number 1 ) ) ) :time ( NumberPM :number # ( Number 2 ) ) ) ) :subject ( ?= # ( String \" photo editing \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" photo editing \"),starts_at(adjustByPeriod(Tomorrow(),toWeeks(1))),starts_at(NumberPM(2))))","qid":"c6fcf9e8-147f-4237-a343-469448f3876a.2"}
{"source":"I would like you to add family vacation to my events from the 2 nd to the 10 th .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( EventAllDayForDateRange :dateRange ( DateAndConstraint :date1 ( nextDayOfMonth ( Today ) # ( Number 2 ) ) :date2 ( nextDayOfMonth ( nextDayOfMonth ( Today ) # ( Number 2 ) ) # ( Number 10.0 ) ) ) :event ( Constraint[Event] :subject ( ?= # ( String \" family vacation \" ) ) ) ) ) ) )","target":"CreateEvent(AND(spans_time(DateAndConstraint(date1=nextDayOfMonth(Today(),2),date2=nextDayOfMonth(nextDayOfMonth(Today(),2),10))),has_subject(\" family vacation \")))","qid":"1f67d988-7be2-4041-ad2f-26645baa930f.0"}
{"source":"Can you schedule the meeting with John Peter on Next week .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" John Peter \" ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( NextWeekList ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" John Peter \"),starts_at(NextWeekList())))","qid":"7b72bf16-afa5-4f4a-abe7-84e84278a72c.0"}
{"source":"Sandra is visiting all weekend","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( EventAllDayForDateRange :dateRange ( ThisWeekend ) :event ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Sandra \" ) ) ) ) ) ) :subject ( ?= # ( String \" visiting \" ) ) ) ) ) ) )","target":"CreateEvent(AND(spans_time(ThisWeekend()),with_attendee(\" Sandra \"),has_subject(\" visiting \")))","qid":"4346a11f-5c02-4c0d-8c3a-df238d55f487.2"}
{"source":"Schedule planning committee meeting at 4 pm Wednesday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" WEDNESDAY \" ) ) :time ( NumberPM :number # ( Number 4 ) ) ) ) :subject ( ?= # ( String \" planning committee meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" planning committee meeting \"),starts_at(NextDOW(\" WEDNESDAY \")),starts_at(NumberPM(4))))","qid":"76bd3507-87de-4315-b583-3911204e703a.0"}
{"source":"I want to go to a movie . It 'll have to be an evening .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :time ( Evening ) ) :subject ( ?= # ( String \" go to a movie \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" go to a movie \"),starts_at(Evening())))","qid":"cf76176a-1ffb-4259-a7b8-1989a361538d.0"}
{"source":"Can you add \" optometrist appointment \" to my schedule for next Saturday at 10 am ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" SATURDAY \" ) ) :time ( NumberAM :number # ( Number 10.0 ) ) ) ) :subject ( ?= # ( String \" optometrist appointment \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" optometrist appointment \"),starts_at(NextDOW(\" SATURDAY \")),starts_at(NumberAM(10))))","qid":"51afdf39-f94e-4e38-bda7-b0bb08cd242a.0"}
{"source":"Please put final exam next Friday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) ) ) :subject ( ?= # ( String \" final exam \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" final exam \"),starts_at(NextDOW(\" FRIDAY \"))))","qid":"266c8f7d-5d54-44a1-a29d-bf10778b9fce.4"}
{"source":"Schedule meeting about schedule Monday at 10 am .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :time ( NumberAM :number # ( Number 10.0 ) ) ) ) :subject ( ?= # ( String \" meeting about schedule \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" meeting about schedule \"),starts_at(NextDOW(\" MONDAY \")),starts_at(NumberAM(10))))","qid":"07afa20d-c39b-481d-8da7-fb43865aca5e.0"}
{"source":"create meeting with john on April 5","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" john \" ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( MD :day # ( Number 5 ) :month # ( Month \" APRIL \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" john \"),starts_at(MD(month=\" APRIL \",day=5))))","qid":"9b7760de-33dd-4c9d-8063-3fd127ab1822.1"}
{"source":"Can you add mellow time for Friday afternoon","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( DateTimeConstraint :constraint ( Afternoon ) :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) ) :subject ( ?= # ( String \" mellow time \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" mellow time \"),starts_at(Afternoon()),starts_at(NextDOW(\" FRIDAY \"))))","qid":"ebb7dfe6-65f7-41e1-9d1f-ad2f7737dc05.0"}
{"source":"Can you schedule exercise on Saturday at 10 am .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" SATURDAY \" ) ) :time ( NumberAM :number # ( Number 10.0 ) ) ) ) :subject ( ?= # ( String \" exersize \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" exersize \"),starts_at(NextDOW(\" SATURDAY \")),starts_at(NumberAM(10))))","qid":"4d958d73-537a-4573-9886-7f594581c6db.1"}
{"source":"Does Damon Straeter report to anyone ?","original_target":"( Yield :output ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Damon Straeter \" ) ) ) ) ) ) )","target":"FindManager(\" Damon Straeter \")","qid":"d31ca7cf-f9eb-44aa-b466-97e7e1d8d75d.2"}
{"source":"Create event Doctor Appointment on March 27 th at 3 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( MD :day # ( Number 27 ) :month # ( Month \" MARCH \" ) ) :time ( NumberPM :number # ( Number 3 ) ) ) ) :subject ( ?= # ( String \" Doctor Appointment \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" Doctor Appointment \"),starts_at(MD(month=\" MARCH \",day=27)),starts_at(NumberPM(3))))","qid":"375e952b-2da6-4aeb-aec8-5b1776cb1a0e.5"}
{"source":"Add coffee with Rachel next week .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Rachel \" ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( NextWeekList ) ) :subject ( ?= # ( String \" coffee \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Rachel \"),has_subject(\" coffee \"),starts_at(NextWeekList())))","qid":"c3d8dd22-705b-407b-b7d3-38dbf9dd31b5.0"}
{"source":"Yes , I 'll be out of office from Tuesday through Thursday next week .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( EventAllDayForDateRange :dateRange ( DateAndConstraint :date1 ( DowOfWeekNew :dow # ( DayOfWeek \" TUESDAY \" ) :week ( NextWeekList ) ) :date2 ( DowOfWeekNew :dow # ( DayOfWeek \" THURSDAY \" ) :week ( NextWeekList ) ) ) :event ( Constraint[Event] :showAs ( ?= # ( ShowAsStatus \" OutOfOffice \" ) ) ) ) ) ) )","target":"CreateEvent(AND(spans_time(DateAndConstraint(date1=DowOfWeekNew(dow=DayOfWeek(\" TUESDAY \"),week=NextWeekList()),date2=DowOfWeekNew(dow=DayOfWeek(\" THURSDAY \"),week=NextWeekList()))),has_status(ShowAsStatus(\" OutOfOffice \"))))","qid":"06e21772-7bb8-44da-9000-f2fc82142506.0"}
{"source":"Alright , pencil in \" Driving Range \" at 730 AM .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( NextTime :time ( HourMinuteAm :hours # ( Number 7 ) :minutes # ( Number 30.0 ) ) ) ) :subject ( ?= # ( String \" Driving Range \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" Driving Range \"),starts_at(NextTime(time=HourMinuteAm(hours=7,minutes=30)))))","qid":"f14d4112-fc3a-496d-9155-83f118318fa5.1"}
{"source":"now put Family Fun Time on Sunday starting at 2 pm lasting 3 hours and mark me as being in Unknown status","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :duration ( ?= ( toHours # ( Number 3 ) ) ) :showAs ( ?= # ( ShowAsStatus \" Unknown \" ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" SUNDAY \" ) ) :time ( NumberPM :number # ( Number 2 ) ) ) ) :subject ( ?= # ( String \" Family Fun Time \" ) ) ) ) ) )","target":"CreateEvent(AND(has_duration(toHours(3)),has_status(ShowAsStatus(\" Unknown \")),has_subject(\" Family Fun Time \"),starts_at(NextDOW(\" SUNDAY \")),starts_at(NumberPM(2))))","qid":"c3f5365c-98c7-44d1-a458-9a098d50dbdb.2"}
{"source":"Set event after project meeting Thursday , 1 hour , prep time","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :duration ( ?= ( toHours # ( Number 1 ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" THURSDAY \" ) ) :time ( :time ( :end ( singleton ( :results ( FindEventWrapperWithDefaults :constraint ( Constraint[Event] :subject ( ?~= # ( String \" project meeting \" ) ) ) ) ) ) ) ) ) ) :subject ( ?= # ( String \" prep time \" ) ) ) ) ) )","target":"CreateEvent(AND(has_duration(toHours(1)),has_subject(\" prep time \"),starts_at(NextDOW(\" THURSDAY \")),starts_at(:time(:end(FindEvents(has_subject(\" project meeting \")))))))","qid":"d5560710-6c46-48fc-9112-79eeadb9a1ce.1"}
{"source":"Make an event with Jake , Kim and Abby next month called planning meeting","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( FullMonthofMonth :month ( NextMonth ) ) ) :subject ( ?= # ( String \" planning meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Abby \"),with_attendee(\" Jake \"),with_attendee(\" Kim \"),has_subject(\" planning meeting \"),starts_at(FullMonthofMonth(NextMonth()))))","qid":"43e52c75-f8f6-460b-8c60-fa5c32831230.1"}
{"source":"Ok , now add a family dinner on friday at 5 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( NumberPM :number # ( Number 5 ) ) ) ) :subject ( ?= # ( String \" family dinner \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" family dinner \"),starts_at(NextDOW(\" FRIDAY \")),starts_at(NumberPM(5))))","qid":"f71108aa-0279-4259-a634-96e78361d71c.1"}
{"source":"I need to add Disney on Ice the Thrill of the hunt for tomorrow at 3 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 3 ) ) ) ) :subject ( ?= # ( String \" Disney on Ice the Thrill of the hunt \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" Disney on Ice the Thrill of the hunt \"),starts_at(Tomorrow()),starts_at(NumberPM(3))))","qid":"9d4a1c64-ffc7-4074-ac55-8311cd14a881.3"}
{"source":"Add an appointment for 11 am tuesday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) :time ( NumberAM :number # ( Number 11 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(starts_at(NextDOW(\" TUESDAY \")),starts_at(NumberAM(11))))","qid":"6893137e-8ba7-458f-aad6-20bde2389421.3"}
{"source":"create 1 hour reading time tonight","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :duration ( ?= ( toHours # ( Number 1 ) ) ) :start ( DateTimeConstraint :constraint ( Night ) :date ( Today ) ) :subject ( ?= # ( String \" reading time \" ) ) ) ) ) )","target":"CreateEvent(AND(has_duration(toHours(1)),has_subject(\" reading time \"),starts_at(Night()),starts_at(Today())))","qid":"534a3b0a-8048-4fe0-b99c-08a6c1b9b1d5.1"}
{"source":"Make an item called Team Meeting on Monday starting at 9 : 30 am and lasting one hour","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :duration ( ?= ( toHours # ( Number 1 ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :time ( HourMinuteAm :hours # ( Number 9 ) :minutes # ( Number 30.0 ) ) ) ) :subject ( ?= # ( String \" Team Meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(has_duration(toHours(1)),has_subject(\" Team Meeting \"),starts_at(NextDOW(\" MONDAY \")),starts_at(HourMinuteAm(hours=9,minutes=30))))","qid":"c45135a3-fb75-43b9-bd89-88bf495663de.0"}
{"source":"Create a meeting at 3 : 00 pm tomorrow .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 3 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(starts_at(Tomorrow()),starts_at(NumberPM(3))))","qid":"0361d722-9de5-41ff-834a-b4e127b94bae.2"}
{"source":"Set a call at 4 pm with Susan","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Susan \" ) ) ) ) ) ) :start ( ?= ( NextTime :time ( NumberPM :number # ( Number 4 ) ) ) ) :subject ( ?= # ( String \" call \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Susan \"),has_subject(\" call \"),starts_at(NextTime(time=NumberPM(4)))))","qid":"a2d64a51-7d44-4135-b2a5-3513242b342b.1"}
{"source":"put Whale Watching on my calendar on Sunday starting at 1 pm and lasting 3 hours","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :duration ( ?= ( toHours # ( Number 3 ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" SUNDAY \" ) ) :time ( NumberPM :number # ( Number 1 ) ) ) ) :subject ( ?= # ( String \" Whale Watching \" ) ) ) ) ) )","target":"CreateEvent(AND(has_duration(toHours(3)),has_subject(\" Whale Watching \"),starts_at(NextDOW(\" SUNDAY \")),starts_at(NumberPM(1))))","qid":"d185c42e-90da-4800-bc21-30b4400c3545.0"}
{"source":"Schedule a discipline meeting with Mary tomorrow","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Mary \" ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) :subject ( ?= # ( String \" discipline meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Mary \"),has_subject(\" discipline meeting \"),starts_at(Tomorrow())))","qid":"60539646-0fbc-4bf8-b08f-c91ff58989d0.2"}
{"source":"doctor 's appointment at 3 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( NextTime :time ( NumberPM :number # ( Number 3 ) ) ) ) :subject ( ?= # ( String \" doctor's appointment \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" doctor's appointment \"),starts_at(NextTime(time=NumberPM(3)))))","qid":"5a90201a-62b8-4a1e-9ae6-61fa141114bf.0"}
{"source":"appointment with john next week monday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" john \" ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( DowOfWeekNew :dow # ( DayOfWeek \" MONDAY \" ) :week ( NextWeekList ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" john \"),starts_at(DowOfWeekNew(dow=DayOfWeek(\" MONDAY \"),week=NextWeekList()))))","qid":"59793646-edc0-4ae2-a067-7e151feec8c2.0"}
{"source":"hi , can you schedule a meeting for tomorrow at 8 am ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberAM :number # ( Number 8 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(starts_at(Tomorrow()),starts_at(NumberAM(8))))","qid":"5652a93e-28ff-4d27-9e35-7cd71115d554.0"}
{"source":"Schedule a Subway Ride 45 minutes from now .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( adjustByPeriodDuration ( Now ) ( PeriodDuration :duration ( toMinutes # ( Number 45 ) ) ) ) ) :subject ( ?= # ( String \" Subway Ride \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" Subway Ride \"),starts_at(adjustByPeriodDuration(Now(),PeriodDuration(duration=toMinutes(45))))))","qid":"4b39c329-1627-47d2-84ef-c381dc6ba5f8.1"}
{"source":"Okay go ahead and book go to Judy 's house .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :subject ( ?= # ( String \" go to Judy's house \" ) ) ) ) ) )","target":"CreateEvent(has_subject(\" go to Judy's house \"))","qid":"fdc0ff4b-b6da-47fc-9096-09e943f951b2.5"}
{"source":"My mother is Linda in my address book . Set up a meeting with her tomorrow at 1 Pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Linda \" ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 1 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Linda \"),starts_at(Tomorrow()),starts_at(NumberPM(1))))","qid":"a118f27f-4853-461c-aa76-438c950a8a70.1"}
{"source":"I need an event for next week with Kim and Elli","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Elli \" ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( NextWeekList ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Kim \"),with_attendee(\" Elli \"),starts_at(NextWeekList())))","qid":"57769c76-50ca-469a-a9ff-68911cf5474a.0"}
{"source":"I 'm going shopping at Town Center at 2 pm on Sunday . Add it to my calendar .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :location ( ?= # ( LocationKeyphrase \" Town Center \" ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" SUNDAY \" ) ) :time ( NumberPM :number # ( Number 2 ) ) ) ) :subject ( ?= # ( String \" shopping \" ) ) ) ) ) )","target":"CreateEvent(AND(at_location(\" Town Center \"),has_subject(\" shopping \"),starts_at(NextDOW(\" SUNDAY \")),starts_at(NumberPM(2))))","qid":"6a3d6afe-3b96-4c54-8ca8-0a27a9bbe632.0"}
{"source":"I need to make a sales meeting for friday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) ) ) :subject ( ?= # ( String \" sales meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" sales meeting \"),starts_at(NextDOW(\" FRIDAY \"))))","qid":"975b0ccb-4065-4754-bc50-45852bccec73.4"}
{"source":"I need to fly to Turkey .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :subject ( ?= # ( String \" fly to Turkey \" ) ) ) ) ) )","target":"CreateEvent(has_subject(\" fly to Turkey \"))","qid":"f5170866-5531-4b5e-b63f-f68454de58ff.1"}
{"source":"I 'll be in Indiana the 17 th-24 th","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :location ( ?= # ( LocationKeyphrase \" Indiana \" ) ) :nonEmptyBase ( EventAllDayForDateRange :dateRange ( DateAndConstraint :date1 ( nextDayOfMonth ( Today ) # ( Number 17 ) ) :date2 ( nextDayOfMonth ( nextDayOfMonth ( Today ) # ( Number 17 ) ) # ( Number 24 ) ) ) :event ( Constraint[Event] ) ) ) ) ) )","target":"CreateEvent(AND(at_location(\" Indiana \"),spans_time(DateAndConstraint(date1=nextDayOfMonth(Today(),17),date2=nextDayOfMonth(nextDayOfMonth(Today(),17),24)))))","qid":"99889134-1d06-4a5d-ae79-d76d108f71ab.4"}
{"source":"Thanks . Please schedule meeting with Julia tomorrow at 5 PM at Starbucks .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Julia \" ) ) ) ) ) ) :location ( ?= # ( LocationKeyphrase \" Starbucks \" ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 5 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Julia \"),at_location(\" Starbucks \"),starts_at(Tomorrow()),starts_at(NumberPM(5))))","qid":"dd7ea0a0-a0df-47ce-bd15-a337183694bc.4"}
{"source":"Basketball Practice at 8 Sunday morning .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" SUNDAY \" ) ) :time ( NumberAM :number # ( Number 8 ) ) ) ) :subject ( ?= # ( String \" Basketball Practice \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" Basketball Practice \"),starts_at(NextDOW(\" SUNDAY \")),starts_at(NumberAM(8))))","qid":"c271e938-c9b7-4f98-a8db-460949a71c7a.0"}
{"source":"I need you to schedule a dentist appoint for me tomorrow at 2 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 2 ) ) ) ) :subject ( ?= # ( String \" dentist appoint \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" dentist appoint \"),starts_at(Tomorrow()),starts_at(NumberPM(2))))","qid":"7f5ddb63-6e6a-4845-b330-b374f9cdc750.0"}
{"source":"Add softball on Friday from 6 : 15 PM until 8 : 00 PM .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :end ( ?= ( TimeAfterDateTime :dateTime ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( HourMinutePm :hours # ( Number 6 ) :minutes # ( Number 15 ) ) ) :time ( NumberPM :number # ( Number 8 ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( HourMinutePm :hours # ( Number 6 ) :minutes # ( Number 15 ) ) ) ) :subject ( ?= # ( String \" softball \" ) ) ) ) ) )","target":"CreateEvent(AND(ends_at(AND(GE(DateTime?(date=NextDOW(\" FRIDAY \"),time=HourMinutePm(hours=6,minutes=15))),NumberPM(8))),has_subject(\" softball \"),starts_at(NextDOW(\" FRIDAY \")),starts_at(HourMinutePm(hours=6,minutes=15))))","qid":"5ed5c0b8-9032-414c-b84a-49a27ff9b17a.0"}
{"source":"Create a meeting in the afternoon on Monday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( DateTimeConstraint :constraint ( Afternoon ) :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) ) ) ) ) )","target":"CreateEvent(AND(starts_at(Afternoon()),starts_at(NextDOW(\" MONDAY \"))))","qid":"56b0a51e-59e1-498a-9b18-0e4643933b4d.0"}
{"source":"Add a sales meeting on Monday with Kim , Jake , and Gerald","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Gerald \" ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) ) ) :subject ( ?= # ( String \" sales meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Gerald \"),with_attendee(\" Kim \"),with_attendee(\" Jake \"),has_subject(\" sales meeting \"),starts_at(NextDOW(\" MONDAY \"))))","qid":"04602ee9-158b-417d-81cc-dc6b7ba86393.2"}
{"source":"put on my appointment tomorrow before 7 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( OnDateBeforeTime :date ( Tomorrow ) :time ( NumberPM :number # ( Number 7 ) ) ) ) ) ) )","target":"CreateEvent(starts_at(OnDateBeforeTime(date=Tomorrow(),time=NumberPM(7))))","qid":"dc4fccb8-47ed-4e62-bc4d-f5e5bc83f608.4"}
{"source":"Set up a team meeting with chery roydon and scot hanson","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" chery roydon \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" scot hanson \" ) ) ) ) ) ) ) :subject ( ?= # ( String \" team meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" chery roydon \"),with_attendee(\" scot hanson \"),has_subject(\" team meeting \")))","qid":"e72754cd-d1ae-417c-9183-43ea360dc522.0"}
{"source":"My name is Damon Straeter . I need to know who my manager is .","original_target":"( Yield :output ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Damon Straeter \" ) ) ) ) ) ) )","target":"FindManager(\" Damon Straeter \")","qid":"b5f179f5-0d37-4bc1-b369-1da8205f77fb.0"}
{"source":"That 's fine . Please put an event for dinner with Rose , Susan , and Surinder at 4 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Rose \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Susan \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Surinder \" ) ) ) ) ) ) ) :start ( ?= ( NextTime :time ( NumberPM :number # ( Number 4 ) ) ) ) :subject ( ?= # ( String \" dinner \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Surinder \"),with_attendee(\" Rose \"),with_attendee(\" Susan \"),has_subject(\" dinner \"),starts_at(NextTime(time=NumberPM(4)))))","qid":"93e6f481-0c6d-4d72-ba0a-12a8903571bf.1"}
{"source":"Make me a meeting with Abby","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(\" Abby \"))","qid":"dfc8b454-67a1-4b2b-b6d6-e363f0830c16.0"}
{"source":"Do I have any openings in my schedule next Tuesday ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( EventOnDate :date ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) :event ( Constraint[Event] ) ) ) ) )","target":"CreateEvent(starts_at(NextDOW(\" TUESDAY \")))","qid":"1673e0f8-bb89-4a05-954e-62d09edd799b.0"}
{"source":"put meeting with mary ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" mary \" ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(\" mary \"))","qid":"71faa56e-06d3-4333-a5f3-a052c059a85c.6"}
{"source":"I have a doctors appointment on Monday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) ) ) :subject ( ?= # ( String \" doctors appointment \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" doctors appointment \"),starts_at(NextDOW(\" MONDAY \"))))","qid":"711e3f16-c055-4f9a-bb56-e4e994bd47bd.5"}
{"source":"I would like to add an event .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] ) ) ) )","target":"CreateEvent(Event?())","qid":"db6ccfc2-9e05-4db1-829d-8240e84825d6.5"}
{"source":"Set up a early morning meeting at 0400 with Ashley Straeter .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Ashley Straeter \" ) ) ) ) ) ) :start ( ?= ( NextTime :time ( NumberAM :number # ( Number 4 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Ashley Straeter \"),starts_at(NextTime(time=NumberAM(4)))))","qid":"6fa4bb88-731b-4bd1-93e8-0c8e49fa4827.1"}
{"source":"Create an event for a fundraiser in September 2020 .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( FullMonthofMonth :month # ( Month \" SEPTEMBER \" ) :year # ( Number 2020.0 ) ) ) :subject ( ?= # ( String \" fundraiser \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" fundraiser \"),starts_at(FullMonthofMonth(year=2020,\" SEPTEMBER \"))))","qid":"4b6661cf-86db-4d37-bb04-d2c088cef8c7.1"}
{"source":"Make an event for me for Thursday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" THURSDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(starts_at(NextDOW(\" THURSDAY \")))","qid":"c5f2ac34-8499-42cc-ba1a-d46c0589f646.4"}
{"source":"BOOK 1 HOUR FOR LUNCH TODAY AFTERNOON","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :duration ( ?= ( toHours # ( Number 1 ) ) ) :start ( DateTimeConstraint :constraint ( Afternoon ) :date ( Today ) ) :subject ( ?= # ( String \" LUNCH \" ) ) ) ) ) )","target":"CreateEvent(AND(has_duration(toHours(1)),has_subject(\" LUNCH \"),starts_at(Afternoon()),starts_at(Today())))","qid":"80412735-3520-428c-9d51-58847c223306.0"}
{"source":"Add \" Full Staff Meeting \" to my calendar for Friday right after lunch .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( OnDateAfterTime :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( Lunch ) ) :subject ( ?= # ( String \" Full Staff Meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" Full Staff Meeting \"),starts_at(OnDateAfterTime(date=NextDOW(\" FRIDAY \"),time=Lunch()))))","qid":"cf51af89-c9d8-46c6-acf2-eb58173112eb.0"}
{"source":"Set an appointment for my nails on thursday at 1500","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" THURSDAY \" ) ) :time ( HourMinuteMilitary :hours # ( Number 15 ) :minutes # ( Number 0 ) ) ) ) :subject ( ?= # ( String \" appointment for my nails \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" appointment for my nails \"),starts_at(NextDOW(\" THURSDAY \")),starts_at(HourMinuteMilitary(hours=15,minutes=0))))","qid":"a06514cb-51e4-4718-b23d-15864bdf6263.0"}
{"source":"work meeting friday night","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( DateTimeConstraint :constraint ( Night ) :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) ) :subject ( ?= # ( String \" work meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" work meeting \"),starts_at(Night()),starts_at(NextDOW(\" FRIDAY \"))))","qid":"50abeccf-c4b9-4380-a45f-e2a06b556ca0.0"}
{"source":"create golf meeting after this practice","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( :end ( singleton ( :results ( FindEventWrapperWithDefaults :constraint ( Constraint[Event] :subject ( ?~= # ( String \" practice \" ) ) ) ) ) ) ) ) :subject ( ?= # ( String \" golf meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" golf meeting \"),starts_at(:end(FindEvents(has_subject(\" practice \"))))))","qid":"9ae2046b-84e8-4329-8416-04f429854b7f.1"}
{"source":"Schedule gym time with Mary tomorrow at noon .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Mary \" ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( Noon ) ) ) :subject ( ?= # ( String \" gym time \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Mary \"),has_subject(\" gym time \"),starts_at(Tomorrow()),starts_at(Noon())))","qid":"89acd58a-c875-45ae-b959-17d2cd00253a.3"}
{"source":"please save the date of coming sunday is holiday in my calendar","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" SUNDAY \" ) ) ) ) :subject ( ?= # ( String \" holiday \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" holiday \"),starts_at(NextDOW(\" SUNDAY \"))))","qid":"1f6f0217-f87c-43ef-a497-f1b11eb1de90.1"}
{"source":"I need to schedule a co - worker sync with Jerri Skinner and Cecelia Waller .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jerri Skinner \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Cecelia Waller \" ) ) ) ) ) ) ) :subject ( ?= # ( String \" co-worker sync \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jerri Skinner \"),with_attendee(\" Cecelia Waller \"),has_subject(\" co_worker sync \")))","qid":"5ffef6a8-0528-4b6b-a635-d2a4674ba822.0"}
{"source":"Schedule Save the Planet with Steve and Tony tomorrow at 9 am .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Steve \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Tony \" ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberAM :number # ( Number 9 ) ) ) ) :subject ( ?= # ( String \" Save the Planet \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Steve \"),with_attendee(\" Tony \"),has_subject(\" Save the Planet \"),starts_at(Tomorrow()),starts_at(NumberAM(9))))","qid":"09f614dd-70fa-49eb-8725-a9995fbbc3ec.3"}
{"source":"I need to pick strawberries at 5\"30 tomorrow .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( HourMinutePm :hours # ( Number 5 ) :minutes # ( Number 30.0 ) ) ) ) :subject ( ?= # ( String \" pick strawberries \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" pick strawberries \"),starts_at(Tomorrow()),starts_at(HourMinutePm(hours=5,minutes=30))))","qid":"1b49e257-bdf0-4ce3-b6f9-c646e55f3137.0"}
{"source":"add meeting with Janice on Saturday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Janice \" ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" SATURDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Janice \"),starts_at(NextDOW(\" SATURDAY \"))))","qid":"8c2ac1fe-10b7-4685-9e1c-6cc66f195f2b.1"}
{"source":"Can you schedule an event for tomorrow and call it football game ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) :subject ( ?= # ( String \" football game \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" football game \"),starts_at(Tomorrow())))","qid":"b28afe75-5d9e-4c9a-84c0-3c2348e44d7b.4"}
{"source":"create a picnic for me please","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :subject ( ?= # ( String \" picnic \" ) ) ) ) ) )","target":"CreateEvent(has_subject(\" picnic \"))","qid":"d01c2ab4-3501-4462-a03c-300a42f2333f.0"}
{"source":"Add to the calendar a party planning meeting with Jan tomorrow evening .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jan \" ) ) ) ) ) ) :start ( DateTimeConstraint :constraint ( Evening ) :date ( Tomorrow ) ) :subject ( ?= # ( String \" party planning \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jan \"),has_subject(\" party planning \"),starts_at(Evening()),starts_at(Tomorrow())))","qid":"1ed11be7-554c-4389-b520-b2ba927e72ca.1"}
{"source":"Can you put \" Trip to Berkeley \" for this coming Saturday at 2 pm ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" SATURDAY \" ) ) :time ( NumberPM :number # ( Number 2 ) ) ) ) :subject ( ?= # ( String \" Trip to Berkeley \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" Trip to Berkeley \"),starts_at(NextDOW(\" SATURDAY \")),starts_at(NumberPM(2))))","qid":"bb02689d-9837-4935-bc63-e36210378b62.2"}
{"source":"Add a meeting to my calendar for 2 : 30 pm on Friday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( HourMinutePm :hours # ( Number 2 ) :minutes # ( Number 30.0 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(starts_at(NextDOW(\" FRIDAY \")),starts_at(HourMinutePm(hours=2,minutes=30))))","qid":"3ab86067-b7b4-447b-ac05-96fc7ec102c8.0"}
{"source":"Put down return zip car at 4 PM .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( NextTime :time ( NumberPM :number # ( Number 4 ) ) ) ) :subject ( ?= # ( String \" return zip car \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" return zip car \"),starts_at(NextTime(time=NumberPM(4)))))","qid":"5cb76d5e-2e39-4907-93db-c03eebda87b1.3"}
{"source":"I want to get a room at Bellevue to work on production presentation at 3 tomorrow .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :location ( andConstraint ( ?= # ( LocationKeyphrase \" Bellevue \" ) ) ( roomRequest ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 3 ) ) ) ) :subject ( ?= # ( String \" work on production presentation \" ) ) ) ) ) )","target":"CreateEvent(AND(at_location(\" Bellevue \"),at_location(roomRequest()),has_subject(\" work on production presentation \"),starts_at(Tomorrow()),starts_at(NumberPM(3))))","qid":"73e17346-ff19-41c1-af83-e753c3483929.2"}
{"source":"Set me up for Thursday , June 6 th .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( MD :day # ( Number 6 ) :month # ( Month \" JUNE \" ) ) ) ) ) ) ) )","target":"CreateEvent(starts_at(MD(month=\" JUNE \",day=6)))","qid":"041d646f-bf84-4841-8936-336934d12874.2"}
{"source":"Add a meeting with Tom from accounting for 2 pm , tomorrow after lunch .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Tom \" ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 2 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Tom \"),starts_at(Tomorrow()),starts_at(NumberPM(2))))","qid":"ed6f6a37-195b-4d64-b768-843637eb1968.3"}
{"source":"Appointment is for 2 PM","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( NextTime :time ( NumberPM :number # ( Number 2 ) ) ) ) ) ) ) )","target":"CreateEvent(starts_at(NextTime(time=NumberPM(2))))","qid":"9775af38-c535-4cf8-8fe4-139b21968790.4"}
{"source":"Create a meeting with Peter , Paul and Mary Saturday to play D&D.","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Peter \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Paul \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Mary \" ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" SATURDAY \" ) ) ) ) :subject ( ?= # ( String \" play D&D \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Mary \"),with_attendee(\" Peter \"),with_attendee(\" Paul \"),has_subject(\" play D&D \"),starts_at(NextDOW(\" SATURDAY \"))))","qid":"ca2d09d5-becd-438a-83b3-f38ad162dd61.0"}
{"source":"Can you add breakfast with Jamie tomorrow .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jamie \" ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) :subject ( ?= # ( String \" breakfast \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jamie \"),has_subject(\" breakfast \"),starts_at(Tomorrow())))","qid":"4bf4feee-5faf-480d-b3b7-2052da277bca.5"}
{"source":"I need to add a meeting at ten AM tomorrow .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberAM :number # ( Number 10.0 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(starts_at(Tomorrow()),starts_at(NumberAM(10))))","qid":"776a1632-b2b6-4518-9b1b-aadba94da6ca.3"}
{"source":"Who is Jane 's manager ?","original_target":"( Yield :output ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jane \" ) ) ) ) ) ) )","target":"FindManager(\" Jane \")","qid":"3f765174-be0b-43a6-b1e6-8eacb0c2ac00.0"}
{"source":"I have a meeting with Deckard today called story time from 4 : 25 pm until 5 : 25 pm today","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Deckard \" ) ) ) ) ) ) :end ( ?= ( TimeAfterDateTime :dateTime ( DateAtTimeWithDefaults :date ( Today ) :time ( HourMinutePm :hours # ( Number 4 ) :minutes # ( Number 25 ) ) ) :time ( HourMinutePm :hours # ( Number 5 ) :minutes # ( Number 25 ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Today ) :time ( HourMinutePm :hours # ( Number 4 ) :minutes # ( Number 25 ) ) ) ) :subject ( ?= # ( String \" story time \" ) ) ) ) ) )","target":"CreateEvent(AND(ends_at(AND(GE(DateTime?(date=Today(),time=HourMinutePm(hours=4,minutes=25))),HourMinutePm(hours=5,minutes=25))),with_attendee(\" Deckard \"),has_subject(\" story time \"),starts_at(Today()),starts_at(HourMinutePm(hours=4,minutes=25))))","qid":"1e3391cd-b2d9-4b1c-b3a7-16c5e7cbc745.0"}
{"source":"Put something on my schedule for tomorrow night .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( DateTimeConstraint :constraint ( Night ) :date ( Tomorrow ) ) ) ) ) )","target":"CreateEvent(AND(starts_at(Night()),starts_at(Tomorrow())))","qid":"42f93370-649c-485f-946d-e050ba7b887a.3"}
{"source":"I need lunch with Tommy for Friday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Tommy \" ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) ) ) :subject ( ?= # ( String \" lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Tommy \"),has_subject(\" lunch \"),starts_at(NextDOW(\" FRIDAY \"))))","qid":"10beea64-45a5-44ed-8238-69e1d9930786.0"}
{"source":"Make an event for 1 am","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( NextTime :time ( NumberAM :number # ( Number 1 ) ) ) ) ) ) ) )","target":"CreateEvent(starts_at(NextTime(time=NumberAM(1))))","qid":"aa84d59e-f1a2-48cf-9ffa-60c7ae8b308c.2"}
{"source":"I need to schedule a pedicure for 40 minutes between 4 and 7 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :duration ( ?= ( toMinutes # ( Number 40.0 ) ) ) :start ( DateTimeAndConstraint :dateTime1 ( NextTime :time ( NumberPM :number # ( Number 4 ) ) ) :dateTime2 ( TimeAfterDateTime :dateTime ( NextTime :time ( NumberPM :number # ( Number 4 ) ) ) :time ( NumberPM :number # ( Number 7 ) ) ) ) :subject ( ?= # ( String \" pedicure \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" pedicure \"),starts_at(DateTimeRange(start=NextTime(time=NumberPM(4)),end=AND(GE(NextTime(time=NumberPM(4))),NumberPM(7)))),has_duration(toMinutes(40))))","qid":"4274aca5-b801-4f52-9033-2943d0648b84.4"}
{"source":"make a apportionment for today","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( EventOnDate :date ( Today ) :event ( Constraint[Event] :subject ( ?= # ( String \" apportionment \" ) ) ) ) ) ) )","target":"CreateEvent(AND(starts_at(Today()),has_subject(\" apportionment \")))","qid":"e92fbf71-aa7a-496d-8c9c-62ebd2c2841c.2"}
{"source":"Can you add lunch instead for 1330 ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( NextTime :time ( HourMinuteMilitary :hours # ( Number 13 ) :minutes # ( Number 30.0 ) ) ) ) :subject ( ?= # ( String \" lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" lunch \"),starts_at(NextTime(time=HourMinuteMilitary(hours=13,minutes=30)))))","qid":"e1f42aea-b795-46ac-acda-8e549a6609ba.1"}
{"source":"what time is my new job appointment going to be tomorrow am or 8 thirty am","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :end ( ?= ( TimeAfterDateTime :dateTime ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberAM :number # ( Number 8 ) ) ) :time ( NumberAM :number # ( Number 8 ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberAM :number # ( Number 8 ) ) ) ) :subject ( ?= # ( String \" job appointment \" ) ) ) ) ) )","target":"CreateEvent(AND(ends_at(AND(GE(DateTime?(date=Tomorrow(),time=NumberAM(8))),NumberAM(8))),has_subject(\" job appointment \"),starts_at(Tomorrow()),starts_at(NumberAM(8))))","qid":"56a587d8-bb62-4239-9be7-ca3c60661bdf.0"}
{"source":"Tell me who James Potter 's manager is .","original_target":"( Yield :output ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" James Potter \" ) ) ) ) ) ) )","target":"FindManager(\" James Potter \")","qid":"297667d1-bf64-40b4-bafa-e49303009c84.3"}
{"source":"Lunch with max at today 2 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" max \" ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Today ) :time ( NumberPM :number # ( Number 2 ) ) ) ) :subject ( ?= # ( String \" Lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" max \"),has_subject(\" Lunch \"),starts_at(Today()),starts_at(NumberPM(2))))","qid":"68950513-821d-489c-91e5-11f042d52d8e.0"}
{"source":"I need to schedule a team meeting with John and Mark today at 3 PM in the boardroom","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" John \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Mark \" ) ) ) ) ) ) ) :location ( ?= # ( LocationKeyphrase \" the boardroom \" ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Today ) :time ( NumberPM :number # ( Number 3 ) ) ) ) :subject ( ?= # ( String \" team meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" John \"),with_attendee(\" Mark \"),at_location(\" the boardroom \"),has_subject(\" team meeting \"),starts_at(Today()),starts_at(NumberPM(3))))","qid":"9904b8d7-c73e-45c5-bcbe-250506fa6cbf.0"}
{"source":"I have to add a dentist appointment for Friday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) ) ) :subject ( ?= # ( String \" dentist appointment \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" dentist appointment \"),starts_at(NextDOW(\" FRIDAY \"))))","qid":"9ccce158-3d04-415d-b2fd-bcde53567f13.0"}
{"source":"Can you add the football tournament out of town for 3 days on November 1 ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( EventAllDayStartingDateForPeriod :event ( Constraint[Event] :subject ( ?= # ( String \" football tournament out of town \" ) ) ) :period ( toDays # ( Number 3 ) ) :startDate ( MD :day # ( Number 1 ) :month # ( Month \" NOVEMBER \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" football tournament out of town \"),has_duration(toDays(3)),starts_at(MD(month=\" NOVEMBER \",day=1)),starts_at(Time(hour=0,minute=0))))","qid":"ede76f43-cd46-477b-ae7e-464fa805d56b.4"}
{"source":"Can you schedule a party for 5 : 00 for Kevin , Joe , and Kim ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kevin \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Joe \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim \" ) ) ) ) ) ) ) :start ( ?= ( NextTime :time ( NumberPM :number # ( Number 5 ) ) ) ) :subject ( ?= # ( String \" party \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Kim \"),with_attendee(\" Kevin \"),with_attendee(\" Joe \"),has_subject(\" party \"),starts_at(NextTime(time=NumberPM(5)))))","qid":"7e5a81a0-68dd-482f-b462-89550667a345.0"}
{"source":"Make a Halloween party with Tina , Miko , Uzu and Suzi ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Tina \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Miko \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Uzu \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Suzi \" ) ) ) ) ) ) ) :subject ( ?= # ( String \" Halloween party \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Suzi \"),with_attendee(\" Uzu \"),with_attendee(\" Tina \"),with_attendee(\" Miko \"),has_subject(\" Halloween party \")))","qid":"aef6931f-aa38-44ef-8706-a79e364b8fa9.4"}
{"source":"july 5 through july 10 add vacation","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :nonEmptyBase ( EventAllDayForDateRange :dateRange ( DateAndConstraint :date1 ( MD :day # ( Number 5 ) :month # ( Month \" JULY \" ) ) :date2 ( MD :day # ( Number 10.0 ) :month # ( Month \" JULY \" ) ) ) :event ( Constraint[Event] ) ) :subject ( ?= # ( String \" vacation \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" vacation \"),spans_time(DateAndConstraint(date1=MD(month=\" JULY \",day=5),date2=MD(month=\" JULY \",day=10)))))","qid":"619e5158-a907-4244-bd11-cea939ffd64b.11"}
{"source":"Find two hours on Saturday for basketball practice with Sam .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Sam \" ) ) ) ) ) ) :duration ( ?= ( toHours # ( Number 2 ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" SATURDAY \" ) ) ) ) :subject ( ?= # ( String \" basketball practice \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Sam \"),has_subject(\" basketball practice \"),starts_at(NextDOW(\" SATURDAY \")),has_duration(toHours(2))))","qid":"e982554f-9037-49f7-8219-ae1b9a5a476f.1"}
{"source":"Add date night for next friday at 7 for 2 hours","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :duration ( ?= ( toHours # ( Number 2 ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( NumberPM :number # ( Number 7 ) ) ) ) :subject ( ?= # ( String \" date night \" ) ) ) ) ) )","target":"CreateEvent(AND(has_duration(toHours(2)),has_subject(\" date night \"),starts_at(NextDOW(\" FRIDAY \")),starts_at(NumberPM(7))))","qid":"3243cd13-cd77-4c5a-a6a7-75cf3668211c.0"}
{"source":"Create new appointment for tomorrow at noon with Paige Ashworth .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Paige Ashworth \" ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( Noon ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Paige Ashworth \"),starts_at(Tomorrow()),starts_at(Noon())))","qid":"a388ba60-214e-4cd5-96f8-429acfe5332a.1"}
{"source":"martinis at 2 : 30 sharp","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :time ( ?= ( HourMinutePm :hours # ( Number 2 ) :minutes # ( Number 30.0 ) ) ) ) :subject ( ?= # ( String \" martinis \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" martinis \"),starts_at(HourMinutePm(hours=2,minutes=30))))","qid":"96b18bfd-6e79-4846-a452-19c2678c88f4.4"}
{"source":"i need to plan \" 4 th of July Party \"","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :subject ( ?= # ( String \" 4th of July Party \" ) ) ) ) ) )","target":"CreateEvent(has_subject(\" 4th of July Party \"))","qid":"208815cb-7f0d-4425-9ed6-7a8666970a58.0"}
{"source":"I want to add dinner with Mary at 6 p.m. to my schedule tomorrow .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Mary \" ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 6 ) ) ) ) :subject ( ?= # ( String \" dinner \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Mary \"),has_subject(\" dinner \"),starts_at(Tomorrow()),starts_at(NumberPM(6))))","qid":"b90443dd-2e43-4152-8b45-cb4c28cc4289.0"}
{"source":"make an appointment for tomorrow at 9 am for me to see the dentist","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberAM :number # ( Number 9 ) ) ) ) :subject ( ?= # ( String \" see the dentist \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" see the dentist \"),starts_at(Tomorrow()),starts_at(NumberAM(9))))","qid":"51879c79-3ad7-46b1-831a-55d3bcb3fd2d.0"}
{"source":"Add to calendar baseball game with Joey on Friday at 8 : 00 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Joey \" ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( NumberPM :number # ( Number 8 ) ) ) ) :subject ( ?= # ( String \" baseball game \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Joey \"),has_subject(\" baseball game \"),starts_at(NextDOW(\" FRIDAY \")),starts_at(NumberPM(8))))","qid":"35b6332c-3876-4e78-9ecd-f2e50092e6b6.0"}
{"source":"Do 5 pm to 6 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :end ( ?= ( TimeAfterDateTime :dateTime ( NextTime :time ( NumberPM :number # ( Number 5 ) ) ) :time ( NumberPM :number # ( Number 6 ) ) ) ) :start ( ?= ( NextTime :time ( NumberPM :number # ( Number 5 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(starts_at(NextTime(time=NumberPM(5))),ends_at(AND(GE(NextTime(time=NumberPM(5))),NumberPM(6)))))","qid":"3952793f-b711-446c-ab4d-36d6a45670ba.2"}
{"source":"can you set up an event at 10 : 30 AM","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( NextTime :time ( HourMinuteAm :hours # ( Number 10.0 ) :minutes # ( Number 30.0 ) ) ) ) ) ) ) )","target":"CreateEvent(starts_at(NextTime(time=HourMinuteAm(hours=10,minutes=30))))","qid":"64f491f9-35fb-48aa-b5fb-49eaf298c572.4"}
{"source":"Ok then schedule an appointment with Gia sometime after 3 tomorrow","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Gia \" ) ) ) ) ) ) :start ( OnDateAfterTime :date ( Tomorrow ) :time ( NumberPM :number # ( Number 3 ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Gia \"),starts_at(OnDateAfterTime(date=Tomorrow(),time=NumberPM(3)))))","qid":"95614f36-0570-43db-b359-77f3d80b7f96.4"}
{"source":"Create EPA compliance in 2021","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( FullYearofYear :year # ( Number 2021 ) ) ) :subject ( ?= # ( String \" EPA compliance \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" EPA compliance \"),starts_at(FullYearofYear(2021))))","qid":"0c099ab2-9be9-4b57-866e-a941fe2724b7.2"}
{"source":"Set up a conference room in cc for me","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :location ( andConstraint ( ?= # ( LocationKeyphrase \" cc for me \" ) ) ( roomRequest ) ) ) ) ) )","target":"CreateEvent(AND(at_location(\" cc for me \"),at_location(roomRequest())))","qid":"301477ea-45ea-4a34-b56a-048fb4da295e.0"}
{"source":"I have a workout tomorrow at 3 am with Abby , Elli , and Jennifer .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Elli \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jennifer \" ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberAM :number # ( Number 3 ) ) ) ) :subject ( ?= # ( String \" workout \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jennifer \"),with_attendee(\" Abby \"),with_attendee(\" Elli \"),has_subject(\" workout \"),starts_at(Tomorrow()),starts_at(NumberAM(3))))","qid":"e3b3997b-e0ba-49f8-9fb2-b0378cffb234.1"}
{"source":"Make an event for Monday at 3 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :time ( NumberPM :number # ( Number 3 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(starts_at(NextDOW(\" MONDAY \")),starts_at(NumberPM(3))))","qid":"3cd013e1-1ac2-47d0-a04c-4d9f530772d5.4"}
{"source":"Schedule piano for John Monday at 5 PM for 1 hour .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" John \" ) ) ) ) ) ) :duration ( ?= ( toHours # ( Number 1 ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :time ( NumberPM :number # ( Number 5 ) ) ) ) :subject ( ?= # ( String \" piano \" ) ) ) ) ) )","target":"CreateEvent(AND(has_duration(toHours(1)),with_attendee(\" John \"),has_subject(\" piano \"),starts_at(NextDOW(\" MONDAY \")),starts_at(NumberPM(5))))","qid":"91c6b942-8a82-4bd2-b90c-380394511aa4.4"}
{"source":"Create a meeting in the afternoon on Monday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( DateTimeConstraint :constraint ( Afternoon ) :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) ) ) ) ) )","target":"CreateEvent(AND(starts_at(Afternoon()),starts_at(NextDOW(\" MONDAY \"))))","qid":"569bc17d-f4bd-4ce8-bcf2-c915af4e291d.3"}
{"source":"Can you create an event for April 29 th at 8 : 45 am","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( MD :day # ( Number 29 ) :month # ( Month \" APRIL \" ) ) :time ( HourMinuteAm :hours # ( Number 8 ) :minutes # ( Number 45 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(starts_at(MD(month=\" APRIL \",day=29)),starts_at(HourMinuteAm(hours=8,minutes=45))))","qid":"60d690c4-5a0e-47b6-9b88-770eb5872986.2"}
{"source":"I want a meeting around 10 next Friday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( AroundDateTime :dateTime ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( NumberAM :number # ( Number 10.0 ) ) ) ) ) ) ) )","target":"CreateEvent(starts_at(AroundDateTime(dateTime=DateTime?(date=NextDOW(\" FRIDAY \"),time=NumberAM(10)))))","qid":"ecb01e63-c7bb-4a7e-bb59-5c9426015afc.3"}
{"source":"Hi , I need to schedule picking up my son at the Amtrak on Saturday afternoon .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :location ( ?= # ( LocationKeyphrase \" the Amtrak \" ) ) :start ( DateTimeConstraint :constraint ( Afternoon ) :date ( NextDOW :dow # ( DayOfWeek \" SATURDAY \" ) ) ) :subject ( ?= # ( String \" picking up my son \" ) ) ) ) ) )","target":"CreateEvent(AND(at_location(\" the Amtrak \"),has_subject(\" picking up my son \"),starts_at(Afternoon()),starts_at(NextDOW(\" SATURDAY \"))))","qid":"708ad6ca-cd55-42c7-9b33-120b64a46c43.0"}
{"source":"Tuesday at 3 pm , make a meeting called \" Budget \" .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) :time ( NumberPM :number # ( Number 3 ) ) ) ) :subject ( ?= # ( String \" Budget \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" Budget \"),starts_at(NextDOW(\" TUESDAY \")),starts_at(NumberPM(3))))","qid":"ac9cb169-d24b-41bb-83e3-3adde7dcc6c3.2"}
{"source":"Can you create new doctors appointment","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :subject ( ?= # ( String \" doctors appointment \" ) ) ) ) ) )","target":"CreateEvent(has_subject(\" doctors appointment \"))","qid":"5458cc0a-13c9-46b1-b35a-5a909c934356.1"}
{"source":"ok make a meeting on monday noon","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :time ( Noon ) ) ) ) ) ) )","target":"CreateEvent(AND(starts_at(NextDOW(\" MONDAY \")),starts_at(Noon())))","qid":"50186efa-d48f-4271-ba2d-a5d8635d0fb8.1"}
{"source":"Can you set up a dance - off with Jerri Skinner next Thursday ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jerri Skinner \" ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" THURSDAY \" ) ) ) ) :subject ( ?= # ( String \" dance-off \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jerri Skinner \"),has_subject(\" dance_off \"),starts_at(NextDOW(\" THURSDAY \"))))","qid":"f5043005-48f8-4ac1-8ef9-690456de4eec.0"}
{"source":"kindly set up the dinner event at Cambridge . We need a room","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :location ( andConstraint ( ?= # ( LocationKeyphrase \" Cambridge \" ) ) ( roomRequest ) ) :subject ( ?= # ( String \" dinner \" ) ) ) ) ) )","target":"CreateEvent(AND(at_location(\" Cambridge \"),at_location(roomRequest()),has_subject(\" dinner \")))","qid":"6fcc174d-3492-4521-92f5-6c43f1dd1944.0"}
{"source":"Can you schedule me an event on Sunday at 10 called salvation ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" SUNDAY \" ) ) :time ( NumberPM :number # ( Number 10.0 ) ) ) ) :subject ( ?= # ( String \" salvation \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" salvation \"),starts_at(NextDOW(\" SUNDAY \")),starts_at(NumberPM(10))))","qid":"e57e5390-472b-42aa-b52f-c0ffc0085a06.4"}
{"source":"Mark me as busy 10 - 12 .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :end ( ?= ( TimeAfterDateTime :dateTime ( NextTime :time ( NumberAM :number # ( Number 10.0 ) ) ) :time ( NumberPM :number # ( Number 12 ) ) ) ) :showAs ( ?= # ( ShowAsStatus \" Busy \" ) ) :start ( ?= ( NextTime :time ( NumberAM :number # ( Number 10.0 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(starts_at(NextTime(time=NumberAM(10))),ends_at(AND(GE(NextTime(time=NumberAM(10))),NumberPM(12))),has_status(ShowAsStatus(\" Busy \"))))","qid":"66e77b60-b762-4152-a13a-09fc9019de99.0"}
{"source":"I have an upcoming meeting . please book conference room in Cambridge","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :location ( andConstraint ( ?= # ( LocationKeyphrase \" Cambridge \" ) ) ( roomRequest ) ) ) ) ) )","target":"CreateEvent(AND(at_location(\" Cambridge \"),at_location(roomRequest())))","qid":"995a86f1-23f6-4b9f-ab21-8712cbc5f040.0"}
{"source":"I need to add a doctor 's followup for one week from today .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( adjustByPeriod ( Today ) ( toWeeks # ( Number 1 ) ) ) ) ) :subject ( ?= # ( String \" doctor's followup \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" doctor's followup \"),starts_at(adjustByPeriod(Today(),toWeeks(1)))))","qid":"eb19a6c7-858e-4ed6-bb6e-6badd21ed8a4.0"}
{"source":"tomorrow choosing the lunch time 6 am","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberAM :number # ( Number 6 ) ) ) ) :subject ( ?= # ( String \" choosing the lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" choosing the lunch \"),starts_at(Tomorrow()),starts_at(NumberAM(6))))","qid":"c0c4936c-5dfa-4253-ab8c-fb9447812634.2"}
{"source":"Add skiing on February 22 at 9 am","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( MD :day # ( Number 22 ) :month # ( Month \" FEBRUARY \" ) ) :time ( NumberAM :number # ( Number 9 ) ) ) ) :subject ( ?= # ( String \" skiing \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" skiing \"),starts_at(MD(month=\" FEBRUARY \",day=22)),starts_at(NumberAM(9))))","qid":"26928598-3b2e-4731-af36-9092bec1cf34.0"}
{"source":"Set a meeting on the first for Rob","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Rob \" ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( ClosestDay :date ( Today ) :day # ( Number 1 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Rob \"),starts_at(ClosestDay(date=Today(),day=1))))","qid":"822a7a20-b65c-4225-b460-528f18468e00.0"}
{"source":"out of the office friday at 3 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :showAs ( ?= # ( ShowAsStatus \" OutOfOffice \" ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( NumberPM :number # ( Number 3 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(has_status(ShowAsStatus(\" OutOfOffice \")),starts_at(NextDOW(\" FRIDAY \")),starts_at(NumberPM(3))))","qid":"4c1b8714-75cf-479f-b4ce-c48563f36cb3.0"}
{"source":"Can you make an appointment today ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( Today ) ) ) ) ) ) )","target":"CreateEvent(starts_at(Today()))","qid":"847547b3-3038-45ec-a8e7-d8d820b49057.3"}
{"source":"no dinner in the fall","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( SeasonFall ) ) :subject ( ?= # ( String \" dinner \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" dinner \"),starts_at(SeasonFall())))","qid":"3c3982c3-710d-4df4-8bf1-42e533f7c8c4.0"}
{"source":"What 's my supervisors name ?","original_target":"( Yield :output ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) )","target":"FindManager(CurrentUser())","qid":"79c06de1-d10a-4b32-ba66-828e0140b770.0"}
{"source":"Hi , can you schedule an appointment for the 25 th ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( nextDayOfMonth ( Today ) # ( Number 25 ) ) ) ) ) ) ) )","target":"CreateEvent(starts_at(nextDayOfMonth(Today(),25)))","qid":"1780409a-5509-4aa2-8275-311d93ace414.0"}
{"source":"I want to add an appointment at 1 pm tomorrow .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 1 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(starts_at(Tomorrow()),starts_at(NumberPM(1))))","qid":"017d5d64-e27c-477b-923f-49aea8ba04bd.3"}
{"source":"meeting next Friday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(starts_at(NextDOW(\" FRIDAY \")))","qid":"48cb6e7a-3342-4518-a304-c92dbfb66494.0"}
{"source":"Can you add a business hike on Tuesday at 8 am","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) :time ( NumberAM :number # ( Number 8 ) ) ) ) :subject ( ?= # ( String \" business hike \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" business hike \"),starts_at(NextDOW(\" TUESDAY \")),starts_at(NumberAM(8))))","qid":"7d07176f-b24b-4bd0-b0f1-7bcd0881a5f4.5"}
{"source":"create work softball game on monday at 6","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :time ( NumberPM :number # ( Number 6 ) ) ) ) :subject ( ?= # ( String \" work softball game \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" work softball game \"),starts_at(NextDOW(\" MONDAY \")),starts_at(NumberPM(6))))","qid":"85ed3393-b530-4c92-b01f-669e54e6a16f.0"}
{"source":"I need you to schedule a winter meeting for the marketing department on December 12 th .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( MD :day # ( Number 12 ) :month # ( Month \" DECEMBER \" ) ) ) ) :subject ( ?= # ( String \" winter meeting for the marketing department \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" winter meeting for the marketing department \"),starts_at(MD(month=\" DECEMBER \",day=12))))","qid":"eebf4369-ced0-4f48-8118-5b7375f57312.0"}
{"source":"I want to go back to see world on Monday from 9 AM til 3 : 35 PM . Will it be raining ?","original_target":"( do ( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :end ( ?= ( TimeAfterDateTime :dateTime ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :time ( NumberAM :number # ( Number 9 ) ) ) :time ( HourMinutePm :hours # ( Number 3 ) :minutes # ( Number 35 ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :time ( NumberAM :number # ( Number 9 ) ) ) ) :subject ( ?= # ( String \" go back to see world \" ) ) ) ) ) ) ( Yield :output ( WillRain :table ( WeatherQueryApi :place ( AtPlace :place ( Here ) ) :time ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :time ( NumberAM :number # ( Number 9 ) ) ) ) ) ) ) )","target":"do(Yield(CreateEvent(AND(ends_at(AND(GE(DateTime?(date=NextDOW(\" MONDAY \"),time=NumberAM(9))),HourMinutePm(hours=3,minutes=35))),has_subject(\" go back to see world \"),starts_at(NextDOW(\" MONDAY \")),starts_at(NumberAM(9))))),WillRain(WeatherQueryApi(place=Here(),time=DateTime?(date=NextDOW(\" MONDAY \"),time=NumberAM(9)))))","qid":"611dc33a-7a71-49ce-ab2c-842fa99e3747.4"}
{"source":"Set up on my calendar a mid month results meeting today at 2 : 00 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( Today ) :time ( NumberPM :number # ( Number 2 ) ) ) ) :subject ( ?= # ( String \" mid month results meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" mid month results meeting \"),starts_at(Today()),starts_at(NumberPM(2))))","qid":"298e8f13-f3d4-4823-bf41-50e3560d0281.0"}
{"source":"Schedule a Meeting with Alex on March 5 th at 3 : 30 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Alex \" ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( MD :day # ( Number 5 ) :month # ( Month \" MARCH \" ) ) :time ( HourMinutePm :hours # ( Number 3 ) :minutes # ( Number 30.0 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Alex \"),starts_at(MD(month=\" MARCH \",day=5)),starts_at(HourMinutePm(hours=3,minutes=30))))","qid":"3dce57b3-10f3-461a-8fcd-84dfbeadbb3c.1"}
{"source":"I have a trip to Disney this Spring","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( SeasonSpring ) ) :subject ( ?= # ( String \" trip to Disney \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" trip to Disney \"),starts_at(SeasonSpring())))","qid":"607b171d-caee-453b-8e69-9698e7a12261.1"}
{"source":"cool . I 'm also going to need to put a dinner on the calendar on Friday at Benny 's Chop House from 7 pm to 9 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :end ( ?= ( TimeAfterDateTime :dateTime ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( NumberPM :number # ( Number 7 ) ) ) :time ( NumberPM :number # ( Number 9 ) ) ) ) :location ( ?= # ( LocationKeyphrase \" Benny's Chop House \" ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( NumberPM :number # ( Number 7 ) ) ) ) :subject ( ?= # ( String \" dinner \" ) ) ) ) ) )","target":"CreateEvent(AND(ends_at(AND(GE(DateTime?(date=NextDOW(\" FRIDAY \"),time=NumberPM(7))),NumberPM(9))),at_location(\" Benny's Chop House \"),has_subject(\" dinner \"),starts_at(NextDOW(\" FRIDAY \")),starts_at(NumberPM(7))))","qid":"bdb1c296-34f0-462d-9105-fee2b1d18faa.2"}
{"source":"Add to the calendar a party planning meeting with Jan tomorrow evening","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jan \" ) ) ) ) ) ) :start ( DateTimeConstraint :constraint ( Evening ) :date ( Tomorrow ) ) :subject ( ?= # ( String \" party planning meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jan \"),has_subject(\" party planning meeting \"),starts_at(Evening()),starts_at(Tomorrow())))","qid":"e5bdf083-0201-498d-b4e4-4844c69c5b50.3"}
{"source":"Schedule a meeting on Saturday at 9 : 00 am to discuss new phone contracts .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" SATURDAY \" ) ) :time ( NumberAM :number # ( Number 9 ) ) ) ) :subject ( ?= # ( String \" discuss new phone contracts \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" discuss new phone contracts \"),starts_at(NextDOW(\" SATURDAY \")),starts_at(NumberAM(9))))","qid":"e9f82dde-b5e1-497c-b0bb-9da39015f34d.0"}
{"source":"make meeting with tim friday morning 9 . 00 am - 9 . 30 am","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" tim \" ) ) ) ) ) ) :end ( ?= ( TimeAfterDateTime :dateTime ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( NumberAM :number # ( Number 9 ) ) ) :time ( HourMinuteAm :hours # ( Number 9 ) :minutes # ( Number 30.0 ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( NumberAM :number # ( Number 9 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(ends_at(AND(GE(DateTime?(date=NextDOW(\" FRIDAY \"),time=NumberAM(9))),HourMinuteAm(hours=9,minutes=30))),with_attendee(\" tim \"),starts_at(NextDOW(\" FRIDAY \")),starts_at(NumberAM(9))))","qid":"0e835b62-6197-4aa1-92fe-3388cadc9b36.5"}
{"source":"can you schedule doctor appointment for me this friday 10 am","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( NumberAM :number # ( Number 10.0 ) ) ) ) :subject ( ?= # ( String \" doctor appointment \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" doctor appointment \"),starts_at(NextDOW(\" FRIDAY \")),starts_at(NumberAM(10))))","qid":"714ac47e-0c20-4321-ab72-d80a82386025.2"}
{"source":"After my meeting with Francis I 'll be meeting with Katherine and Jen in office 303 .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Katherine \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jen \" ) ) ) ) ) ) ) :location ( ?= # ( LocationKeyphrase \" office 303 \" ) ) :start ( ?= ( :end ( singleton ( :results ( FindEventWrapperWithDefaults :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipientConstraint :recipientConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Francis \" ) ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Katherine \"),with_attendee(\" Jen \"),at_location(\" office 303 \"),starts_at(:end(FindEvents(with_attendee(\" Francis \"))))))","qid":"3827f834-07a0-4e71-b267-d0d4e1cf5972.4"}
{"source":"I want to add dinner with Mary at 6 p.m. to my schedule tomorrow .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Mary \" ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 6 ) ) ) ) :subject ( ?= # ( String \" dinner \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Mary \"),has_subject(\" dinner \"),starts_at(Tomorrow()),starts_at(NumberPM(6))))","qid":"e4ec62fa-a003-48c4-8865-6b154fb2dc19.0"}
{"source":"I need to visit my grandparents but it ca nt be this weekend","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( Constraint[Date] :dayOfWeek ( negate ( Weekend ) ) ) ) :subject ( ?= # ( String \" visit my grandparents \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" visit my grandparents \"),avoid_start(Date?(dayOfWeek=Weekend()))))","qid":"78d2cf33-404f-4a10-b026-2b2e9d947c3f.0"}
{"source":"schedule employee reviews Monday between 8 am and 2 pm for 2 hours","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :duration ( ?= ( toHours # ( Number 2 ) ) ) :start ( DateTimeConstraint :constraint ( TimeToTime :time1 ( NumberAM :number # ( Number 8 ) ) :time2 ( NumberPM :number # ( Number 2 ) ) ) :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) ) :subject ( ?= # ( String \" employee reviews \" ) ) ) ) ) )","target":"CreateEvent(AND(has_duration(toHours(2)),has_subject(\" employee reviews \"),starts_at(TimeToTime(time1=NumberAM(8),time2=NumberPM(2))),starts_at(NextDOW(\" MONDAY \"))))","qid":"5b1aa3c1-ad21-43bb-b8ff-1a27834fbab9.0"}
{"source":"Can you make a meeting for tommrow","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) ) ) ) )","target":"CreateEvent(starts_at(Tomorrow()))","qid":"0b3496a7-3b3d-4d3f-8032-6e3a00e2719c.3"}
{"source":"And I have a recital at 6 pm at church","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :location ( ?= # ( LocationKeyphrase \" church \" ) ) :start ( ?= ( NextTime :time ( NumberPM :number # ( Number 6 ) ) ) ) :subject ( ?= # ( String \" recital \" ) ) ) ) ) )","target":"CreateEvent(AND(at_location(\" church \"),has_subject(\" recital \"),starts_at(NextTime(time=NumberPM(6)))))","qid":"5e14d7f9-1453-4f2d-b136-c56a834d9791.2"}
{"source":"next meeting on 7 am","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :time ( ?= ( NumberAM :number # ( Number 7 ) ) ) ) ) ) ) )","target":"CreateEvent(starts_at(NumberAM(7)))","qid":"3ac1c7be-d0d3-4a44-814e-ba90181e2ea1.0"}
{"source":"Can you schedule a new job for this fall ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( SeasonFall ) ) :subject ( ?= # ( String \" new job \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" new job \"),starts_at(SeasonFall())))","qid":"afe6dd43-41d6-4b4c-af54-6e53342b25f8.1"}
{"source":"I need something tomorrow after 3 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( OnDateAfterTime :date ( Tomorrow ) :time ( NumberPM :number # ( Number 3 ) ) ) ) ) ) )","target":"CreateEvent(starts_at(OnDateAfterTime(date=Tomorrow(),time=NumberPM(3))))","qid":"625022e2-b78e-4f5a-87c3-cad3f3e5aa6e.2"}
{"source":"I have a dog owners meeting tomorrow evening","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( DateTimeConstraint :constraint ( Evening ) :date ( Tomorrow ) ) :subject ( ?= # ( String \" dog owners meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" dog owners meeting \"),starts_at(Evening()),starts_at(Tomorrow())))","qid":"52aa437d-a0dc-4b2e-bbfb-7395d08edc6e.4"}
{"source":"Can you set up a meeting with Scot Hanson for Sunday ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Scot Hanson \" ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" SUNDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Scot Hanson \"),starts_at(NextDOW(\" SUNDAY \"))))","qid":"75d238bf-8ca9-45f4-a30b-567d31cccf67.0"}
{"source":"I need to schedule call mom at 2 pm tomorrow .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 2 ) ) ) ) :subject ( ?= # ( String \" call mom \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" call mom \"),starts_at(Tomorrow()),starts_at(NumberPM(2))))","qid":"dae60cc8-e1c7-4608-a3ef-900a21ea26de.3"}
{"source":"I 'd like to visit Yellowstone National Park on the 17 th at 1 .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :location ( ?= # ( LocationKeyphrase \" Yellowstone National Park \" ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( nextDayOfMonth ( Today ) # ( Number 17 ) ) :time ( NumberPM :number # ( Number 1 ) ) ) ) :subject ( ?= # ( String \" visit \" ) ) ) ) ) )","target":"CreateEvent(AND(at_location(\" Yellowstone National Park \"),has_subject(\" visit \"),starts_at(nextDayOfMonth(Today(),17)),starts_at(NumberPM(1))))","qid":"00cf8220-9c34-4c77-9c9f-d61a1a90f7d5.2"}
{"source":"Make a meeting with Sam on Friday from 1 pm to 3 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Sam \" ) ) ) ) ) ) :end ( ?= ( TimeAfterDateTime :dateTime ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( NumberPM :number # ( Number 1 ) ) ) :time ( NumberPM :number # ( Number 3 ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( NumberPM :number # ( Number 1 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(ends_at(AND(GE(DateTime?(date=NextDOW(\" FRIDAY \"),time=NumberPM(1))),NumberPM(3))),with_attendee(\" Sam \"),starts_at(NextDOW(\" FRIDAY \")),starts_at(NumberPM(1))))","qid":"f4cc68c8-2772-43f0-9162-31985cc05364.0"}
{"source":"Yesterday I went to the movies with Abby at 4 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Yesterday ) :time ( NumberPM :number # ( Number 4 ) ) ) ) :subject ( ?= # ( String \" movies \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Abby \"),has_subject(\" movies \"),starts_at(Yesterday()),starts_at(NumberPM(4))))","qid":"c02df769-7b94-4ab8-ad85-c5bce2eb4141.4"}
{"source":"I 'd like to set an appointment for February 31 st","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( MD :day # ( Number 31 ) :month # ( Month \" FEBRUARY \" ) ) ) ) ) ) ) )","target":"CreateEvent(starts_at(MD(month=\" FEBRUARY \",day=31)))","qid":"43b31b28-cf4b-4d80-8ea5-af7adfafd3c4.0"}
{"source":"Create yoga December 29 th 10 am","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( MD :day # ( Number 29 ) :month # ( Month \" DECEMBER \" ) ) :time ( NumberAM :number # ( Number 10.0 ) ) ) ) :subject ( ?= # ( String \" yoga \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" yoga \"),starts_at(MD(month=\" DECEMBER \",day=29)),starts_at(NumberAM(10))))","qid":"bfa3267c-51d7-4fd8-8fe4-30755fd05bae.0"}
{"source":"Set a meeting at brunch time next friday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( Brunch ) ) ) ) ) ) )","target":"CreateEvent(AND(starts_at(NextDOW(\" FRIDAY \")),starts_at(Brunch())))","qid":"f0355674-10a8-423e-836a-d91dee90784b.0"}
{"source":"I 'm going to need to add another one . I need to put down my flight to Mexico on March 6 th from 3 pm to 9 pm at Philadelphia airport .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :end ( ?= ( TimeAfterDateTime :dateTime ( DateAtTimeWithDefaults :date ( MD :day # ( Number 6 ) :month # ( Month \" MARCH \" ) ) :time ( NumberPM :number # ( Number 3 ) ) ) :time ( NumberPM :number # ( Number 9 ) ) ) ) :location ( ?= # ( LocationKeyphrase \" Philadelphia airport \" ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( MD :day # ( Number 6 ) :month # ( Month \" MARCH \" ) ) :time ( NumberPM :number # ( Number 3 ) ) ) ) :subject ( ?= # ( String \" flight to Mexico \" ) ) ) ) ) )","target":"CreateEvent(AND(ends_at(AND(GE(DateTime?(date=MD(month=\" MARCH \",day=6),time=NumberPM(3))),NumberPM(9))),at_location(\" Philadelphia airport \"),has_subject(\" flight to Mexico \"),starts_at(MD(month=\" MARCH \",day=6)),starts_at(NumberPM(3))))","qid":"69ec3684-33a0-4b81-b36c-56cd875f1c83.2"}
{"source":"Add studying and burgers at 5 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( NextTime :time ( NumberPM :number # ( Number 5 ) ) ) ) :subject ( ?= # ( String \" studying and burgers \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" studying and burgers \"),starts_at(NextTime(time=NumberPM(5)))))","qid":"b02ecca6-d722-4b09-8cac-feb3eb281e3b.1"}
{"source":"I need an appointment with Racael for 25 minutes after 2","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Racael \" ) ) ) ) ) ) :duration ( ?= ( toMinutes # ( Number 25 ) ) ) :start ( ?> ( NextTime :time ( NumberPM :number # ( Number 2 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Racael \"),starts_at(GT(NextTime(time=NumberPM(2)))),has_duration(toMinutes(25))))","qid":"588f7362-5276-4cd5-b054-0ff5438a4fea.3"}
{"source":"Ok , add coffee tuesday at 9 for me","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) :time ( NumberAM :number # ( Number 9 ) ) ) ) :subject ( ?= # ( String \" coffee \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" coffee \"),starts_at(NextDOW(\" TUESDAY \")),starts_at(NumberAM(9))))","qid":"62003095-1579-4c60-a1ea-086dc54b39a5.4"}
{"source":"Please schedule a meeting with Jesse from 3 to end of the work day tomorrow .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jesse \" ) ) ) ) ) ) :end ( ?= ( TimeAfterDateTime :dateTime ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 3 ) ) ) :time ( EndOfWorkDay ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 3 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(ends_at(AND(GE(DateTime?(date=Tomorrow(),time=NumberPM(3))),EndOfWorkDay())),with_attendee(\" Jesse \"),starts_at(Tomorrow()),starts_at(NumberPM(3))))","qid":"6e1b2c22-9839-44f8-b63b-b9c4ee846854.0"}
{"source":"Make a appointment for On March 21 st at 1 PM","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( MD :day # ( Number 21 ) :month # ( Month \" MARCH \" ) ) :time ( NumberPM :number # ( Number 1 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(starts_at(MD(month=\" MARCH \",day=21)),starts_at(NumberPM(1))))","qid":"da426c0d-3342-46bb-a37c-d652b3679459.1"}
{"source":"Put me down to meet with Ashley from 3 to end of the day .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Ashley \" ) ) ) ) ) ) :end ( ?= ( TimeAfterDateTime :dateTime ( DateAtTimeWithDefaults :date ( Today ) :time ( NumberPM :number # ( Number 3 ) ) ) :time ( EndOfWorkDay ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Today ) :time ( NumberPM :number # ( Number 3 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(ends_at(AND(GE(DateTime?(date=Today(),time=NumberPM(3))),EndOfWorkDay())),with_attendee(\" Ashley \"),starts_at(Today()),starts_at(NumberPM(3))))","qid":"b9a57755-34f5-406b-b8c3-1461429da969.0"}
{"source":"Also , I 'd like to walk my dog tomorrow afternoon .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( DateTimeConstraint :constraint ( Afternoon ) :date ( Tomorrow ) ) :subject ( ?= # ( String \" walk my dog \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" walk my dog \"),starts_at(Afternoon()),starts_at(Tomorrow())))","qid":"fea8712d-71e0-44e3-9b51-39773b1a1bb7.4"}
{"source":"Schedule band rehearsal on Monday at 3 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :time ( NumberPM :number # ( Number 3 ) ) ) ) :subject ( ?= # ( String \" band rehearsal \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" band rehearsal \"),starts_at(NextDOW(\" MONDAY \")),starts_at(NumberPM(3))))","qid":"29b98ea6-35b3-4831-89db-16889b3da45e.0"}
{"source":"Who is Abby 's manager ?","original_target":"( Yield :output ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) )","target":"FindManager(\" Abby \")","qid":"8f26cdb6-5d5c-4829-bbfd-d8e41bc18e48.3"}
{"source":"I need to catch the train on Monday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) ) ) :subject ( ?= # ( String \" catch the train \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" catch the train \"),starts_at(NextDOW(\" MONDAY \"))))","qid":"e5dbd197-e8d8-4afc-aa7d-8349a9ab686d.0"}
{"source":"Schedule a one hour meeting with Elaine at 4 PM tomorrow .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Elaine \" ) ) ) ) ) ) :duration ( ?= ( toHours # ( Number 1 ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 4 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(has_duration(toHours(1)),with_attendee(\" Elaine \"),starts_at(Tomorrow()),starts_at(NumberPM(4))))","qid":"d5167e6c-1506-4396-bdb0-14be74d6f9e7.2"}
{"source":"I want a meeting with Jolanda on Friday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jolanda \" ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jolanda \"),starts_at(NextDOW(\" FRIDAY \"))))","qid":"68b953f2-4998-49a4-a902-c61ff294133e.3"}
{"source":"Please add a meeting for May 1","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( MD :day # ( Number 1 ) :month # ( Month \" MAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(starts_at(MD(month=\" MAY \",day=1)))","qid":"45ff3d53-8435-4f7c-869f-5ebf24d51720.1"}
{"source":"I need a meeting with Kim for Friday around 6 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim \" ) ) ) ) ) ) :start ( AroundDateTime :dateTime ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( NumberPM :number # ( Number 6 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Kim \"),starts_at(AroundDateTime(dateTime=DateTime?(date=NextDOW(\" FRIDAY \"),time=NumberPM(6))))))","qid":"57029f46-576a-4471-84a5-6767cfd347d1.0"}
{"source":"Put Dr Roberts on the calendar for 3 pm on Tuesday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) :time ( NumberPM :number # ( Number 3 ) ) ) ) :subject ( ?= # ( String \" Dr Roberts \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" Dr Roberts \"),starts_at(NextDOW(\" TUESDAY \")),starts_at(NumberPM(3))))","qid":"5cbf0558-f05f-4954-9017-3b6101fd7170.0"}
{"source":"at 11 am I have a lunch I am going to so put that on the calendar .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( NextTime :time ( NumberAM :number # ( Number 11 ) ) ) ) :subject ( ?= # ( String \" lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" lunch \"),starts_at(NextTime(time=NumberAM(11)))))","qid":"e30e1346-8392-42c6-a7ec-5fae8422da66.1"}
{"source":"Thanks . Put trip to Paris from Jan 1 st to 10 th","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( EventAllDayForDateRange :dateRange ( DateAndConstraint :date1 ( MD :day # ( Number 1 ) :month # ( Month \" JANUARY \" ) ) :date2 ( nextDayOfMonth ( MD :day # ( Number 1 ) :month # ( Month \" JANUARY \" ) ) # ( Number 10.0 ) ) ) :event ( Constraint[Event] :subject ( ?= # ( String \" trip to Paris \" ) ) ) ) ) ) )","target":"CreateEvent(AND(spans_time(DateAndConstraint(date1=MD(month=\" JANUARY \",day=1),date2=nextDayOfMonth(MD(month=\" JANUARY \",day=1),10))),has_subject(\" trip to Paris \")))","qid":"60572611-2b2f-4170-8d38-a720b85ac1f2.4"}
{"source":"I need to schedule a dermatologist appointment with Jerri Skinner","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jerri Skinner \" ) ) ) ) ) ) :subject ( ?= # ( String \" dermatologist appointment \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jerri Skinner \"),has_subject(\" dermatologist appointment \")))","qid":"1990381b-259b-4a3a-a3e4-c84add8e96f9.10"}
{"source":"put dinner with snilaki","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" snilaki \" ) ) ) ) ) ) :subject ( ?= # ( String \" dinner \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" snilaki \"),has_subject(\" dinner \")))","qid":"3b0a0146-a5ef-4280-beb4-1534ef5250f6.4"}
{"source":"Schedule a lunch","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :subject ( ?= # ( String \" lunch \" ) ) ) ) ) )","target":"CreateEvent(has_subject(\" lunch \"))","qid":"170ff5ba-e79f-468c-85b4-7a3c46da5ef1.14"}
{"source":"Also , can you add Pick up Kate from Soccer Practice at 6 : 30 pm ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( NextTime :time ( HourMinutePm :hours # ( Number 6 ) :minutes # ( Number 30.0 ) ) ) ) :subject ( ?= # ( String \" Pick up Kate from Soccer Practice \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" Pick up Kate from Soccer Practice \"),starts_at(NextTime(time=HourMinutePm(hours=6,minutes=30)))))","qid":"75e59644-932d-42a0-ace2-5d51ba2c4304.3"}
{"source":"Set up the team meeting on Friday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) ) ) :subject ( ?= # ( String \" team meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" team meeting \"),starts_at(NextDOW(\" FRIDAY \"))))","qid":"23c93edc-8eaf-491c-8247-1de064aa2a95.4"}
{"source":"Hi there , can you add clothes shopping for my son at the Arden mall for March 23 rd from 3 to 6 pm ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :end ( ?= ( TimeAfterDateTime :dateTime ( DateAtTimeWithDefaults :date ( MD :day # ( Number 23 ) :month # ( Month \" MARCH \" ) ) :time ( NumberPM :number # ( Number 3 ) ) ) :time ( NumberPM :number # ( Number 6 ) ) ) ) :location ( ?= # ( LocationKeyphrase \" the Arden mall \" ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( MD :day # ( Number 23 ) :month # ( Month \" MARCH \" ) ) :time ( NumberPM :number # ( Number 3 ) ) ) ) :subject ( ?= # ( String \" clothes shopping for my son \" ) ) ) ) ) )","target":"CreateEvent(AND(ends_at(AND(GE(DateTime?(date=MD(month=\" MARCH \",day=23),time=NumberPM(3))),NumberPM(6))),at_location(\" the Arden mall \"),has_subject(\" clothes shopping for my son \"),starts_at(MD(month=\" MARCH \",day=23)),starts_at(NumberPM(3))))","qid":"96b98bc0-a53a-44a4-ab0a-38e5ceeed4ed.0"}
{"source":"create diaper change on monday at 8","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :time ( NumberPM :number # ( Number 8 ) ) ) ) :subject ( ?= # ( String \" diaper change \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" diaper change \"),starts_at(NextDOW(\" MONDAY \")),starts_at(NumberPM(8))))","qid":"76ca61d8-441a-4509-9e7c-0ded612be108.0"}
{"source":"I need a. meeting with kim tomorrow from 1 : 30 until the end of work day .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" kim \" ) ) ) ) ) ) :end ( ?= ( TimeAfterDateTime :dateTime ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( HourMinutePm :hours # ( Number 1 ) :minutes # ( Number 30.0 ) ) ) :time ( EndOfWorkDay ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( HourMinutePm :hours # ( Number 1 ) :minutes # ( Number 30.0 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(ends_at(AND(GE(DateTime?(date=Tomorrow(),time=HourMinutePm(hours=1,minutes=30))),EndOfWorkDay())),with_attendee(\" kim \"),starts_at(Tomorrow()),starts_at(HourMinutePm(hours=1,minutes=30))))","qid":"506c382b-7110-40a4-8f23-bf4498cea95b.5"}
{"source":"create a schedule for football practoisde","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :subject ( ?= # ( String \" football practoisde \" ) ) ) ) ) )","target":"CreateEvent(has_subject(\" football practoisde \"))","qid":"0f4cf063-54d0-454d-be52-4eba35d9ce04.0"}
{"source":"I need to do my laundry tomorrow morning at 10 am .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberAM :number # ( Number 10.0 ) ) ) ) :subject ( ?= # ( String \" laundry \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" laundry \"),starts_at(Tomorrow()),starts_at(NumberAM(10))))","qid":"a1cd21df-8c36-4dc4-9876-75f948eabf4e.0"}
{"source":"Add Lunch with Jerry .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jerry \" ) ) ) ) ) ) :subject ( ?= # ( String \" Lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jerry \"),has_subject(\" Lunch \")))","qid":"b578a38d-4be6-4e65-88b8-df7689ba1183.0"}
{"source":"Update the calendar that I had a dentist appointment last week at 3 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( andConstraint ( Constraint[DateTime] :date ( LastWeekNew ) ) ( Constraint[DateTime] :time ( ?= ( NumberPM :number # ( Number 3 ) ) ) ) ) :subject ( ?= # ( String \" dentist appointment \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" dentist appointment \"),starts_at(LastWeekNew()),starts_at(NumberPM(3))))","qid":"49043743-bd64-491e-9f78-9b3d4d5938aa.0"}
{"source":"Okay , add Round 18 of Phone Tag to tomorrow at 16 15","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( HourMinuteMilitary :hours # ( Number 16 ) :minutes # ( Number 15 ) ) ) ) :subject ( ?= # ( String \" Round 18 of Phone Tag \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" Round 18 of Phone Tag \"),starts_at(Tomorrow()),starts_at(HourMinuteMilitary(hours=16,minutes=15))))","qid":"cee9ca4c-2524-4563-891a-1cd245120e83.1"}
{"source":"Also Please create a meeting event with Damon Ellery & Janice Kang on July 18 th from 8 : 30 AM - 10 : 30 AM .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Damon Ellery \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Janice Kang \" ) ) ) ) ) ) ) :end ( ?= ( TimeAfterDateTime :dateTime ( DateAtTimeWithDefaults :date ( MD :day # ( Number 18 ) :month # ( Month \" JULY \" ) ) :time ( HourMinuteAm :hours # ( Number 8 ) :minutes # ( Number 30.0 ) ) ) :time ( HourMinuteAm :hours # ( Number 10.0 ) :minutes # ( Number 30.0 ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( MD :day # ( Number 18 ) :month # ( Month \" JULY \" ) ) :time ( HourMinuteAm :hours # ( Number 8 ) :minutes # ( Number 30.0 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(ends_at(AND(GE(DateTime?(date=MD(month=\" JULY \",day=18),time=HourMinuteAm(hours=8,minutes=30))),HourMinuteAm(hours=10,minutes=30))),with_attendee(\" Damon Ellery \"),with_attendee(\" Janice Kang \"),starts_at(MD(month=\" JULY \",day=18)),starts_at(HourMinuteAm(hours=8,minutes=30))))","qid":"7bdc0ac1-0248-4841-8465-5e1cd44860fc.5"}
{"source":"Put Pre - Meeting Planning for Thursday at 2 PM with Miles on the calendar .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Miles \" ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" THURSDAY \" ) ) :time ( NumberPM :number # ( Number 2 ) ) ) ) :subject ( ?= # ( String \" Pre-Meeting Planning \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Miles \"),has_subject(\" Pre_Meeting Planning \"),starts_at(NextDOW(\" THURSDAY \")),starts_at(NumberPM(2))))","qid":"5828dcef-0e13-4067-bc56-6a5bf5f53ca9.0"}
{"source":"Can you set up a meeting with Katie and Katy on Monday ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Katie \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Katy \" ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Katie \"),with_attendee(\" Katy \"),starts_at(NextDOW(\" MONDAY \"))))","qid":"eb0ab16a-a897-4355-8cbc-12dca881837c.2"}
{"source":"Schedule a 1 - 1 with Rosa next Wednesday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Rosa \" ) ) ) ) ) ) :isOneOnOne ( ?= # ( Boolean true ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" WEDNESDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Rosa \"),starts_at(NextDOW(\" WEDNESDAY \")),is_oneOnOne()))","qid":"aa1ddf29-7d87-4bd7-9839-37f36a62ef9e.4"}
{"source":"Can you find a time for videos games on my calendar tomorrow","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) :subject ( ?= # ( String \" videos games \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" videos games \"),starts_at(Tomorrow())))","qid":"69c0f6ec-51ff-4791-be03-b71b67d29e73.0"}
{"source":"add an Appointment today at 2 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( Today ) :time ( NumberPM :number # ( Number 2 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(starts_at(Today()),starts_at(NumberPM(2))))","qid":"2f36e910-2fb2-449f-8c02-9ae02c95f63b.7"}
{"source":"Schedule movie date with Jessica at the Regal Majestic in Silver Spring , MD .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jessica \" ) ) ) ) ) ) :location ( ?= # ( LocationKeyphrase \" Regal Majestic in Silver Spring \" ) ) :subject ( ?= # ( String \" movie date \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jessica \"),at_location(\" Regal Majestic in Silver Spring \"),has_subject(\" movie date \")))","qid":"82bca7ef-da83-4181-8d55-6d950ca98e89.1"}
{"source":"Create car wash for Timmy , Roger , Wilco , and Charlie this Saturday at 3 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Timmy \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Roger \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Wilco \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Charlie \" ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" SATURDAY \" ) ) :time ( NumberPM :number # ( Number 3 ) ) ) ) :subject ( ?= # ( String \" car wash \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Charlie \"),with_attendee(\" Wilco \"),with_attendee(\" Timmy \"),with_attendee(\" Roger \"),has_subject(\" car wash \"),starts_at(NextDOW(\" SATURDAY \")),starts_at(NumberPM(3))))","qid":"2228ec3e-ad80-4dfc-9de5-c719116f9132.0"}
{"source":"Please add racquetball events for May 2222","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( FullMonthofMonth :month # ( Month \" MAY \" ) :year # ( Number 2222 ) ) ) :subject ( ?= # ( String \" racquetball \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" racquetball \"),starts_at(FullMonthofMonth(year=2222,\" MAY \"))))","qid":"70c6794a-6331-4947-b38e-10f3c41c9327.4"}
{"source":"Create event \" Jessica 's Baby Shower \" at 1 pm on December 21","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( MD :day # ( Number 21 ) :month # ( Month \" DECEMBER \" ) ) :time ( NumberPM :number # ( Number 1 ) ) ) ) :subject ( ?= # ( String \" Jessica's Baby Shower \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" Jessica's Baby Shower \"),starts_at(MD(month=\" DECEMBER \",day=21)),starts_at(NumberPM(1))))","qid":"53b78eb6-099a-4572-86af-f90dbdb1b505.0"}
{"source":"I will be in Seattle for my Proctologist appointment tomorrow","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :location ( ?= # ( LocationKeyphrase \" Seattle \" ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) :subject ( ?= # ( String \" Proctologist appointment \" ) ) ) ) ) )","target":"CreateEvent(AND(at_location(\" Seattle \"),has_subject(\" Proctologist appointment \"),starts_at(Tomorrow())))","qid":"1fdab045-831f-43c0-b648-170b279605ff.0"}
{"source":"What is my bosses email ?","original_target":"( Yield :output ( :emailAddress ( PersonFromRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) ) )","target":":emailAddress(PersonFromRecipient(recipient=FindManager(CurrentUser())))","qid":"c3627ef1-9b58-49dd-8681-77330582cb8d.3"}
{"source":"This summer I want to go play Pokemon Sword and Shield","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( SeasonSummer ) ) :subject ( ?= # ( String \" go play Pokemon Sword and Shield \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" go play Pokemon Sword and Shield \"),starts_at(SeasonSummer())))","qid":"c872dbe7-973c-4cff-b4ee-e9d365e0b789.0"}
{"source":"Who is on Jesse 's team ?","original_target":"( Yield :output ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jesse \" ) ) ) ) ) ) )","target":"FindTeamOf(recipient=with_attendee(\" Jesse \"))","qid":"37969f3a-72b5-45a1-a331-0d2b8a69c30d.3"}
{"source":"Who are the reports of Kim Possible ?","original_target":"( Yield :output ( FindReports :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim Possible \" ) ) ) ) ) ) )","target":"FindReports(recipient=refer(Recipient?(name=LIKE(Kim Possible))))","qid":"c3d42616-837d-41ee-a676-e7e30cc00f44.3"}
{"source":"Please add a meeting with Paul on Monday at 4 : 00 p.m. in my office .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Paul \" ) ) ) ) ) ) :location ( ?= # ( LocationKeyphrase \" my office \" ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :time ( NumberPM :number # ( Number 4 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Paul \"),at_location(\" my office \"),starts_at(NextDOW(\" MONDAY \")),starts_at(NumberPM(4))))","qid":"832de59f-a8c0-45d9-a81a-8157c17c8b16.0"}
{"source":"Add exercise to my calendar tonight","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( DateTimeConstraint :constraint ( Night ) :date ( Today ) ) :subject ( ?= # ( String \" exercise \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" exercise \"),starts_at(Night()),starts_at(Today())))","qid":"e937decf-161c-450d-802c-c12f3d092cc6.1"}
{"source":"Lets create an event called meeting with Sasha .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Sasha \" ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(\" Sasha \"))","qid":"3c77bc5b-e2b6-4b69-a549-d463ee5da4b1.2"}
{"source":"Now please add an event on Saturday from 3 : 00 to 3 : 30 , titled lunch date .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :end ( ?= ( TimeAfterDateTime :dateTime ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" SATURDAY \" ) ) :time ( NumberPM :number # ( Number 3 ) ) ) :time ( HourMinutePm :hours # ( Number 3 ) :minutes # ( Number 30.0 ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" SATURDAY \" ) ) :time ( NumberPM :number # ( Number 3 ) ) ) ) :subject ( ?= # ( String \" lunch date \" ) ) ) ) ) )","target":"CreateEvent(AND(ends_at(AND(GE(DateTime?(date=NextDOW(\" SATURDAY \"),time=NumberPM(3))),HourMinutePm(hours=3,minutes=30))),has_subject(\" lunch date \"),starts_at(NextDOW(\" SATURDAY \")),starts_at(NumberPM(3))))","qid":"4134eb61-7d3e-4e29-9b5d-6f8a8bc71928.4"}
{"source":"Put a note on my calendar to buy socks .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :subject ( ?= # ( String \" buy socks \" ) ) ) ) ) )","target":"CreateEvent(has_subject(\" buy socks \"))","qid":"3f74c2bd-153d-45ff-8418-00dbb02c8177.0"}
{"source":"Can you schedule an all day Gambling in Vegas Trip tomorrow at 2 pm ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( EventAllDayOnDate :date ( Tomorrow ) :event ( Constraint[Event] :subject ( ?= # ( String \" Gambling in Vegas Trip \" ) ) ) ) ) ) )","target":"CreateEvent(AND(spans_time(Tomorrow()),has_subject(\" Gambling in Vegas Trip \")))","qid":"0f1f4ea8-b184-42d0-a586-b01384e82bae.3"}
{"source":"Yeah can you set a meeting for Tuesday with Molly ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Molly \" ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Molly \"),starts_at(NextDOW(\" TUESDAY \"))))","qid":"ee273060-d4bd-434b-9abf-777fa9fce4f7.0"}
{"source":"Put a trip on my calendar for 2 days to alaska starting next monday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :location ( ?= # ( LocationKeyphrase \" alaska \" ) ) :nonEmptyBase ( EventAllDayStartingDateForPeriod :event ( Constraint[Event] :subject ( ?= # ( String \" trip \" ) ) ) :period ( toDays # ( Number 2 ) ) :startDate ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) ) ) ) ) )","target":"CreateEvent(AND(at_location(\" alaska \"),has_subject(\" trip \"),has_duration(toDays(2)),starts_at(NextDOW(\" MONDAY \")),starts_at(Time(hour=0,minute=0))))","qid":"773f76cc-3bf4-48f0-a1af-bbcdf97e4425.0"}
{"source":"Set up breakfast with Norma Wednesday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Norma \" ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" WEDNESDAY \" ) ) ) ) :subject ( ?= # ( String \" breakfast \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Norma \"),has_subject(\" breakfast \"),starts_at(NextDOW(\" WEDNESDAY \"))))","qid":"85602a35-3b32-4fde-b5db-8497d214d92e.0"}
{"source":"Book dinner tomorrow for 1 hour at 5 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :duration ( ?= ( toHours # ( Number 1 ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 5 ) ) ) ) :subject ( ?= # ( String \" dinner \" ) ) ) ) ) )","target":"CreateEvent(AND(has_duration(toHours(1)),has_subject(\" dinner \"),starts_at(Tomorrow()),starts_at(NumberPM(5))))","qid":"b7eb2f74-4048-4902-bd04-96519364c8bb.0"}
{"source":"Make a meeting with Justin at 2 : 25 pm next Wednesday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Justin \" ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" WEDNESDAY \" ) ) :time ( HourMinutePm :hours # ( Number 2 ) :minutes # ( Number 25 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Justin \"),starts_at(NextDOW(\" WEDNESDAY \")),starts_at(HourMinutePm(hours=2,minutes=25))))","qid":"bace7f06-0ecc-4910-8320-8acc7d172f8c.0"}
{"source":"add get nails done tomorrow at 3 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 3 ) ) ) ) :subject ( ?= # ( String \" get nails done \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" get nails done \"),starts_at(Tomorrow()),starts_at(NumberPM(3))))","qid":"93443e56-20fd-46f4-bbc0-300b292c4e60.0"}
{"source":"Schedule appointment at hair salon next Sunday at 2 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :location ( ?= # ( LocationKeyphrase \" hair salon \" ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" SUNDAY \" ) ) :time ( NumberPM :number # ( Number 2 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(at_location(\" hair salon \"),starts_at(NextDOW(\" SUNDAY \")),starts_at(NumberPM(2))))","qid":"9f1faecc-7ee3-43a6-9b22-2d7a7dcbf4c6.1"}
{"source":"Make a meeting tomorrow with Beth at noon","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Beth \" ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( Noon ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Beth \"),starts_at(Tomorrow()),starts_at(Noon())))","qid":"7d764f39-b767-42a3-ad2e-6d1d6fb2168d.0"}
{"source":"We 're going to Red Lion to fix the budget with Ben tonight .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Ben \" ) ) ) ) ) ) :location ( ?= # ( LocationKeyphrase \" Red Lion \" ) ) :start ( DateTimeConstraint :constraint ( Night ) :date ( Today ) ) :subject ( ?= # ( String \" fix the budget \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Ben \"),at_location(\" Red Lion \"),has_subject(\" fix the budget \"),starts_at(Night()),starts_at(Today())))","qid":"d27431eb-8d50-483d-9919-aeab4559277a.5"}
{"source":"Put me down for a doctors appointment on the 28 th of December at 3 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( MD :day # ( Number 28 ) :month # ( Month \" DECEMBER \" ) ) :time ( NumberPM :number # ( Number 3 ) ) ) ) :subject ( ?= # ( String \" doctors appointment \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" doctors appointment \"),starts_at(MD(month=\" DECEMBER \",day=28)),starts_at(NumberPM(3))))","qid":"6fd9093e-6552-4ad9-80a4-27b5d6652f02.3"}
{"source":"Meeting with Jim and his manager Michael on Thursday at noon","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jim \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Michael \" ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" THURSDAY \" ) ) :time ( Noon ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jim \"),with_attendee(\" Michael \"),starts_at(NextDOW(\" THURSDAY \")),starts_at(Noon())))","qid":"3f306e0f-3fd4-4a71-8ce7-0067cfd004e9.0"}
{"source":"Schedule a meeting with Elli for early Thursday afternoon .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Elli \" ) ) ) ) ) ) :start ( DateTimeConstraint :constraint ( EarlyTimeRange :timeRange ( Afternoon ) ) :date ( NextDOW :dow # ( DayOfWeek \" THURSDAY \" ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Elli \"),starts_at(EarlyTimeRange(timeRange=Afternoon())),starts_at(NextDOW(\" THURSDAY \"))))","qid":"292e36ed-a32f-4535-bfda-7f0d826c3713.3"}
{"source":"Yes can you please set an event starting tomorrow at 3 pm for my dentist appointment ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 3 ) ) ) ) :subject ( ?= # ( String \" dentist appointment \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" dentist appointment \"),starts_at(Tomorrow()),starts_at(NumberPM(3))))","qid":"e4e8dfe4-788f-4f06-bd72-fd7a6a2b9708.0"}
{"source":"also add a Charity Event in November 2020","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( FullMonthofMonth :month # ( Month \" NOVEMBER \" ) :year # ( Number 2020.0 ) ) ) :subject ( ?= # ( String \" Charity Event \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" Charity Event \"),starts_at(FullMonthofMonth(year=2020,\" NOVEMBER \"))))","qid":"4b6661cf-86db-4d37-bb04-d2c088cef8c7.3"}
{"source":"schedule a meeting with Rex tomorrow","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Rex \" ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Rex \"),starts_at(Tomorrow())))","qid":"f348d9b2-1350-48db-8fc3-77d6998c2490.5"}
{"source":"Create 1 hour for Deep Breathing on Monday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :duration ( ?= ( toHours # ( Number 1 ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) ) ) :subject ( ?= # ( String \" Deep Breathing \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" Deep Breathing \"),starts_at(NextDOW(\" MONDAY \")),has_duration(toHours(1))))","qid":"7a8cadff-b358-4a03-9e55-3373db39abf8.2"}
{"source":"Thanks now add a flight to new york at 3 pm on the 16 th of june","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( MD :day # ( Number 16 ) :month # ( Month \" JUNE \" ) ) :time ( NumberPM :number # ( Number 3 ) ) ) ) :subject ( ?= # ( String \" flight to new york \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" flight to new york \"),starts_at(MD(month=\" JUNE \",day=16)),starts_at(NumberPM(3))))","qid":"0deca50e-f528-4b9a-acc1-f31d003dbe00.2"}
{"source":"I also need a meeting with Julie and Jody tomorrow afternoon .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Julie \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jody \" ) ) ) ) ) ) ) :start ( DateTimeConstraint :constraint ( Afternoon ) :date ( Tomorrow ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Julie \"),with_attendee(\" Jody \"),starts_at(Afternoon()),starts_at(Tomorrow())))","qid":"e392a97a-bf73-4487-81e7-5747cffdc4d0.3"}
{"source":"now make another event from noon to 2 pm on Thursday , and show me as Out of Office during that time .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :end ( ?= ( TimeAfterDateTime :dateTime ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" THURSDAY \" ) ) :time ( Noon ) ) :time ( NumberPM :number # ( Number 2 ) ) ) ) :showAs ( ?= # ( ShowAsStatus \" OutOfOffice \" ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" THURSDAY \" ) ) :time ( Noon ) ) ) ) ) ) )","target":"CreateEvent(AND(ends_at(AND(GE(DateTime?(date=NextDOW(\" THURSDAY \"),time=Noon())),NumberPM(2))),has_status(ShowAsStatus(\" OutOfOffice \")),starts_at(NextDOW(\" THURSDAY \")),starts_at(Noon())))","qid":"3d9997b1-ef8e-47a0-af3c-c06b7ecfddbe.1"}
{"source":"I have a dr appointment next Thursday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" THURSDAY \" ) ) ) ) :subject ( ?= # ( String \" dr appointment \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" dr appointment \"),starts_at(NextDOW(\" THURSDAY \"))))","qid":"5cc5e85a-5411-4a4b-86e3-09f8b758b5ee.0"}
{"source":"I have a mediation appointment at 11 am Monday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :time ( NumberAM :number # ( Number 11 ) ) ) ) :subject ( ?= # ( String \" mediation appointment \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" mediation appointment \"),starts_at(NextDOW(\" MONDAY \")),starts_at(NumberAM(11))))","qid":"4934bb28-c6f0-48b8-9418-da3d581dc4b4.0"}
{"source":"I need a conference before Tuesday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( DateAndConstraint :date1 ( Today ) :date2 ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) ) ) :subject ( ?= # ( String \" conference \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" conference \"),starts_at(DateAndConstraint(date1=Today(),date2=NextDOW(\" TUESDAY \")))))","qid":"b3089ece-424a-4b8d-8abb-d90b7f40e0e3.1"}
{"source":"Add an appointment Friday pleaae","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(starts_at(NextDOW(\" FRIDAY \")))","qid":"aed920a4-812e-4dd6-a6cb-3767cb80d6ef.2"}
{"source":"Create an event with Abby on December 25 th .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( MD :day # ( Number 25 ) :month # ( Month \" DECEMBER \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Abby \"),starts_at(MD(month=\" DECEMBER \",day=25))))","qid":"f0a6f541-a152-4c6f-9101-bb318280d27f.0"}
{"source":"Can you set up a 1 pm meeting at a city center conference room for Tuesday ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :location ( andConstraint ( ?= # ( LocationKeyphrase \" city center \" ) ) ( roomRequest ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) :time ( NumberPM :number # ( Number 1 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(at_location(\" city center \"),at_location(roomRequest()),starts_at(NextDOW(\" TUESDAY \")),starts_at(NumberPM(1))))","qid":"98f73be8-67f0-4bbb-a25c-7f2afa82f447.0"}
{"source":"Schedule a dentist appointment on Monday at 7 : 30 AM .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :time ( HourMinuteAm :hours # ( Number 7 ) :minutes # ( Number 30.0 ) ) ) ) :subject ( ?= # ( String \" dentist appointment \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" dentist appointment \"),starts_at(NextDOW(\" MONDAY \")),starts_at(HourMinuteAm(hours=7,minutes=30))))","qid":"2f65a38d-53bc-48e1-b0ec-da0af7e6b6ff.0"}
{"source":"Add lunch at Chewy 's with Maria next monday at noon .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Maria \" ) ) ) ) ) ) :location ( ?= # ( LocationKeyphrase \" Chewy's \" ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :time ( Noon ) ) ) :subject ( ?= # ( String \" lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Maria \"),at_location(\" Chewy's \"),has_subject(\" lunch \"),starts_at(NextDOW(\" MONDAY \")),starts_at(Noon())))","qid":"db5e8e3c-603a-4653-b9f5-6cb0ffc6d626.2"}
{"source":"Doctors Appointment 9 am saturday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" SATURDAY \" ) ) :time ( NumberAM :number # ( Number 9 ) ) ) ) :subject ( ?= # ( String \" Doctors Appointment \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" Doctors Appointment \"),starts_at(NextDOW(\" SATURDAY \")),starts_at(NumberAM(9))))","qid":"bbaff790-28e3-4b71-bf80-46162ad1aaea.0"}
{"source":"Set appointment with Mary on Tuesday at 4","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Mary \" ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) :time ( NumberPM :number # ( Number 4 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Mary \"),starts_at(NextDOW(\" TUESDAY \")),starts_at(NumberPM(4))))","qid":"83483139-b349-4499-84f2-1b9236d6704d.4"}
{"source":"I need to pick up dry cleaning at 4 .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( NextTime :time ( NumberPM :number # ( Number 4 ) ) ) ) :subject ( ?= # ( String \" pick up dry cleaning \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" pick up dry cleaning \"),starts_at(NextTime(time=NumberPM(4)))))","qid":"efad10c4-601b-44e2-87af-41e8074e42b1.0"}
{"source":"Add birthday party to June 25 th at 7 PM .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( MD :day # ( Number 25 ) :month # ( Month \" JUNE \" ) ) :time ( NumberPM :number # ( Number 7 ) ) ) ) :subject ( ?= # ( String \" birthday party \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" birthday party \"),starts_at(MD(month=\" JUNE \",day=25)),starts_at(NumberPM(7))))","qid":"ebd4029e-2714-4df9-bd62-fc4aa6b7f333.1"}
{"source":"Boys night out is June 22 nd at 8 : 00 PM . Probably 2 hour duration","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :duration ( ?= ( toHours # ( Number 2 ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( MD :day # ( Number 22 ) :month # ( Month \" JUNE \" ) ) :time ( NumberPM :number # ( Number 8 ) ) ) ) :subject ( ?= # ( String \" Boys night out \" ) ) ) ) ) )","target":"CreateEvent(AND(has_duration(toHours(2)),has_subject(\" Boys night out \"),starts_at(MD(month=\" JUNE \",day=22)),starts_at(NumberPM(8))))","qid":"1750f398-0800-4023-8b92-16eec246afec.2"}
{"source":"can you make a nail appointment but not on the weekend","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( Constraint[Date] :dayOfWeek ( negate ( Weekend ) ) ) ) :subject ( ?= # ( String \" Nail appointment \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" Nail appointment \"),avoid_start(Date?(dayOfWeek=Weekend()))))","qid":"6134e045-0bf7-435d-a2c2-ffcf2d00d5aa.0"}
{"source":"Create a schedule for the booking hotel tomorrow 4 afternoon","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 4 ) ) ) ) :subject ( ?= # ( String \" booking hotel \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" booking hotel \"),starts_at(Tomorrow()),starts_at(NumberPM(4))))","qid":"f2b19364-2421-4d82-ab36-72064666d3bf.3"}
{"source":"create football game on tuesday at 3","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) :time ( NumberPM :number # ( Number 3 ) ) ) ) :subject ( ?= # ( String \" football game \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" football game \"),starts_at(NextDOW(\" TUESDAY \")),starts_at(NumberPM(3))))","qid":"71f35ed4-fce3-43ca-b4db-ce485c4136c2.0"}
{"source":"Create a meeting from 1 PM to 2 PM with Wade","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Wade \" ) ) ) ) ) ) :end ( ?= ( TimeAfterDateTime :dateTime ( NextTime :time ( NumberPM :number # ( Number 1 ) ) ) :time ( NumberPM :number # ( Number 2 ) ) ) ) :start ( ?= ( NextTime :time ( NumberPM :number # ( Number 1 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Wade \"),starts_at(NextTime(time=NumberPM(1))),ends_at(AND(GE(NextTime(time=NumberPM(1))),NumberPM(2)))))","qid":"58a67b43-74be-4e63-bf6e-ccdd716dbfc3.1"}
{"source":"Candace and I are going to Applebee 's for lunch .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Candace \" ) ) ) ) ) ) :location ( ?= # ( LocationKeyphrase \" Applebee's \" ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Today ) :time ( Lunch ) ) ) :subject ( ?= # ( String \" lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Candace \"),at_location(\" Applebee's \"),has_subject(\" lunch \"),starts_at(Today()),starts_at(Lunch())))","qid":"17c7c75d-0f6f-48bb-a9ed-23cbb2b65280.0"}
{"source":"Put in an event on Tuesday at 3 PM for lunch with my coworker Paige Ashworth","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Paige Ashworth \" ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) :time ( NumberPM :number # ( Number 3 ) ) ) ) :subject ( ?= # ( String \" lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Paige Ashworth \"),has_subject(\" lunch \"),starts_at(NextDOW(\" TUESDAY \")),starts_at(NumberPM(3))))","qid":"4c6aa04d-13f8-4405-b0f0-b32f5a279375.1"}
{"source":"I want to have lunch with Victoria , Nick , and Adam tomorrow","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Victoria \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Nick \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Adam \" ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) :subject ( ?= # ( String \" lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Adam \"),with_attendee(\" Victoria \"),with_attendee(\" Nick \"),has_subject(\" lunch \"),starts_at(Tomorrow())))","qid":"f8f47f11-0c06-4aa1-bff6-40c5fe0d122d.0"}
{"source":"Great . Please add coffee with James tomorrow to discuss the party .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" James \" ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) :subject ( ?= # ( String \" coffee \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" James \"),has_subject(\" coffee \"),starts_at(Tomorrow())))","qid":"2cb1792e-4446-407d-a30e-dd49a69ed733.4"}
{"source":"Create event with Francine tomorrow at 2 : 00 am","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Francine \" ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberAM :number # ( Number 2 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Francine \"),starts_at(Tomorrow()),starts_at(NumberAM(2))))","qid":"3775c2e2-a659-4473-af80-a44826cd09f7.0"}
{"source":"Can you put the Fiddler play on for March 15 th at 7 : 30 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( MD :day # ( Number 15 ) :month # ( Month \" MARCH \" ) ) :time ( HourMinutePm :hours # ( Number 7 ) :minutes # ( Number 30.0 ) ) ) ) :subject ( ?= # ( String \" Fiddler play \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" Fiddler play \"),starts_at(MD(month=\" MARCH \",day=15)),starts_at(HourMinutePm(hours=7,minutes=30))))","qid":"72eb3d11-0c00-4938-9803-b7b6c468a1b4.0"}
{"source":"Add a lunch meeting with Nicole for tomorrow","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Nicole \" ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) :subject ( ?= # ( String \" lunch meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Nicole \"),has_subject(\" lunch meeting \"),starts_at(Tomorrow())))","qid":"9f7e33f7-26f5-4913-8a91-9159e3d6598a.0"}
{"source":"Set Saturday as Spa Day","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :nonEmptyBase ( EventAllDayOnDate :date ( NextDOW :dow # ( DayOfWeek \" SATURDAY \" ) ) :event ( Constraint[Event] ) ) :subject ( ?= # ( String \" Spa Day \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" Spa Day \"),spans_time(NextDOW(\" SATURDAY \"))))","qid":"379e6361-26c0-463d-8ed0-7a0952f338a2.0"}
{"source":"Add roller skating practice to my calendar on Tuesday at 7 .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) :time ( NumberPM :number # ( Number 7 ) ) ) ) :subject ( ?= # ( String \" roller skating practice \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" roller skating practice \"),starts_at(NextDOW(\" TUESDAY \")),starts_at(NumberPM(7))))","qid":"807d5a71-6bc2-48f3-8595-862f5666b57e.0"}
{"source":"Well add a meeting with Barack Obama at 1 : 00 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Barack Obama \" ) ) ) ) ) ) :start ( Constraint[DateTime] :time ( ?= ( NumberPM :number # ( Number 1 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Barack Obama \"),starts_at(NumberPM(1))))","qid":"db2297be-1504-4e2d-8531-fcbb96c67b51.6"}
{"source":"Schedule golf with Tony on Sunday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Tony \" ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" SUNDAY \" ) ) ) ) :subject ( ?= # ( String \" golf \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Tony \"),has_subject(\" golf \"),starts_at(NextDOW(\" SUNDAY \"))))","qid":"42e6d718-f935-44c5-9ec9-6ffae0f9a100.0"}
{"source":"Make a dinner date for tomorrow evening .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( DateTimeConstraint :constraint ( Evening ) :date ( Tomorrow ) ) :subject ( ?= # ( String \" dinner date \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" dinner date \"),starts_at(Evening()),starts_at(Tomorrow())))","qid":"95318fdc-83f3-47fd-8a42-2df853937d81.2"}
{"source":"Create a valentine 's party this winter .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( SeasonWinter ) ) :subject ( ?= # ( String \" valentine's party \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" valentine's party \"),starts_at(SeasonWinter())))","qid":"607b171d-caee-453b-8e69-9698e7a12261.4"}
{"source":"schedule a consultation with Max and Ruby next Monday for 1 hour sometime between 8 am and 12 pm to discuss arrangements","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Max \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Ruby \" ) ) ) ) ) ) ) :duration ( ?= ( toHours # ( Number 1 ) ) ) :start ( DateTimeAndConstraint :dateTime1 ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :time ( NumberAM :number # ( Number 8 ) ) ) :dateTime2 ( TimeAfterDateTime :dateTime ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :time ( NumberAM :number # ( Number 8 ) ) ) :time ( NumberPM :number # ( Number 12 ) ) ) ) :subject ( ?= # ( String \" discuss arrangements \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Max \"),with_attendee(\" Ruby \"),has_subject(\" discuss arrangements \"),starts_at(DateTimeRange(start=DateTime?(date=NextDOW(\" MONDAY \"),time=NumberAM(8)),end=AND(GE(DateTime?(date=NextDOW(\" MONDAY \"),time=NumberAM(8))),NumberPM(12)))),has_duration(toHours(1))))","qid":"7c967f71-d9a1-4749-8818-06c69a3c867a.3"}
{"source":"add business meeting","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :subject ( ?= # ( String \" business meeting \" ) ) ) ) ) )","target":"CreateEvent(has_subject(\" business meeting \"))","qid":"f75cabd2-a246-4a60-b019-618bf5a46146.1"}
{"source":"pleas set a dinner date for saturday from 9 pm to 11 : 59 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :end ( ?= ( TimeAfterDateTime :dateTime ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" SATURDAY \" ) ) :time ( NumberPM :number # ( Number 9 ) ) ) :time ( HourMinutePm :hours # ( Number 11 ) :minutes # ( Number 59 ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" SATURDAY \" ) ) :time ( NumberPM :number # ( Number 9 ) ) ) ) :subject ( ?= # ( String \" dinner date \" ) ) ) ) ) )","target":"CreateEvent(AND(ends_at(AND(GE(DateTime?(date=NextDOW(\" SATURDAY \"),time=NumberPM(9))),HourMinutePm(hours=11,minutes=59))),has_subject(\" dinner date \"),starts_at(NextDOW(\" SATURDAY \")),starts_at(NumberPM(9))))","qid":"bdbebdae-c51b-407a-be4d-e1774cc6190b.0"}
{"source":"schedule a review meeting with Jon , Sally , and Curt Monday for 30 minutes at 9 am","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jon \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Sally \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Curt \" ) ) ) ) ) ) ) :duration ( ?= ( toMinutes # ( Number 30.0 ) ) ) :start ( ?= ( NextTime :time ( NumberAM :number # ( Number 9 ) ) ) ) :subject ( ?= # ( String \" review meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Curt \"),with_attendee(\" Jon \"),with_attendee(\" Sally \"),has_subject(\" review meeting \"),starts_at(NextTime(time=NumberAM(9))),has_duration(toMinutes(30))))","qid":"ee4d42d0-d364-4f0f-9973-11f77ec7be39.2"}
{"source":"At snacks for dessert at 9 pm on the 5 th .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( nextDayOfMonth ( Today ) # ( Number 5 ) ) :time ( NumberPM :number # ( Number 9 ) ) ) ) :subject ( ?= # ( String \" snacks for dessert \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" snacks for dessert \"),starts_at(nextDayOfMonth(Today(),5)),starts_at(NumberPM(9))))","qid":"e2b25708-6337-4fb3-ba10-73802ae72ad6.4"}
{"source":"4 PM is my dentist appointment .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( NextTime :time ( NumberPM :number # ( Number 4 ) ) ) ) :subject ( ?= # ( String \" dentist appointment \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" dentist appointment \"),starts_at(NextTime(time=NumberPM(4)))))","qid":"df273314-0a62-4f1d-894e-d5dfe9f175f0.0"}
{"source":"Please schedule a coffee date at the L.A. Starbucks at 4 : 00 PM","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :location ( ?= # ( LocationKeyphrase \" the L.A. Starbucks \" ) ) :start ( ?= ( NextTime :time ( NumberPM :number # ( Number 4 ) ) ) ) :subject ( ?= # ( String \" coffee date \" ) ) ) ) ) )","target":"CreateEvent(AND(at_location(\" the L.A. Starbucks \"),has_subject(\" coffee date \"),starts_at(NextTime(time=NumberPM(4)))))","qid":"1abbf8a2-7ef9-4c80-8292-7f77982de469.0"}
{"source":"Can you put dinner out tonight on my calendar ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( DateTimeConstraint :constraint ( Night ) :date ( Today ) ) :subject ( ?= # ( String \" dinner out \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" dinner out \"),starts_at(Night()),starts_at(Today())))","qid":"3634856a-42f5-4993-9084-0eabf8a097ca.0"}
{"source":"Make a hair appointment for Friday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) ) ) :subject ( ?= # ( String \" hair appointment \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" hair appointment \"),starts_at(NextDOW(\" FRIDAY \"))))","qid":"a22eee91-ad46-4abb-8032-97828dca4ec4.0"}
{"source":"I need to block off 3 hours today to write drafts .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :duration ( ?= ( toHours # ( Number 3 ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Today ) ) ) :subject ( ?= # ( String \" write drafts \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" write drafts \"),starts_at(Today()),has_duration(toHours(3))))","qid":"25a3d897-bd08-429a-a002-d7805ac0a2d3.0"}
{"source":"set me a staff meeting for Monday 8 Am","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :time ( NumberAM :number # ( Number 8 ) ) ) ) :subject ( ?= # ( String \" staff meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" staff meeting \"),starts_at(NextDOW(\" MONDAY \")),starts_at(NumberAM(8))))","qid":"ad92c868-395b-4d1a-ad2d-1b774e4527ff.0"}
{"source":"Put a meeting with Ben , Jill , and Parker in room 403 for 4 PM .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Ben \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jill \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Parker \" ) ) ) ) ) ) ) :location ( ?= # ( LocationKeyphrase \" room 403 \" ) ) :start ( ?= ( NextTime :time ( NumberPM :number # ( Number 4 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Parker \"),with_attendee(\" Ben \"),with_attendee(\" Jill \"),at_location(\" room 403 \"),starts_at(NextTime(time=NumberPM(4)))))","qid":"5ab4e0d5-8884-40f9-9bbf-dcdb24a917b8.2"}
{"source":"i need a 1 hour long with Dan Schoffel","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Dan Schoffel \" ) ) ) ) ) ) :duration ( ?= ( toHours # ( Number 1 ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Dan Schoffel \"),has_duration(toHours(1))))","qid":"ce106bb8-8720-4fc8-b8ee-de60655bf8ba.3"}
{"source":"I have a meeting tomorrow morning at 10 am , it will last an hour","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :duration ( ?= ( toHours # ( Number 1 ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberAM :number # ( Number 10.0 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(has_duration(toHours(1)),starts_at(Tomorrow()),starts_at(NumberAM(10))))","qid":"66ae3dca-1e46-4c0b-80f9-3e2f3ee35195.0"}
{"source":"Kaylie , Josh , Brandon , Hunter , and I will be going to the Water Park on the 24 th at 11 am .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kaylie \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Josh \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Brandon \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Hunter \" ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( nextDayOfMonth ( Today ) # ( Number 24 ) ) :time ( NumberAM :number # ( Number 11 ) ) ) ) :subject ( ?= # ( String \" going to the Water Park \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Hunter \"),with_attendee(\" Brandon \"),with_attendee(\" Kaylie \"),with_attendee(\" Josh \"),has_subject(\" going to the Water Park \"),starts_at(nextDayOfMonth(Today(),24)),starts_at(NumberAM(11))))","qid":"6b8df31a-cfdf-4e3f-8a91-5775b80def32.1"}
{"source":"Schedule Slipknot concert for January 3 at 8 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( MD :day # ( Number 3 ) :month # ( Month \" JANUARY \" ) ) :time ( NumberPM :number # ( Number 8 ) ) ) ) :subject ( ?= # ( String \" Slipknot concert \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" Slipknot concert \"),starts_at(MD(month=\" JANUARY \",day=3)),starts_at(NumberPM(8))))","qid":"a794364a-6b55-4c1d-b28f-709c15c2c340.1"}
{"source":"Can you make an all day event for April first ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( EventAllDayOnDate :date ( MD :day # ( Number 1 ) :month # ( Month \" APRIL \" ) ) :event ( Constraint[Event] ) ) ) ) )","target":"CreateEvent(spans_time(MD(month=\" APRIL \",day=1)))","qid":"cd9b2510-aac4-4a8d-944d-20f12c38c3a2.2"}
{"source":"I should put in a call to Jill around 12 tomorrow .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( DateTimeConstraint :constraint ( TimeAround :time ( NumberPM :number # ( Number 12 ) ) ) :date ( Today ) ) :subject ( ?= # ( String \" call to Jill \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" call to Jill \"),starts_at(TimeAround(NumberPM(12))),starts_at(Today())))","qid":"0537e3ce-d4de-4472-a537-741d2b0a9e25.0"}
{"source":"I want to set up a meeting with Barack Obama and Fiona Mason","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Barack Obama \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Fiona Mason \" ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Barack Obama \"),with_attendee(\" Fiona Mason \")))","qid":"235b9c4b-6c7f-4f10-a38e-7ac33a61c989.2"}
{"source":"Add the Aerosmith concert on Wednesday January 31 st to my calendar with the location .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( MD :day # ( Number 31 ) :month # ( Month \" JANUARY \" ) ) ) ) :subject ( ?= # ( String \" Aerosmith concert \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" Aerosmith concert \"),starts_at(MD(month=\" JANUARY \",day=31))))","qid":"be9000e2-6534-4b79-baa7-b22261a31767.0"}
{"source":"put meeting with pund and dev","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" pund \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" dev \" ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" pund \"),with_attendee(\" dev \")))","qid":"a77a63b9-ddb5-4f46-808f-5852be5cb406.2"}
{"source":"Schedule a meeting with Eric on Monday Morning at 9 am .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Eric \" ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :time ( NumberAM :number # ( Number 9 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Eric \"),starts_at(NextDOW(\" MONDAY \")),starts_at(NumberAM(9))))","qid":"9a801ee1-8f0f-4ed8-8367-d38afceefd7a.1"}
{"source":"Can you please create a meeting for Wednesday , December 11 at 2 : 00 p.m. for Kimberly Scharf , Michael Scharf , Jason Scharf , Sara Scharf , and me Damon Straeter .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kimberly Scharf \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Michael Scharf \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jason Scharf \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Sara Scharf \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Damon Straeter \" ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( MD :day # ( Number 11 ) :month # ( Month \" DECEMBER \" ) ) :time ( NumberPM :number # ( Number 2 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Damon Straeter \"),with_attendee(\" Sara Scharf \"),with_attendee(\" Jason Scharf \"),with_attendee(\" Kimberly Scharf \"),with_attendee(\" Michael Scharf \"),starts_at(MD(month=\" DECEMBER \",day=11)),starts_at(NumberPM(2))))","qid":"8128e636-a72d-411e-9627-5275e48f0978.0"}
{"source":"Make appointment to today","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( Today ) ) ) ) ) ) )","target":"CreateEvent(starts_at(Today()))","qid":"1cb68cc2-2d70-4881-80ca-3c66f56d3c0a.2"}
{"source":"Set up breakfast for the 4 th at 8 am at Stacy 's Diner","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :location ( ?= # ( LocationKeyphrase \" Stacy's Diner \" ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( nextDayOfMonth ( Today ) # ( Number 4 ) ) :time ( NumberAM :number # ( Number 8 ) ) ) ) :subject ( ?= # ( String \" breakfast \" ) ) ) ) ) )","target":"CreateEvent(AND(at_location(\" Stacy's Diner \"),has_subject(\" breakfast \"),starts_at(nextDayOfMonth(Today(),4)),starts_at(NumberAM(8))))","qid":"d7a457f7-2800-4472-ab95-7a0509230e5a.3"}
{"source":"I 've got an event for March 1 at 5 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( MD :day # ( Number 1 ) :month # ( Month \" MARCH \" ) ) :time ( NumberPM :number # ( Number 5 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(starts_at(MD(month=\" MARCH \",day=1)),starts_at(NumberPM(5))))","qid":"8e16bcb7-da5e-42f7-aae5-decaf47a44d6.0"}
{"source":"Brandon is coming in to check on his Taxes on Friday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Brandon \" ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) ) ) :subject ( ?= # ( String \" check on his Taxes \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Brandon \"),has_subject(\" check on his Taxes \"),starts_at(NextDOW(\" FRIDAY \"))))","qid":"7535ae87-d5de-42ee-be45-752c21641765.3"}
{"source":"put meet my girl friend tomorrow 8 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 8 ) ) ) ) :subject ( ?= # ( String \" meet my girl friend \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" meet my girl friend \"),starts_at(Tomorrow()),starts_at(NumberPM(8))))","qid":"fd77d0c4-4257-467a-8031-4c8dc7c74d66.4"}
{"source":"Make an event called Breakfast with Jim .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jim \" ) ) ) ) ) ) :subject ( ?= # ( String \" Breakfast \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jim \"),has_subject(\" Breakfast \")))","qid":"a24d3385-af4a-4496-acbd-c77295cbe7a3.1"}
{"source":"Schedule a meeting with my boss Greg at 5 : 30 pm on Monday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Greg \" ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :time ( HourMinutePm :hours # ( Number 5 ) :minutes # ( Number 30.0 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Greg \"),starts_at(NextDOW(\" MONDAY \")),starts_at(HourMinutePm(hours=5,minutes=30))))","qid":"29530326-7aa8-40e3-a029-c1a468681e93.0"}
{"source":"create an event for sunday afternoon and name it going out with the girls","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( DateTimeConstraint :constraint ( Afternoon ) :date ( NextDOW :dow # ( DayOfWeek \" SUNDAY \" ) ) ) :subject ( ?= # ( String \" going out with the girls \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" going out with the girls \"),starts_at(Afternoon()),starts_at(NextDOW(\" SUNDAY \"))))","qid":"ae072c46-0e51-426b-8e25-26e6cea2ce02.0"}
{"source":"Create an event for 6 AM tomorrow : \" Print flight tickets \"","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberAM :number # ( Number 6 ) ) ) ) :subject ( ?= # ( String \" Print flight tickets \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" Print flight tickets \"),starts_at(Tomorrow()),starts_at(NumberAM(6))))","qid":"90482129-3c4f-4f21-a2c5-98aea3f18797.0"}
{"source":"Set an event for 10 am tomorrow , \" Meet with tax guy \"","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberAM :number # ( Number 10.0 ) ) ) ) :subject ( ?= # ( String \" Meet with tax guy \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" Meet with tax guy \"),starts_at(Tomorrow()),starts_at(NumberAM(10))))","qid":"00b4deb2-bc5c-4760-87a7-ff7016290ea2.0"}
{"source":"Schedule Car Shop with Tammi , Tony , Tommy , and Tim on Thursday afternoon .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Tammi \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Tony \" ) ) ) ) ) ) ) ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Tommy \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Tim \" ) ) ) ) ) ) ) ) :start ( DateTimeConstraint :constraint ( Afternoon ) :date ( NextDOW :dow # ( DayOfWeek \" THURSDAY \" ) ) ) :subject ( ?= # ( String \" Car Shop \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Tammi \"),with_attendee(\" Tony \"),with_attendee(\" Tommy \"),with_attendee(\" Tim \"),has_subject(\" Car Shop \"),starts_at(Afternoon()),starts_at(NextDOW(\" THURSDAY \"))))","qid":"7a8c9b72-b5f1-4033-ac16-c0705e25f98d.0"}
{"source":"Jane 's coming to visit next week on Saturday and Sunday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jane \" ) ) ) ) ) ) :nonEmptyBase ( EventAllDayForDateRange :dateRange ( DateAndConstraint :date1 ( DowOfWeekNew :dow # ( DayOfWeek \" SATURDAY \" ) :week ( NextWeekList ) ) :date2 ( nextDayOfWeek ( DowOfWeekNew :dow # ( DayOfWeek \" SATURDAY \" ) :week ( NextWeekList ) ) # ( DayOfWeek \" SUNDAY \" ) ) ) :event ( Constraint[Event] :subject ( ?= # ( String \" visit \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jane \"),has_subject(\" visit \"),spans_time(DateAndConstraint(date1=DowOfWeekNew(dow=DayOfWeek(\" SATURDAY \"),week=NextWeekList()),date2=nextDayOfWeek(DowOfWeekNew(dow=DayOfWeek(\" SATURDAY \"),week=NextWeekList()),DayOfWeek(\" SUNDAY \"))))))","qid":"8ef5e4d7-4f6b-4577-b2d5-df0f6ccc35b9.0"}
{"source":"Schedule gym time with Mary tomorrow at noon .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Mary \" ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( Noon ) ) ) :subject ( ?= # ( String \" gym time \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Mary \"),has_subject(\" gym time \"),starts_at(Tomorrow()),starts_at(Noon())))","qid":"6a3a6823-d911-4a83-a1e0-7caa8617e5a6.0"}
{"source":"Ok . Set a lunch meeting on Wednesday at noon .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" WEDNESDAY \" ) ) :time ( Noon ) ) ) :subject ( ?= # ( String \" lunch meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" lunch meeting \"),starts_at(NextDOW(\" WEDNESDAY \")),starts_at(Noon())))","qid":"68c3ba92-4cb9-416c-97b1-271b169a2cfe.2"}
{"source":"Put that I had a workout session last week .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( LastWeekNew ) ) :subject ( ?= # ( String \" workout session \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" workout session \"),starts_at(LastWeekNew())))","qid":"fe6fa7f3-ac14-4a7c-af7e-182f75bb9437.4"}
{"source":"please make a meeting with Francis next Tuesday at 10 am .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Francis \" ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) :time ( NumberAM :number # ( Number 10.0 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Francis \"),starts_at(NextDOW(\" TUESDAY \")),starts_at(NumberAM(10))))","qid":"018e11bf-33c0-4050-8c9c-9fb2c91407b5.0"}
{"source":"Hi can you add golfing on Thursday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" THURSDAY \" ) ) ) ) :subject ( ?= # ( String \" golfing \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" golfing \"),starts_at(NextDOW(\" THURSDAY \"))))","qid":"7d05b7a7-d5cd-4380-bb8f-bac4219eb21a.0"}
{"source":"Can you schedule me an event at 10 am tomororw","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberAM :number # ( Number 10.0 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(starts_at(Tomorrow()),starts_at(NumberAM(10))))","qid":"d06e4b6c-3bb4-4025-bb0b-6e06ab049509.0"}
{"source":"Add breakfast before 9 tomorrow morning","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( OnDateBeforeTime :date ( Tomorrow ) :time ( NumberAM :number # ( Number 9 ) ) ) :subject ( ?= # ( String \" breakfast \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" breakfast \"),starts_at(OnDateBeforeTime(date=Tomorrow(),time=NumberAM(9)))))","qid":"0e7cdc4e-4444-4a49-9472-a2262c75f7ca.0"}
{"source":"set the meeting for 5 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( NextTime :time ( NumberPM :number # ( Number 5 ) ) ) ) ) ) ) )","target":"CreateEvent(starts_at(NextTime(time=NumberPM(5))))","qid":"d8717e2e-2a58-42a5-a10d-1a971cc78776.2"}
{"source":"Can you add a meeting at Ronald 's at 5 pm today ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :location ( ?= # ( LocationKeyphrase \" Ronald's \" ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Today ) :time ( NumberPM :number # ( Number 5 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(at_location(\" Ronald's \"),starts_at(Today()),starts_at(NumberPM(5))))","qid":"5afba09e-e497-4ddb-b3ce-0b389d21f8dd.2"}
{"source":"Schedule a work lunch with David Lax tomorrow at noon .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" David Lax \" ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( Noon ) ) ) :subject ( ?= # ( String \" work lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" David Lax \"),has_subject(\" work lunch \"),starts_at(Tomorrow()),starts_at(Noon())))","qid":"738274cb-7714-40a2-b1ab-5fb0c4afd87c.3"}
{"source":"Find 15 minutes tomorrow for Straightening Up Bedroom .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :duration ( ?= ( toMinutes # ( Number 15 ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) :subject ( ?= # ( String \" Straightening Up Bedroom \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" Straightening Up Bedroom \"),starts_at(Tomorrow()),has_duration(toMinutes(15))))","qid":"e350a65b-29a7-47b4-9c79-7adb6390a180.4"}
{"source":"Can you book my spa appointment after my dentist appointment ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( :end ( singleton ( :results ( FindEventWrapperWithDefaults :constraint ( Constraint[Event] :subject ( ?~= # ( String \" dentist appointment \" ) ) ) ) ) ) ) ) :subject ( ?= # ( String \" spa appointment \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" spa appointment \"),starts_at(:end(FindEvents(has_subject(\" dentist appointment \"))))))","qid":"87c03129-7a43-4f48-a3d7-57e68f181944.2"}
{"source":"I 'll be calling Ron on Monday at 7 : 30 am .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Ron \" ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :time ( HourMinuteAm :hours # ( Number 7 ) :minutes # ( Number 30.0 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Ron \"),starts_at(NextDOW(\" MONDAY \")),starts_at(HourMinuteAm(hours=7,minutes=30))))","qid":"a6524cbf-89dc-4c1a-8419-42744714973e.0"}
{"source":"Make an all day event for tomorrow for 19 days","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( EventAllDayStartingDateForPeriod :event ( Constraint[Event] ) :period ( toDays # ( Number 19 ) ) :startDate ( Tomorrow ) ) ) ) )","target":"CreateEvent(AND(has_duration(toDays(19)),starts_at(Tomorrow()),starts_at(Time(hour=0,minute=0))))","qid":"60002718-fdff-4903-9a42-af8a55cdf517.0"}
{"source":"ok can you create a walking event at 4 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( NextTime :time ( NumberPM :number # ( Number 4 ) ) ) ) :subject ( ?= # ( String \" walking \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" walking \"),starts_at(NextTime(time=NumberPM(4)))))","qid":"6ca1616f-f3ee-4c05-97a3-f1aef8131b45.3"}
{"source":"make a appointment for tomorrow","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) ) ) ) )","target":"CreateEvent(starts_at(Tomorrow()))","qid":"b97d6dea-475b-4e0b-9bb6-a9d84bb00257.3"}
{"source":"The tournament will be held all day on the 3 rd .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( EventAllDayOnDate :date ( nextDayOfMonth ( Today ) # ( Number 3 ) ) :event ( Constraint[Event] :subject ( ?= # ( String \" tournament \" ) ) ) ) ) ) )","target":"CreateEvent(AND(spans_time(nextDayOfMonth(Today(),3)),has_subject(\" tournament \")))","qid":"eaef74d5-24a0-4b22-8868-12ad1e0eda4c.4"}
{"source":"create baseball game on monday at 8","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :time ( NumberPM :number # ( Number 8 ) ) ) ) :subject ( ?= # ( String \" baseball game \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" baseball game \"),starts_at(NextDOW(\" MONDAY \")),starts_at(NumberPM(8))))","qid":"312f4e91-338d-4f26-9025-282e74db21c3.0"}
{"source":"Add trekking to my calendar on upcoming friday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) ) ) :subject ( ?= # ( String \" trekking \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" trekking \"),starts_at(NextDOW(\" FRIDAY \"))))","qid":"259a816a-02c2-4644-a460-aae61f7d8910.3"}
{"source":"I was hoping to add a meeting called Brunch on Saturday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" SATURDAY \" ) ) ) ) :subject ( ?= # ( String \" Brunch \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" Brunch \"),starts_at(NextDOW(\" SATURDAY \"))))","qid":"0248bd01-13a5-489a-a206-85c4058aecc7.0"}
{"source":"James , Aaron 's supervisor will meet with me since Aaron will not longer attend the meeting .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" James \" ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(\" James \"))","qid":"5b5b83c6-3fe7-4028-8b7d-a604a53ec7d6.3"}
{"source":"Add birthday party for Saturday at 1 pm . Please invite Rocky , Lola , and Rosco .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Rocky \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Lola \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Rosco \" ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" SATURDAY \" ) ) :time ( NumberPM :number # ( Number 1 ) ) ) ) :subject ( ?= # ( String \" birthday party \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Rosco \"),with_attendee(\" Rocky \"),with_attendee(\" Lola \"),has_subject(\" birthday party \"),starts_at(NextDOW(\" SATURDAY \")),starts_at(NumberPM(1))))","qid":"b5351765-354c-4506-b0b3-87d4c3ee5bc0.4"}
{"source":"create meeting on tuesday at 5","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) :time ( NumberPM :number # ( Number 5 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(starts_at(NextDOW(\" TUESDAY \")),starts_at(NumberPM(5))))","qid":"cb8e6c0a-8e59-4e95-ae30-8eb8bb950327.0"}
{"source":"Ok , let 's see what 's coming up . Block out Feb 1 from 2 pm to 3 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :end ( ?= ( TimeAfterDateTime :dateTime ( DateAtTimeWithDefaults :date ( MD :day # ( Number 1 ) :month # ( Month \" FEBRUARY \" ) ) :time ( NumberPM :number # ( Number 2 ) ) ) :time ( NumberPM :number # ( Number 3 ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( MD :day # ( Number 1 ) :month # ( Month \" FEBRUARY \" ) ) :time ( NumberPM :number # ( Number 2 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(ends_at(AND(GE(DateTime?(date=MD(month=\" FEBRUARY \",day=1),time=NumberPM(2))),NumberPM(3))),starts_at(MD(month=\" FEBRUARY \",day=1)),starts_at(NumberPM(2))))","qid":"2a16394e-32f1-4791-8c1e-1150616dd0b8.0"}
{"source":"Mark my calendar as \" Out of Town \" during march .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( FullMonthofMonth :month # ( Month \" MARCH \" ) ) ) :subject ( ?= # ( String \" Out of Town \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" Out of Town \"),starts_at(FullMonthofMonth(\" MARCH \"))))","qid":"5ab8d44f-b7ad-4fad-a40c-658d1cad75a5.0"}
{"source":"I will be in Seattle with Jake tomorrow","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) :location ( ?= # ( LocationKeyphrase \" Seattle \" ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jake \"),at_location(\" Seattle \"),starts_at(Tomorrow())))","qid":"1932b26b-5502-4be1-9b06-bdb105342566.4"}
{"source":"I need a workout added to my calendar tomorrow around noon .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( DateTimeConstraint :constraint ( TimeAround :time ( Noon ) ) :date ( Tomorrow ) ) :subject ( ?= # ( String \" workout \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" workout \"),starts_at(TimeAround(Noon())),starts_at(Tomorrow())))","qid":"295c930c-3329-413a-810d-9fc361b4ee30.0"}
{"source":"create ball game on tuesday at 2","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) :time ( NumberPM :number # ( Number 2 ) ) ) ) :subject ( ?= # ( String \" ball game \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" ball game \"),starts_at(NextDOW(\" TUESDAY \")),starts_at(NumberPM(2))))","qid":"e3b17d3b-cf59-4448-a8f1-0f526e33d5b8.0"}
{"source":"Book an appointment with the doctor at parkview medical for next week around 3 pm on Wednesday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :location ( ?= # ( LocationKeyphrase \" parkview medical \" ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( DowOfWeekNew :dow # ( DayOfWeek \" WEDNESDAY \" ) :week ( NextWeekList ) ) :time ( NumberPM :number # ( Number 3 ) ) ) ) :subject ( ?= # ( String \" appointment with the doctor \" ) ) ) ) ) )","target":"CreateEvent(AND(at_location(\" parkview medical \"),has_subject(\" appointment with the doctor \"),starts_at(DowOfWeekNew(dow=DayOfWeek(\" WEDNESDAY \"),week=NextWeekList())),starts_at(NumberPM(3))))","qid":"fbd3f286-4c3e-4440-88c7-528d5580af08.1"}
{"source":"Make the lunch date with Jay on Saturday noon","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jay \" ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" SATURDAY \" ) ) :time ( Noon ) ) ) :subject ( ?= # ( String \" lunch date \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jay \"),has_subject(\" lunch date \"),starts_at(NextDOW(\" SATURDAY \")),starts_at(Noon())))","qid":"44bcf494-4252-465e-8182-ed2a64d2301b.0"}
{"source":"Add bowling tournament on the 22 nd through the 25 th","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( EventAllDayForDateRange :dateRange ( DateAndConstraint :date1 ( nextDayOfMonth ( Today ) # ( Number 22 ) ) :date2 ( nextDayOfMonth ( nextDayOfMonth ( Today ) # ( Number 22 ) ) # ( Number 25 ) ) ) :event ( Constraint[Event] :subject ( ?= # ( String \" bowling tournament \" ) ) ) ) ) ) )","target":"CreateEvent(AND(spans_time(DateAndConstraint(date1=nextDayOfMonth(Today(),22),date2=nextDayOfMonth(nextDayOfMonth(Today(),22),25))),has_subject(\" bowling tournament \")))","qid":"0e7032e9-ccfd-4f05-baa1-197f272d51c7.0"}
{"source":"Schedule a team meeting on Tuesday at 8 : 30 AM .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) :time ( HourMinuteAm :hours # ( Number 8 ) :minutes # ( Number 30.0 ) ) ) ) :subject ( ?= # ( String \" team meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" team meeting \"),starts_at(NextDOW(\" TUESDAY \")),starts_at(HourMinuteAm(hours=8,minutes=30))))","qid":"9f724e84-18d3-4466-b280-38ade91626a7.0"}
{"source":"Put on the schedule accounting meeting with Karen and Dan Schoffel for Monday at 1 : 00 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Karen \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Dan Schoffel \" ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :time ( NumberPM :number # ( Number 1 ) ) ) ) :subject ( ?= # ( String \" accounting meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Karen \"),with_attendee(\" Dan Schoffel \"),has_subject(\" accounting meeting \"),starts_at(NextDOW(\" MONDAY \")),starts_at(NumberPM(1))))","qid":"c68d7860-542e-474d-a184-98337b6dbda2.3"}
{"source":"Who 's on Rosenfelds team","original_target":"( Yield :output ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Rosenfeld \" ) ) ) ) ) ) )","target":"FindTeamOf(recipient=with_attendee(\" Rosenfeld \"))","qid":"2cc71580-b634-434e-9865-74dcdea97343.0"}
{"source":"Create schedule for dinner plan at 4 pm tomorrow","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 4 ) ) ) ) :subject ( ?= # ( String \" dinner plan \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" dinner plan \"),starts_at(Tomorrow()),starts_at(NumberPM(4))))","qid":"47d9a71b-b49a-4c6a-887d-d5dbf8981c3a.1"}
{"source":"Who is elli 's boss 's boss ?","original_target":"( Yield :output ( FindManager :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" elli \" ) ) ) ) ) ) ) )","target":"FindManager(FindManager(\" elli \"))","qid":"7f6bbe11-b63a-4349-b876-b299e3c891bf.0"}
{"source":"ok and then schedule a meeting to discuss the RBA decision on wednesday at 2 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" WEDNESDAY \" ) ) :time ( NumberPM :number # ( Number 2 ) ) ) ) :subject ( ?= # ( String \" discuss the RBA decision \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" discuss the RBA decision \"),starts_at(NextDOW(\" WEDNESDAY \")),starts_at(NumberPM(2))))","qid":"e5527716-76e5-404e-93b1-f06b00aaee87.5"}
{"source":"I need to schedule a brunch meeting with Jen on Wednesday at 11 : 00 am for 1 hour .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jen \" ) ) ) ) ) ) :duration ( ?= ( toHours # ( Number 1 ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" WEDNESDAY \" ) ) :time ( NumberAM :number # ( Number 11 ) ) ) ) :subject ( ?= # ( String \" brunch meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(has_duration(toHours(1)),with_attendee(\" Jen \"),has_subject(\" brunch meeting \"),starts_at(NextDOW(\" WEDNESDAY \")),starts_at(NumberAM(11))))","qid":"260639cf-dea9-4a3c-9510-0b43a6f4d05c.5"}
{"source":"Add met workout goal to the current day .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( Today ) ) ) :subject ( ?= # ( String \" met workout goal \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" met workout goal \"),starts_at(Today())))","qid":"6c85a468-ee8a-4d42-93af-f6eec5d26d0c.3"}
{"source":"Colonic Monday April 8","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( MD :day # ( Number 8 ) :month # ( Month \" APRIL \" ) ) ) ) :subject ( ?= # ( String \" Colonic \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" Colonic \"),starts_at(MD(month=\" APRIL \",day=8))))","qid":"76a4a5ef-1be4-4b26-b670-01bfec8740a3.5"}
{"source":"Can you fire side sing along Saturday at 6 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" SATURDAY \" ) ) :time ( NumberPM :number # ( Number 6 ) ) ) ) :subject ( ?= # ( String \" fire side sing along \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" fire side sing along \"),starts_at(NextDOW(\" SATURDAY \")),starts_at(NumberPM(6))))","qid":"8006582c-f887-4687-a0a3-5d3056334cf6.2"}
{"source":"I need to schedule a meeting with Abby and Jesse on Tuesday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jesse \" ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Abby \"),with_attendee(\" Jesse \"),starts_at(NextDOW(\" TUESDAY \"))))","qid":"f7b5e46b-fafb-43fc-bea4-8e3afb59a269.1"}
{"source":"I want to make a meeting called Update with Jim at noon on Friday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jim \" ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( Noon ) ) ) :subject ( ?= # ( String \" Update \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jim \"),has_subject(\" Update \"),starts_at(NextDOW(\" FRIDAY \")),starts_at(Noon())))","qid":"04cb908c-a280-4a8c-9d23-6f1f899aaba4.1"}
{"source":"Create a Sales Team Meeting tomorrow at 10 : 45 am .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( HourMinuteAm :hours # ( Number 10.0 ) :minutes # ( Number 45 ) ) ) ) :subject ( ?= # ( String \" Sales Team Meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" Sales Team Meeting \"),starts_at(Tomorrow()),starts_at(HourMinuteAm(hours=10,minutes=45))))","qid":"e4b14b22-3f9f-4d91-a61f-d5b6a9b08b16.1"}
{"source":"create a lunch appointment at 12 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( NextTime :time ( NumberPM :number # ( Number 12 ) ) ) ) :subject ( ?= # ( String \" lunch appointment \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" lunch appointment \"),starts_at(NextTime(time=NumberPM(12)))))","qid":"c5be2c04-5ad2-4766-b465-6d1ed5eb4c6d.1"}
{"source":"Barack Obama on my calender","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Barack Obama \" ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(\" Barack Obama \"))","qid":"6a036124-cc63-41e9-93f6-4e201e391172.2"}
{"source":"I wanna have a picnic at the Gorge park tomorrow at 3 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :location ( ?= # ( LocationKeyphrase \" Gorge park \" ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 3 ) ) ) ) :subject ( ?= # ( String \" picnic \" ) ) ) ) ) )","target":"CreateEvent(AND(at_location(\" Gorge park \"),has_subject(\" picnic \"),starts_at(Tomorrow()),starts_at(NumberPM(3))))","qid":"71ae4a4a-f8ff-4d57-ac10-dd0e9fe88ef5.0"}
{"source":"Hi , can you mark down a visit to the hospital with Shannon to see her new nephew on Saturday at 1 pm ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Shannon \" ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" SATURDAY \" ) ) :time ( NumberPM :number # ( Number 1 ) ) ) ) :subject ( ?= # ( String \" visit to the hospital \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Shannon \"),has_subject(\" visit to the hospital \"),starts_at(NextDOW(\" SATURDAY \")),starts_at(NumberPM(1))))","qid":"25324fad-dfdb-495f-b3dd-a2b651011c1a.0"}
{"source":"I need to schedule a dinner meeting on Friday evening with Bill Door . Give us two hours and put the location down for Commander 's Palace .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Bill Door \" ) ) ) ) ) ) :duration ( ?= ( toHours # ( Number 2 ) ) ) :location ( ?= # ( LocationKeyphrase \" Commander's Palace \" ) ) :start ( DateTimeConstraint :constraint ( Evening ) :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) ) :subject ( ?= # ( String \" dinner meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(has_duration(toHours(2)),with_attendee(\" Bill Door \"),at_location(\" Commander's Palace \"),has_subject(\" dinner meeting \"),starts_at(Evening()),starts_at(NextDOW(\" FRIDAY \"))))","qid":"8f944390-7624-4540-9dbc-a64a00887db8.0"}
{"source":"I have a swim meet on Saturday , November 7 th at 6 am .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( MD :day # ( Number 7 ) :month # ( Month \" NOVEMBER \" ) ) :time ( NumberAM :number # ( Number 6 ) ) ) ) :subject ( ?= # ( String \" swim meet \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" swim meet \"),starts_at(MD(month=\" NOVEMBER \",day=7)),starts_at(NumberAM(6))))","qid":"849dc12e-e134-4ab4-9424-6e4b1dc5b19e.4"}
{"source":"I need the basketball practice I had on October 15 at 3 pm on my calendar !","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( previousMonthDay ( Today ) # ( Month \" OCTOBER \" ) # ( Number 15 ) ) :time ( NumberPM :number # ( Number 3 ) ) ) ) :subject ( ?= # ( String \" basketball practice \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" basketball practice \"),starts_at(previousMonthDay(Today(),Month(\" OCTOBER \"),15)),starts_at(NumberPM(3))))","qid":"e7e5c341-acc2-48e7-95e5-c9f3d2bad97a.0"}
{"source":"I have a dentist appointment with Dr. Takacs at 4 pm today ; can you fill in the location data for that ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Dr. Takacs \" ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Today ) :time ( NumberPM :number # ( Number 4 ) ) ) ) :subject ( ?= # ( String \" dentist appointment \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Dr. Takacs \"),has_subject(\" dentist appointment \"),starts_at(Today()),starts_at(NumberPM(4))))","qid":"5a9a7a0a-2695-4371-b698-e4c858e60376.0"}
{"source":"Can you create and event with Paige Ashworth and Cecelia Waller tomorrow at 4 : 30 pm ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Paige Ashworth \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Cecelia Waller \" ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( HourMinutePm :hours # ( Number 4 ) :minutes # ( Number 30.0 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Paige Ashworth \"),with_attendee(\" Cecelia Waller \"),starts_at(Tomorrow()),starts_at(HourMinutePm(hours=4,minutes=30))))","qid":"5e2be4ad-2aae-4101-906c-66e1aa670f26.0"}
{"source":"Can you schedule lunch after the jog .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( :end ( singleton ( :results ( FindEventWrapperWithDefaults :constraint ( Constraint[Event] :subject ( ?~= # ( String \" jog \" ) ) ) ) ) ) ) ) :subject ( ?= # ( String \" lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" lunch \"),starts_at(:end(FindEvents(has_subject(\" jog \"))))))","qid":"be3d4b54-8dac-431e-8b91-2005ab6ac652.2"}
{"source":"I also need a promotional meeting with Nichole , Candace , and Thad on Monday at 11 : 00 AM .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Nichole \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Candace \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Thad \" ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :time ( NumberAM :number # ( Number 11 ) ) ) ) :subject ( ?= # ( String \" promotional meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Thad \"),with_attendee(\" Nichole \"),with_attendee(\" Candace \"),has_subject(\" promotional meeting \"),starts_at(NextDOW(\" MONDAY \")),starts_at(NumberAM(11))))","qid":"eed8e6eb-ce22-4b14-b8ce-2d526952bd3e.2"}
{"source":"Please add dinner at 7 pm to my schedule on friday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( NumberPM :number # ( Number 7 ) ) ) ) :subject ( ?= # ( String \" dinner \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" dinner \"),starts_at(NextDOW(\" FRIDAY \")),starts_at(NumberPM(7))))","qid":"9b8ba82c-4432-475e-9145-bf2f6dd75741.8"}
{"source":"make meeting on 3 : 00 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( NextTime :time ( NumberPM :number # ( Number 3 ) ) ) ) ) ) ) )","target":"CreateEvent(starts_at(NextTime(time=NumberPM(3))))","qid":"21ee2bd1-d65f-4edf-8747-8df1530a1223.3"}
{"source":"Find a 2 hour time period on Thursday to Visit the Park .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :duration ( ?= ( toHours # ( Number 2 ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" THURSDAY \" ) ) ) ) :subject ( ?= # ( String \" Visit the Park \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" Visit the Park \"),starts_at(NextDOW(\" THURSDAY \")),has_duration(toHours(2))))","qid":"ec2f4453-9853-4099-824f-67653315d4e1.2"}
{"source":"I need a meeting tomorrow afternoon with Maynard .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Maynard \" ) ) ) ) ) ) :start ( DateTimeConstraint :constraint ( Afternoon ) :date ( Tomorrow ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Maynard \"),starts_at(Afternoon()),starts_at(Tomorrow())))","qid":"5cf23ccf-5b06-4ce9-a8fd-d07aa71de29c.3"}
{"source":"Please set up a meeting with Janice next Thursday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Janice \" ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" THURSDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Janice \"),starts_at(NextDOW(\" THURSDAY \"))))","qid":"0251a8dd-db61-4999-a110-fe696fa37ace.0"}
{"source":"I meant lunch with George on Saturday at 1 .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" George \" ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" SATURDAY \" ) ) :time ( NumberPM :number # ( Number 1 ) ) ) ) :subject ( ?= # ( String \" lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" George \"),has_subject(\" lunch \"),starts_at(NextDOW(\" SATURDAY \")),starts_at(NumberPM(1))))","qid":"da31f56a-f93d-4110-8931-0a56322c48d3.3"}
{"source":"I have a business meeting with Kim on Monday at 4 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim \" ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :time ( NumberPM :number # ( Number 4 ) ) ) ) :subject ( ?= # ( String \" business meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Kim \"),has_subject(\" business meeting \"),starts_at(NextDOW(\" MONDAY \")),starts_at(NumberPM(4))))","qid":"2130cd29-a1e6-4245-9b45-d2246865a456.0"}
{"source":"Paige ashworth has a birthday on the 22 nd","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( nextDayOfMonth ( Today ) # ( Number 22 ) ) ) ) :subject ( ?= # ( String \" Paige ashworth has a birthday \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" Paige ashworth has a birthday \"),starts_at(nextDayOfMonth(Today(),22))))","qid":"ba568d43-e408-4e0a-9502-1bc416c48bb2.1"}
{"source":"Create an event for today 8 : pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( Today ) :time ( NumberPM :number # ( Number 8 ) ) ) ) :subject ( ?= # ( String \" event \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" event \"),starts_at(Today()),starts_at(NumberPM(8))))","qid":"3ded17b2-ec5d-4a4f-ad3a-999253f50719.0"}
{"source":"Appreciate it . Make me a 3 day event starting tomorrow","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( EventAllDayStartingDateForPeriod :event ( Constraint[Event] ) :period ( toDays # ( Number 3 ) ) :startDate ( Tomorrow ) ) ) ) )","target":"CreateEvent(AND(has_duration(toDays(3)),starts_at(Tomorrow()),starts_at(Time(hour=0,minute=0))))","qid":"e8b98ffe-2d70-46ed-aae3-ee8d60eeaaf6.2"}
{"source":"I had a doctors appointment on january 5 th","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( previousMonthDay ( Today ) # ( Month \" JANUARY \" ) # ( Number 5 ) ) ) ) :subject ( ?= # ( String \" doctors appointment \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" doctors appointment \"),starts_at(previousMonthDay(Today(),Month(\" JANUARY \"),5))))","qid":"4c32b8c6-776d-426e-86bf-daeeaa7ef022.3"}
{"source":"Add draw up chart for monday morning .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( DateTimeConstraint :constraint ( Morning ) :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) ) :subject ( ?= # ( String \" draw up chart \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" draw up chart \"),starts_at(Morning()),starts_at(NextDOW(\" MONDAY \"))))","qid":"39d546ab-181d-4548-86da-bacef7fb6e70.3"}
{"source":"Put a meeting with Sam on my schedule for tomorrow at 3 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Sam \" ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 3 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Sam \"),starts_at(Tomorrow()),starts_at(NumberPM(3))))","qid":"94d0bb37-d6c4-491f-a3fc-71b7c8a87c29.0"}
{"source":"Make a Summon to be on the 27 th and ending on the 3 rd .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :end ( Constraint[DateTime] :date ( ?= ( nextDayOfMonth ( nextDayOfMonth ( Today ) # ( Number 27 ) ) # ( Number 3 ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( nextDayOfMonth ( Today ) # ( Number 27 ) ) ) ) :subject ( ?= # ( String \" Summon \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" Summon \"),starts_at(nextDayOfMonth(Today(),27)),ends_at(nextDayOfMonth(nextDayOfMonth(Today(),27),3))))","qid":"ec926095-6f7a-4af5-b47b-55071a670ce3.4"}
{"source":"Schedule a workshop meeting sometime after 2 today","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( DateTimeConstraint :constraint ( ?> ( NumberPM :number # ( Number 2 ) ) ) :date ( Today ) ) :subject ( ?= # ( String \" workshop meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" workshop meeting \"),starts_at(GT(NumberPM(2))),starts_at(Today())))","qid":"d47ac623-588d-48ea-b594-ebd5521d23c1.2"}
{"source":"add meeting with Tom at 2 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Tom \" ) ) ) ) ) ) :start ( ?= ( NextTime :time ( NumberPM :number # ( Number 2 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Tom \"),starts_at(NextTime(time=NumberPM(2)))))","qid":"531a1a31-7794-4a00-9b14-2e9d5a4ff44b.2"}
{"source":"Make a note that I had a Dermatologist appointment last Friday at 7 : 45 am .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( previousDayOfWeek ( Today ) # ( DayOfWeek \" FRIDAY \" ) ) :time ( HourMinuteAm :hours # ( Number 7 ) :minutes # ( Number 45 ) ) ) ) :subject ( ?= # ( String \" Dermatologist appointment \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" Dermatologist appointment \"),starts_at(previousDayOfWeek(Today(),DayOfWeek(\" FRIDAY \"))),starts_at(HourMinuteAm(hours=7,minutes=45))))","qid":"6aba3aec-4e26-4d99-9705-50f91de416a7.4"}
{"source":"Add hiking in Grand Canyon from 8 AM to 5 PM on Sunday 's schedule .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :end ( ?= ( TimeAfterDateTime :dateTime ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" SUNDAY \" ) ) :time ( NumberAM :number # ( Number 8 ) ) ) :time ( NumberPM :number # ( Number 5 ) ) ) ) :location ( ?= # ( LocationKeyphrase \" Grand Canyon \" ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" SUNDAY \" ) ) :time ( NumberAM :number # ( Number 8 ) ) ) ) :subject ( ?= # ( String \" hiking \" ) ) ) ) ) )","target":"CreateEvent(AND(ends_at(AND(GE(DateTime?(date=NextDOW(\" SUNDAY \"),time=NumberAM(8))),NumberPM(5))),at_location(\" Grand Canyon \"),has_subject(\" hiking \"),starts_at(NextDOW(\" SUNDAY \")),starts_at(NumberAM(8))))","qid":"8b316ad2-0ac6-4c8a-a284-48857b4ede9b.0"}
{"source":"Set up a themepark trip for next Sunday at Morgan \u2019s Wonderland .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :location ( ?= # ( LocationKeyphrase \" Morgan\\u2019s Wonderland \" ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" SUNDAY \" ) ) ) ) :subject ( ?= # ( String \" themepark trip \" ) ) ) ) ) )","target":"CreateEvent(AND(at_location(\" Morgan\\u2019s Wonderland \"),has_subject(\" themepark trip \"),starts_at(NextDOW(\" SUNDAY \"))))","qid":"008c9082-57ff-42f5-b6e3-1ab03c125b70.2"}
{"source":"Can we plan a Summer Camp for next summer ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( SeasonSummer ) ) :subject ( ?= # ( String \" Summer Camp \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" Summer Camp \"),starts_at(SeasonSummer())))","qid":"bfa76732-0fa2-4a41-b3d3-0e60653edf06.0"}
{"source":"I need to set up a meeting with Dave around 1 PM tomorrow .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Dave \" ) ) ) ) ) ) :start ( AroundDateTime :dateTime ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 1 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Dave \"),starts_at(AroundDateTime(dateTime=DateTime?(date=Tomorrow(),time=NumberPM(1))))))","qid":"c9956c82-c8fd-4486-bfd6-d95bd5c08729.0"}
{"source":"I want an event after brunch called Big Nap","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( GreaterThanFromStructDateTime :dateTimeConstraint ( ?= ( NextTime :time ( Brunch ) ) ) ) :subject ( ?= # ( String \" Big Nap \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" Big Nap \"),starts_at(GT(NextTime(time=Brunch())))))","qid":"25ec9d3c-07e2-42b6-a404-a1cc2c1c1f2a.0"}
{"source":"put meeting with Abby","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(\" Abby \"))","qid":"3c1843dd-b309-4827-bf11-d682d255da1d.0"}
{"source":"Add a Doctor Appointment to my calendar for any time but this weekend .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( Constraint[Date] :dayOfWeek ( negate ( Weekend ) ) ) ) :subject ( ?= # ( String \" Doctor Appointment \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" Doctor Appointment \"),avoid_start(Date?(dayOfWeek=Weekend()))))","qid":"4f2ec9f3-8c79-4910-b947-78dcec8a7b20.4"}
{"source":"I 'm going to the statue of liberty with Derek on Tuesday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Derek \" ) ) ) ) ) ) :location ( ?= # ( LocationKeyphrase \" statue of liberty \" ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Derek \"),at_location(\" statue of liberty \"),starts_at(NextDOW(\" TUESDAY \"))))","qid":"727ff2a4-1981-46b0-af3a-168451dc3bc8.2"}
{"source":"can we make something earlier than 4 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( OnDateBeforeTime :date ( Execute :intension ( refer ( extensionConstraint ( Constraint[Date] ) ) ) ) :time ( NumberPM :number # ( Number 4 ) ) ) ) ) ) )","target":"CreateEvent(starts_at(OnDateBeforeTime(date=refer(Date?()),time=NumberPM(4))))","qid":"9047e0cd-0548-481f-8262-0f17bb091826.0"}
{"source":"make a appointment today","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( Today ) ) ) ) ) ) )","target":"CreateEvent(starts_at(Today()))","qid":"e4c9c13a-fa42-47af-bf85-2d02f96d4842.2"}
{"source":"Can you please add an event to Friday ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(starts_at(NextDOW(\" FRIDAY \")))","qid":"eabfdd6c-db7e-4a15-a01a-811a5262ea08.0"}
{"source":"Make an event for next monday at 2 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :time ( NumberPM :number # ( Number 2 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(starts_at(NextDOW(\" MONDAY \")),starts_at(NumberPM(2))))","qid":"82f865f9-6d50-4ce0-842b-462e45f90529.4"}
{"source":"make something called New Appointment starting Thursday from 10 am to 11 am , and show me as Tentative","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :end ( ?= ( TimeAfterDateTime :dateTime ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" THURSDAY \" ) ) :time ( NumberAM :number # ( Number 10.0 ) ) ) :time ( NumberAM :number # ( Number 11 ) ) ) ) :showAs ( ?= # ( ShowAsStatus \" Tentative \" ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" THURSDAY \" ) ) :time ( NumberAM :number # ( Number 10.0 ) ) ) ) :subject ( ?= # ( String \" New Appointment \" ) ) ) ) ) )","target":"CreateEvent(AND(ends_at(AND(GE(DateTime?(date=NextDOW(\" THURSDAY \"),time=NumberAM(10))),NumberAM(11))),has_status(ShowAsStatus(\" Tentative \")),has_subject(\" New Appointment \"),starts_at(NextDOW(\" THURSDAY \")),starts_at(NumberAM(10))))","qid":"3d9997b1-ef8e-47a0-af3c-c06b7ecfddbe.0"}
{"source":"create chess meet on thursday at 10","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" THURSDAY \" ) ) :time ( NumberPM :number # ( Number 10.0 ) ) ) ) :subject ( ?= # ( String \" chess meet \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" chess meet \"),starts_at(NextDOW(\" THURSDAY \")),starts_at(NumberPM(10))))","qid":"cea0455f-b5c8-473d-bdc4-c3d8ce69f732.0"}
{"source":"Can you schedule a picnic on Father 's Day of next year ? It should start at 12 pm and last a couple of hours .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :duration ( ?= ( toHours ( Acouple ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( HolidayYear :holiday # ( Holiday \" FathersDay \" ) :year ( NextYear ) ) :time ( NumberPM :number # ( Number 12 ) ) ) ) :subject ( ?= # ( String \" picnic \" ) ) ) ) ) )","target":"CreateEvent(AND(has_duration(toHours(Acouple())),has_subject(\" picnic \"),starts_at(HolidayYear(holiday=Holiday(\" FathersDay \"),year=NextYear())),starts_at(NumberPM(12))))","qid":"d5dffb46-0935-4677-ab64-3a71b07ce958.1"}
{"source":"Set timing for hair appointment to evening .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :time ( Evening ) ) :subject ( ?= # ( String \" hair appointment \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" hair appointment \"),starts_at(Evening())))","qid":"3324892a-3d13-4549-a6a7-27162b11ef86.2"}
{"source":"I am I have a soccer game I need to schedule from 5 to 6 pm next tuesday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :end ( ?= ( TimeAfterDateTime :dateTime ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) :time ( NumberPM :number # ( Number 5 ) ) ) :time ( NumberPM :number # ( Number 6 ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) :time ( NumberPM :number # ( Number 5 ) ) ) ) :subject ( ?= # ( String \" soccer game \" ) ) ) ) ) )","target":"CreateEvent(AND(ends_at(AND(GE(DateTime?(date=NextDOW(\" TUESDAY \"),time=NumberPM(5))),NumberPM(6))),has_subject(\" soccer game \"),starts_at(NextDOW(\" TUESDAY \")),starts_at(NumberPM(5))))","qid":"86ce9637-b752-4316-b3a2-37504b4fef19.0"}
{"source":"Can you book a Leg workout on Tuesday at 9 : 30 am ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) :time ( HourMinuteAm :hours # ( Number 9 ) :minutes # ( Number 30.0 ) ) ) ) :subject ( ?= # ( String \" Leg workout \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" Leg workout \"),starts_at(NextDOW(\" TUESDAY \")),starts_at(HourMinuteAm(hours=9,minutes=30))))","qid":"a3e5f553-e283-44f4-89a0-995f2041ed5c.2"}
{"source":"Can you setup a doctor 's appointment for May 23 rd at 10 AM ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( MD :day # ( Number 23 ) :month # ( Month \" MAY \" ) ) :time ( NumberAM :number # ( Number 10.0 ) ) ) ) :subject ( ?= # ( String \" doctor's appointment \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" doctor's appointment \"),starts_at(MD(month=\" MAY \",day=23)),starts_at(NumberAM(10))))","qid":"6162af91-756e-49f1-9c78-dbf2fc6ca1be.3"}
{"source":"Create a date with Jimmy on Friday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jimmy \" ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) ) ) :subject ( ?= # ( String \" date \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jimmy \"),has_subject(\" date \"),starts_at(NextDOW(\" FRIDAY \"))))","qid":"2b1245ee-86a0-4138-8599-45a41e74abd4.0"}
{"source":"I want to add an event titled \" Nicole \" on Friday , May 3 rd , from 3 : 30 pm to 4 : 30 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :end ( ?= ( TimeAfterDateTime :dateTime ( DateAtTimeWithDefaults :date ( MD :day # ( Number 3 ) :month # ( Month \" MAY \" ) ) :time ( HourMinutePm :hours # ( Number 3 ) :minutes # ( Number 30.0 ) ) ) :time ( HourMinutePm :hours # ( Number 4 ) :minutes # ( Number 30.0 ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( MD :day # ( Number 3 ) :month # ( Month \" MAY \" ) ) :time ( HourMinutePm :hours # ( Number 3 ) :minutes # ( Number 30.0 ) ) ) ) :subject ( ?= # ( String \" Nicole \" ) ) ) ) ) )","target":"CreateEvent(AND(ends_at(AND(GE(DateTime?(date=MD(month=\" MAY \",day=3),time=HourMinutePm(hours=3,minutes=30))),HourMinutePm(hours=4,minutes=30))),has_subject(\" Nicole \"),starts_at(MD(month=\" MAY \",day=3)),starts_at(HourMinutePm(hours=3,minutes=30))))","qid":"944c443d-526d-4da3-9f0d-74b9625305b9.3"}
{"source":"i need a new meeting scheduled in bellevue at 6 tomorrow","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :location ( ?= # ( LocationKeyphrase \" bellevue \" ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 6 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(at_location(\" bellevue \"),starts_at(Tomorrow()),starts_at(NumberPM(6))))","qid":"bd05b24f-5800-4cb5-8e46-e076a564bc6e.0"}
{"source":"Create an event on April 30 th at 3 : 00 PM","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( MD :day # ( Number 30.0 ) :month # ( Month \" APRIL \" ) ) :time ( NumberPM :number # ( Number 3 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(starts_at(MD(month=\" APRIL \",day=30)),starts_at(NumberPM(3))))","qid":"6c723ee5-5666-4a48-8d9e-4cce8de07d87.0"}
{"source":"please add on the calender meeting with paul","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" paul \" ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(\" paul \"))","qid":"3798c96e-3241-42d2-9674-6d1641505705.2"}
{"source":"Let 's mark me as away from 7 - 9 pm on the 25 th","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :end ( ?= ( TimeAfterDateTime :dateTime ( DateAtTimeWithDefaults :date ( nextDayOfMonth ( Today ) # ( Number 25 ) ) :time ( NumberPM :number # ( Number 7 ) ) ) :time ( NumberPM :number # ( Number 9 ) ) ) ) :showAs ( ?= # ( ShowAsStatus \" OutOfOffice \" ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( nextDayOfMonth ( Today ) # ( Number 25 ) ) :time ( NumberPM :number # ( Number 7 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(ends_at(AND(GE(DateTime?(date=nextDayOfMonth(Today(),25),time=NumberPM(7))),NumberPM(9))),has_status(ShowAsStatus(\" OutOfOffice \")),starts_at(nextDayOfMonth(Today(),25)),starts_at(NumberPM(7))))","qid":"5c4b1abb-dcc9-42da-8c2a-3d302356cbce.4"}
{"source":"I need a meeting with Cher Roydon , Jerri Skinner , Fiona Mason","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Cher Roydon \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jerri Skinner \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Fiona Mason \" ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Fiona Mason \"),with_attendee(\" Cher Roydon \"),with_attendee(\" Jerri Skinner \")))","qid":"9026afaf-9c6b-45c6-94e1-94454b00dbfb.4"}
{"source":"Can you add a lunch meeting tomorrow at 1 pm ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 1 ) ) ) ) :subject ( ?= # ( String \" lunch meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" lunch meeting \"),starts_at(Tomorrow()),starts_at(NumberPM(1))))","qid":"8ed95573-7474-4ea2-8410-97f6fb706f7a.1"}
{"source":"Add Painting with a Twist on my calendar .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :subject ( ?= # ( String \" Painting with a Twist \" ) ) ) ) ) )","target":"CreateEvent(has_subject(\" Painting with a Twist \"))","qid":"f3048dc8-3b15-42ab-af8d-0e908cb04e02.1"}
{"source":"I need a night meeting on Friday with Allen .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Allen \" ) ) ) ) ) ) :start ( DateTimeConstraint :constraint ( Night ) :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Allen \"),starts_at(Night()),starts_at(NextDOW(\" FRIDAY \"))))","qid":"b655f810-e8db-4e7d-a991-5acab581d950.3"}
{"source":"Please add I need to bring soccer shoes to tomorrow Calendar .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) :subject ( ?= # ( String \" bring soccer shoes \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" bring soccer shoes \"),starts_at(Tomorrow())))","qid":"9c21c304-87bb-44e9-b99d-755b181e2b93.1"}
{"source":"I had an event on January 27 last year ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( DowOfWeekNew :dow ( :dayOfWeek ( MD :day # ( Number 27 ) :month # ( Month \" JANUARY \" ) ) ) :week ( FullYearofYear :year ( LastYear ) ) ) ) ) ) ) ) )","target":"CreateEvent(starts_at(DowOfWeekNew(dow=:dayOfWeek(MD(month=\" JANUARY \",day=27)),week=FullYearofYear(LastYear()))))","qid":"cbbb17be-e3f1-476c-90c3-f5c12114f01c.0"}
{"source":"Schedule Tennis practice with Tia next Tuesday at 8 : 30 am .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Tia \" ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) :time ( HourMinuteAm :hours # ( Number 8 ) :minutes # ( Number 30.0 ) ) ) ) :subject ( ?= # ( String \" Tennis practice \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Tia \"),has_subject(\" Tennis practice \"),starts_at(NextDOW(\" TUESDAY \")),starts_at(HourMinuteAm(hours=8,minutes=30))))","qid":"030021d8-6d1b-4c91-82f3-90764100131d.1"}
{"source":"Thanks ! Set up an event with Matthew next Tuesday at 11 : 30 .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Matthew \" ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) :time ( HourMinutePm :hours # ( Number 11 ) :minutes # ( Number 30.0 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Matthew \"),starts_at(NextDOW(\" TUESDAY \")),starts_at(HourMinutePm(hours=11,minutes=30))))","qid":"18bdbb58-363c-491c-8ff1-214f13bb7db2.2"}
{"source":"make a meeting called \" IT 'S JAYDEN IRFDAY \"","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :subject ( ?= # ( String \" IT'S JAYDEN IRFDAY \" ) ) ) ) ) )","target":"CreateEvent(has_subject(\" IT'S JAYDEN IRFDAY \"))","qid":"d1f9800e-89a2-4436-9886-079af28e9cdd.5"}
{"source":"Add vacation with Abby for 5 days starting November 1 st .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) :nonEmptyBase ( EventAllDayStartingDateForPeriod :event ( Constraint[Event] :subject ( ?= # ( String \" vacation \" ) ) ) :period ( toDays # ( Number 5 ) ) :startDate ( MD :day # ( Number 1 ) :month # ( Month \" NOVEMBER \" ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Abby \"),has_subject(\" vacation \"),has_duration(toDays(5)),starts_at(MD(month=\" NOVEMBER \",day=1)),starts_at(Time(hour=0,minute=0))))","qid":"d8a78348-f945-4a0e-b0e7-d2621e1ac9ea.0"}
{"source":"add diablo to my schedule this afternoon","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( DateTimeConstraint :constraint ( Afternoon ) :date ( Today ) ) :subject ( ?= # ( String \" diablo \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" diablo \"),starts_at(Afternoon()),starts_at(Today())))","qid":"c84e1d54-f863-4e7f-b700-1c3267317f24.0"}
{"source":"4 - 6 PM tonight is my book club","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :end ( ?= ( TimeAfterDateTime :dateTime ( DateAtTimeWithDefaults :date ( Today ) :time ( NumberPM :number # ( Number 4 ) ) ) :time ( NumberPM :number # ( Number 6 ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Today ) :time ( NumberPM :number # ( Number 4 ) ) ) ) :subject ( ?= # ( String \" book club \" ) ) ) ) ) )","target":"CreateEvent(AND(ends_at(AND(GE(DateTime?(date=Today(),time=NumberPM(4))),NumberPM(6))),has_subject(\" book club \"),starts_at(Today()),starts_at(NumberPM(4))))","qid":"ecbac641-7587-4c47-aeaf-4e1e6b39912b.4"}
{"source":"can i be free the whole day Thursday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( EventAllDayOnDate :date ( NextDOW :dow # ( DayOfWeek \" THURSDAY \" ) ) :event ( Constraint[Event] :showAs ( ?= # ( ShowAsStatus \" Free \" ) ) ) ) ) ) )","target":"CreateEvent(AND(spans_time(NextDOW(\" THURSDAY \")),has_status(ShowAsStatus(\" Free \"))))","qid":"1c732a5e-a118-4f1f-ba45-0e653b233d5c.0"}
{"source":"please remind me to pick the groceries at 5 pm tomorrow","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 5 ) ) ) ) :subject ( ?= # ( String \" pick the groceries \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" pick the groceries \"),starts_at(Tomorrow()),starts_at(NumberPM(5))))","qid":"87f0dbdf-4a50-4787-a855-c0561f80bf50.0"}
{"source":"Create a meeting on Thursday at 10 AM .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" THURSDAY \" ) ) :time ( NumberAM :number # ( Number 10.0 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(starts_at(NextDOW(\" THURSDAY \")),starts_at(NumberAM(10))))","qid":"cfc9a555-93d2-4c72-b4cb-b7f530788200.1"}
{"source":"Please schedule dinner with Fiona at 3 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Fiona \" ) ) ) ) ) ) :start ( ?= ( NextTime :time ( NumberPM :number # ( Number 3 ) ) ) ) :subject ( ?= # ( String \" dinner \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Fiona \"),has_subject(\" dinner \"),starts_at(NextTime(time=NumberPM(3)))))","qid":"cb74ea42-1b4d-4c51-bfb8-334060b34f26.1"}
{"source":"Can you schedule an event ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] ) ) ) )","target":"CreateEvent(Event?())","qid":"e862684e-cfe5-4b90-9084-7b0a5ab55c65.6"}
{"source":"Thanks . Can you add order takeout 2 hours before the play ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( PeriodDurationBeforeDateTime :dateTime ( :start ( singleton ( :results ( FindEventWrapperWithDefaults :constraint ( Constraint[Event] :subject ( ?~= # ( String \" play \" ) ) ) ) ) ) ) :periodDuration ( PeriodDuration :duration ( toHours # ( Number 2 ) ) ) ) ) :subject ( ?= # ( String \" order takeout \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" order takeout \"),starts_at(PeriodDurationBeforeDateTime(dateTime=:start(FindEvents(has_subject(\" play \"))),periodDuration=PeriodDuration(duration=toHours(2))))))","qid":"e73ee628-de2b-4914-8322-1166ae096454.2"}
{"source":"Schedule golf for 10 : 00 AM on Saturday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" SATURDAY \" ) ) :time ( NumberAM :number # ( Number 10.0 ) ) ) ) :subject ( ?= # ( String \" golf \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" golf \"),starts_at(NextDOW(\" SATURDAY \")),starts_at(NumberAM(10))))","qid":"d50cc7eb-6fcd-4c2a-ba47-1c7d51e41ca3.0"}
{"source":"I am going to gym on sunday at 8 am .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" SUNDAY \" ) ) :time ( NumberAM :number # ( Number 8 ) ) ) ) :subject ( ?= # ( String \" gym \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" gym \"),starts_at(NextDOW(\" SUNDAY \")),starts_at(NumberAM(8))))","qid":"1ee92de0-5215-4196-8f98-814a2d2ec998.0"}
{"source":"Who 's on Elli 's team now ?","original_target":"( Yield :output ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Elli \" ) ) ) ) ) ) )","target":"FindTeamOf(recipient=with_attendee(\" Elli \"))","qid":"510f242b-bc8a-457a-8aed-6cf7aa3c48e9.2"}
{"source":"What 's my manager 's name ?","original_target":"( Yield :output ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) )","target":"FindManager(CurrentUser())","qid":"05bf6467-03c4-497e-9644-1920f5799aa8.2"}
{"source":"Can you set up a meeting for Friday with Jake for 3 pm through the end today","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) :end ( ?= ( TimeAfterDateTime :dateTime ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( NumberPM :number # ( Number 3 ) ) ) :time ( EndOfWorkDay ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( NumberPM :number # ( Number 3 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(ends_at(AND(GE(DateTime?(date=NextDOW(\" FRIDAY \"),time=NumberPM(3))),EndOfWorkDay())),with_attendee(\" Jake \"),starts_at(NextDOW(\" FRIDAY \")),starts_at(NumberPM(3))))","qid":"07400e71-359a-4622-b11e-46995bc64e09.2"}
{"source":"wait , ok . Add dinner with Jim on the 23 rd at 5 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jim \" ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( nextDayOfMonth ( Today ) # ( Number 23 ) ) :time ( NumberPM :number # ( Number 5 ) ) ) ) :subject ( ?= # ( String \" dinner \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jim \"),has_subject(\" dinner \"),starts_at(nextDayOfMonth(Today(),23)),starts_at(NumberPM(5))))","qid":"9c9fc7fe-d741-42ae-b475-1c67b0a7092f.3"}
{"source":"Please put going fishing 9 : 00 AM to 1 : 00 PM instead .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :end ( ?= ( TimeAfterDateTime :dateTime ( NextTime :time ( NumberAM :number # ( Number 9 ) ) ) :time ( NumberPM :number # ( Number 1 ) ) ) ) :start ( ?= ( NextTime :time ( NumberAM :number # ( Number 9 ) ) ) ) :subject ( ?= # ( String \" going fishing \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" going fishing \"),starts_at(NextTime(time=NumberAM(9))),ends_at(AND(GE(NextTime(time=NumberAM(9))),NumberPM(1)))))","qid":"879b2381-6884-49a4-9500-ba220b26d564.1"}
{"source":"Can you schedule a Fajita Eating Session tonight at 6 : 30 pm ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( Today ) :time ( HourMinutePm :hours # ( Number 6 ) :minutes # ( Number 30.0 ) ) ) ) :subject ( ?= # ( String \" Fajita Eating Session \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" Fajita Eating Session \"),starts_at(Today()),starts_at(HourMinutePm(hours=6,minutes=30))))","qid":"570b3fcf-12bb-4b8d-ab4c-82ce6a3f13ef.4"}
{"source":"add an event for party at lake on July 4 th at 2 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :location ( ?= # ( LocationKeyphrase \" lake \" ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( MD :day # ( Number 4 ) :month # ( Month \" JULY \" ) ) :time ( NumberPM :number # ( Number 2 ) ) ) ) :subject ( ?= # ( String \" party \" ) ) ) ) ) )","target":"CreateEvent(AND(at_location(\" lake \"),has_subject(\" party \"),starts_at(MD(month=\" JULY \",day=4)),starts_at(NumberPM(2))))","qid":"ff743088-a646-432c-80b1-5d964f189170.1"}
{"source":"Book 2 hours tomorrow for doctor","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :duration ( ?= ( toHours # ( Number 2 ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) :subject ( ?= # ( String \" doctor \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" doctor \"),starts_at(Tomorrow()),has_duration(toHours(2))))","qid":"05e6516f-f8d9-46e4-b417-5d4ef56ec5c5.2"}
{"source":"After the last movie showing on Saturday , schedule an ice cream party .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( :end ( FindLastEvent :constraint ( EventOnDate :date ( NextDOW :dow # ( DayOfWeek \" SATURDAY \" ) ) :event ( Constraint[Event] :subject ( ?~= # ( String \" movie showing \" ) ) ) ) ) ) ) :subject ( ?= # ( String \" ice cream party \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" ice cream party \"),starts_at(:end(FindLastEvent(constraint=AND(starts_at(NextDOW(\" SATURDAY \")),has_subject(\" movie showing \")))))))","qid":"b62bef83-1eee-42e3-b6d9-daad9b8237c3.0"}
{"source":"Schedule my doctors appointment for 2 : 00 pm to 2 : 30 pm tomorrow .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :end ( ?= ( TimeAfterDateTime :dateTime ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 2 ) ) ) :time ( HourMinutePm :hours # ( Number 2 ) :minutes # ( Number 30.0 ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 2 ) ) ) ) :subject ( ?= # ( String \" doctors appointment \" ) ) ) ) ) )","target":"CreateEvent(AND(ends_at(AND(GE(DateTime?(date=Tomorrow(),time=NumberPM(2))),HourMinutePm(hours=2,minutes=30))),has_subject(\" doctors appointment \"),starts_at(Tomorrow()),starts_at(NumberPM(2))))","qid":"d4e489eb-a247-4723-a30f-7641aa44b3bb.0"}
{"source":"On May 4 th , can you add an event called \" Movie \" at 7 pm ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( MD :day # ( Number 4 ) :month # ( Month \" MAY \" ) ) :time ( NumberPM :number # ( Number 7 ) ) ) ) :subject ( ?= # ( String \" Movie \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" Movie \"),starts_at(MD(month=\" MAY \",day=4)),starts_at(NumberPM(7))))","qid":"2f2642f7-8330-4fdc-991d-75af5d316a76.1"}
{"source":"Add a trip to Norway for comingsummer .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :location ( ?= # ( LocationKeyphrase \" Norway \" ) ) :start ( Constraint[DateTime] :date ( SeasonSummer ) ) :subject ( ?= # ( String \" trip \" ) ) ) ) ) )","target":"CreateEvent(AND(at_location(\" Norway \"),has_subject(\" trip \"),starts_at(SeasonSummer())))","qid":"2d2cc4d0-fe25-4187-9bdf-aa5ed7730230.1"}
{"source":"Make a meeting with Abby tomorrow at 3","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 3 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Abby \"),starts_at(Tomorrow()),starts_at(NumberPM(3))))","qid":"463de991-fc68-438c-8f03-28a00a8c0ff5.0"}
{"source":"add a meeting with mrs ashford for Monday at 2 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" mrs ashford \" ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :time ( NumberPM :number # ( Number 2 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" mrs ashford \"),starts_at(NextDOW(\" MONDAY \")),starts_at(NumberPM(2))))","qid":"adf3a7eb-8a25-4055-b513-75fe796a859c.5"}
{"source":"Also put meeting with Jane for workout challenge at 12 : 00 pm next Wednesday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jane \" ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" WEDNESDAY \" ) ) :time ( NumberPM :number # ( Number 12 ) ) ) ) :subject ( ?= # ( String \" workout challenge \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jane \"),has_subject(\" workout challenge \"),starts_at(NextDOW(\" WEDNESDAY \")),starts_at(NumberPM(12))))","qid":"b459c6d2-45fd-4a31-855c-ab99017dfe68.2"}
{"source":"Throw a lunch meeting on my calendar for tomorrow please .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) :subject ( ?= # ( String \" lunch meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" lunch meeting \"),starts_at(Tomorrow())))","qid":"e7d73c81-542b-4a12-ab72-6c7688d71cb3.2"}
{"source":"Thanks , remain me on Saturday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" SATURDAY \" ) ) ) ) :subject ( ?= # ( String \" remain \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" remain \"),starts_at(NextDOW(\" SATURDAY \"))))","qid":"aa9cd0f0-c4c3-4199-9dba-5ad2c8bb0315.0"}
{"source":"Please create a meeting for 3 pm through the end of the day","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :end ( ?= ( TimeAfterDateTime :dateTime ( NextTime :time ( NumberPM :number # ( Number 3 ) ) ) :time ( EndOfWorkDay ) ) ) :start ( ?= ( NextTime :time ( NumberPM :number # ( Number 3 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(starts_at(NextTime(time=NumberPM(3))),ends_at(AND(GE(NextTime(time=NumberPM(3))),EndOfWorkDay()))))","qid":"67fdefc9-afc6-4c75-8adb-53c2084083c4.0"}
{"source":"Please schedule a dentist appointment in the fall .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( SeasonFall ) ) :subject ( ?= # ( String \" dentist appointment \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" dentist appointment \"),starts_at(SeasonFall())))","qid":"ac2ba076-5941-41de-b0ed-02546e246b6e.1"}
{"source":"Plan an event","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] ) ) ) )","target":"CreateEvent(Event?())","qid":"bfbb7248-7323-4a9b-8bd6-fc8651d172c4.0"}
{"source":"Show me as busy for 30 minutes after the conference .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :duration ( ?= ( toMinutes # ( Number 30.0 ) ) ) :showAs ( ?= # ( ShowAsStatus \" Busy \" ) ) :start ( ?= ( :end ( singleton ( :results ( FindEventWrapperWithDefaults :constraint ( Constraint[Event] :subject ( ?~= # ( String \" conference \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(starts_at(:end(FindEvents(has_subject(\" conference \")))),has_duration(toMinutes(30)),has_status(ShowAsStatus(\" Busy \"))))","qid":"afc3920e-8bc9-4aca-af69-5710d013554c.1"}
{"source":"Can you add paddleboarding tomorrow at 2 PM ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 2 ) ) ) ) :subject ( ?= # ( String \" paddleboarding \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" paddleboarding \"),starts_at(Tomorrow()),starts_at(NumberPM(2))))","qid":"b0ecac63-9081-41a9-a412-a8c00b43c410.1"}
{"source":"Can you set up a Publicity meeting for early Tuesday ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( DateTimeConstraint :constraint ( Early ) :date ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) ) :subject ( ?= # ( String \" Publicity meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" Publicity meeting \"),starts_at(Early()),starts_at(NextDOW(\" TUESDAY \"))))","qid":"62886795-546b-4d85-b464-06899cc2ddf4.0"}
{"source":"I need to spend tomorrow in Bellevue for 3 days","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( EventAllDayStartingDateForPeriod :event ( Constraint[Event] :location ( ?= # ( LocationKeyphrase \" Bellevue \" ) ) ) :period ( toDays # ( Number 3 ) ) :startDate ( Tomorrow ) ) ) ) )","target":"CreateEvent(AND(at_location(\" Bellevue \"),has_duration(toDays(3)),starts_at(Tomorrow()),starts_at(Time(hour=0,minute=0))))","qid":"3896e419-db19-4cf2-a89a-46b6920197ca.2"}
{"source":"Set up a 1 pm Dog Bathing on Thursday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" THURSDAY \" ) ) :time ( NumberPM :number # ( Number 1 ) ) ) ) :subject ( ?= # ( String \" Dog Bathing \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" Dog Bathing \"),starts_at(NextDOW(\" THURSDAY \")),starts_at(NumberPM(1))))","qid":"608b2e79-8a5f-4950-a02d-603ffd3f9daf.2"}
{"source":"Add an event late in the morning on tuesday . Set it for 2 hours and mark me as busy .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :duration ( ?= ( toHours # ( Number 2 ) ) ) :showAs ( ?= # ( ShowAsStatus \" Busy \" ) ) :start ( DateTimeConstraint :constraint ( LateMorning ) :date ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) ) ) ) ) )","target":"CreateEvent(AND(has_duration(toHours(2)),has_status(ShowAsStatus(\" Busy \")),starts_at(LateMorning()),starts_at(NextDOW(\" TUESDAY \"))))","qid":"4a82b1f4-7281-4ded-943e-80071afd99fb.0"}
{"source":"Please add a meeting with Brenda at 2 PM tomorrow","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Brenda \" ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 2 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Brenda \"),starts_at(Tomorrow()),starts_at(NumberPM(2))))","qid":"162578b2-2b53-48d8-9a24-32d5c2b295cf.0"}
{"source":"Make a meeting with Mike for tomorrow night .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Mike \" ) ) ) ) ) ) :start ( DateTimeConstraint :constraint ( Night ) :date ( Tomorrow ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Mike \"),starts_at(Night()),starts_at(Tomorrow())))","qid":"5deda9d4-b247-41d1-9d89-56f30304874b.0"}
{"source":"Set up coffee with Kate for tomorrow at 3 : 15 PM at Starbucks .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kate \" ) ) ) ) ) ) :location ( ?= # ( LocationKeyphrase \" Starbucks \" ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( HourMinutePm :hours # ( Number 3 ) :minutes # ( Number 15 ) ) ) ) :subject ( ?= # ( String \" coffee \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Kate \"),at_location(\" Starbucks \"),has_subject(\" coffee \"),starts_at(Tomorrow()),starts_at(HourMinutePm(hours=3,minutes=15))))","qid":"8cf7579f-c83e-41f1-a86a-7ee2c0f05a2b.0"}
{"source":"Start the lawn party at 4 .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( NextTime :time ( NumberPM :number # ( Number 4 ) ) ) ) :subject ( ?= # ( String \" lawn party \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" lawn party \"),starts_at(NextTime(time=NumberPM(4)))))","qid":"c97f46c1-da6d-4445-9054-a3d0c56592e8.4"}
{"source":"Schedule the one at 10 : 00 AN","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( NextTime :time ( NumberAM :number # ( Number 10.0 ) ) ) ) ) ) ) )","target":"CreateEvent(starts_at(NextTime(time=NumberAM(10))))","qid":"0486fd3a-8c4b-4bf5-b3ba-6405b8934bdc.2"}
{"source":"Cam you show status as busy from 8 to 11 am tomorrow .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :end ( ?= ( TimeAfterDateTime :dateTime ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberAM :number # ( Number 8 ) ) ) :time ( NumberAM :number # ( Number 11 ) ) ) ) :showAs ( ?= # ( ShowAsStatus \" Busy \" ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberAM :number # ( Number 8 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(ends_at(AND(GE(DateTime?(date=Tomorrow(),time=NumberAM(8))),NumberAM(11))),has_status(ShowAsStatus(\" Busy \")),starts_at(Tomorrow()),starts_at(NumberAM(8))))","qid":"6c11e5d3-dc56-4139-8916-e752c21453ab.2"}
{"source":"Set up a run around WVU coliseum for 1 hour on Friday at 7 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :duration ( ?= ( toHours # ( Number 1 ) ) ) :location ( ?= # ( LocationKeyphrase \" WVU coliseum \" ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( NumberPM :number # ( Number 7 ) ) ) ) :subject ( ?= # ( String \" run \" ) ) ) ) ) )","target":"CreateEvent(AND(has_duration(toHours(1)),at_location(\" WVU coliseum \"),has_subject(\" run \"),starts_at(NextDOW(\" FRIDAY \")),starts_at(NumberPM(7))))","qid":"7df6d997-b7a8-43db-90d3-02da2436f505.1"}
{"source":"I want to add dinner with Mary at 6 p.m. to my schedule tomorrow .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Mary \" ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 6 ) ) ) ) :subject ( ?= # ( String \" dinner \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Mary \"),has_subject(\" dinner \"),starts_at(Tomorrow()),starts_at(NumberPM(6))))","qid":"b7e4e340-34f8-48de-8382-91df1a664da8.0"}
{"source":"Can you add to the calendar meeting with Brenda Raggin on Friday at 3 : 00 pm ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Brenda Raggin \" ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( NumberPM :number # ( Number 3 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Brenda Raggin \"),starts_at(NextDOW(\" FRIDAY \")),starts_at(NumberPM(3))))","qid":"96f893a4-ea0e-46b5-90d2-f92eaa60fa2a.1"}
{"source":"Add music competition for the whole upcoming weekend","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( EventAllDayForDateRange :dateRange ( ThisWeekend ) :event ( Constraint[Event] :subject ( ?= # ( String \" music competition \" ) ) ) ) ) ) )","target":"CreateEvent(AND(spans_time(ThisWeekend()),has_subject(\" music competition \")))","qid":"48b6e52f-3f22-485a-afa4-9defaf9c68c3.0"}
{"source":"Please create event interviews from 10 th to 12 th","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( EventAllDayForDateRange :dateRange ( DateAndConstraint :date1 ( nextDayOfMonth ( Today ) # ( Number 10.0 ) ) :date2 ( nextDayOfMonth ( nextDayOfMonth ( Today ) # ( Number 10.0 ) ) # ( Number 12 ) ) ) :event ( Constraint[Event] :subject ( ?= # ( String \" interviews \" ) ) ) ) ) ) )","target":"CreateEvent(AND(spans_time(DateAndConstraint(date1=nextDayOfMonth(Today(),10),date2=nextDayOfMonth(nextDayOfMonth(Today(),10),12))),has_subject(\" interviews \")))","qid":"daf91528-e416-4b43-827e-767bf7859f62.0"}
{"source":"Make an event in Zion national Park on Saturday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :location ( ?= # ( LocationKeyphrase \" Zion national Park \" ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" SATURDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(at_location(\" Zion national Park \"),starts_at(NextDOW(\" SATURDAY \"))))","qid":"035dbece-f4ff-4e22-9777-d5e41414f1e5.2"}
{"source":"An appointment tomorrow for 5 minutes between 3 and 5","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :duration ( ?= ( toMinutes # ( Number 5 ) ) ) :start ( DateTimeAndConstraint :dateTime1 ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 3 ) ) ) :dateTime2 ( TimeAfterDateTime :dateTime ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 3 ) ) ) :time ( NumberPM :number # ( Number 5 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(starts_at(DateTimeRange(start=DateTime?(date=Tomorrow(),time=NumberPM(3)),end=AND(GE(DateTime?(date=Tomorrow(),time=NumberPM(3))),NumberPM(5)))),has_duration(toMinutes(5))))","qid":"c7481052-226b-4bb3-854d-fc17ff15872e.1"}
{"source":"put on the workout in gym session at 06 . 00 am","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( NextTime :time ( NumberAM :number # ( Number 6 ) ) ) ) :subject ( ?= # ( String \" workout in gym session \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" workout in gym session \"),starts_at(NextTime(time=NumberAM(6)))))","qid":"f9b8a1fc-99d7-4097-bbfa-fae5e9658330.3"}
{"source":"Okay , that 's a good thing because I 'd like to add \" Pick Up Zip Car for So Cal Trip \" to Wednesday at 3 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" WEDNESDAY \" ) ) :time ( NumberPM :number # ( Number 3 ) ) ) ) :subject ( ?= # ( String \" Pick Up Zip Car for So Cal Trip \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" Pick Up Zip Car for So Cal Trip \"),starts_at(NextDOW(\" WEDNESDAY \")),starts_at(NumberPM(3))))","qid":"680956d0-9d3a-4c59-a0ea-7bd3ccd04a8c.1"}
{"source":"Go ahead and add a two hour block from 2 - 4 next Friday for a long overdue haircut and pedicure .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :duration ( ?= ( toHours # ( Number 2 ) ) ) :end ( ?= ( TimeAfterDateTime :dateTime ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( NumberPM :number # ( Number 2 ) ) ) :time ( NumberPM :number # ( Number 4 ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( NumberPM :number # ( Number 2 ) ) ) ) :subject ( ?= # ( String \" long overdue haircut and pedicure \" ) ) ) ) ) )","target":"CreateEvent(AND(has_duration(toHours(2)),ends_at(AND(GE(DateTime?(date=NextDOW(\" FRIDAY \"),time=NumberPM(2))),NumberPM(4))),has_subject(\" long overdue haircut and pedicure \"),starts_at(NextDOW(\" FRIDAY \")),starts_at(NumberPM(2))))","qid":"88d2163f-0782-4930-8892-a847bf6544da.3"}
{"source":"sitting on the dock by the bay at 2 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( NextTime :time ( NumberPM :number # ( Number 2 ) ) ) ) :subject ( ?= # ( String \" dock by the bay \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" dock by the bay \"),starts_at(NextTime(time=NumberPM(2)))))","qid":"2e37123f-9275-4b94-8814-d1c4c5f18b43.0"}
{"source":"Can you save a meeting with Damon Ellery Wenesday at 10 am ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Damon Ellery \" ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" WEDNESDAY \" ) ) :time ( NumberAM :number # ( Number 10.0 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Damon Ellery \"),starts_at(NextDOW(\" WEDNESDAY \")),starts_at(NumberAM(10))))","qid":"2c14364a-5497-4853-9041-6544658ea50e.1"}
{"source":"Can you book a meeting for then at 11 am","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" THURSDAY \" ) ) :time ( NumberAM :number # ( Number 11 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(starts_at(NextDOW(\" THURSDAY \")),starts_at(NumberAM(11))))","qid":"bcdf183a-fc19-4e10-a75e-abd41035bcf5.1"}
{"source":"Put on the schedule that I have a code writing session today at 11 : 20 am","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( Today ) :time ( HourMinuteAm :hours # ( Number 11 ) :minutes # ( Number 20.0 ) ) ) ) :subject ( ?= # ( String \" code writing session \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" code writing session \"),starts_at(Today()),starts_at(HourMinuteAm(hours=11,minutes=20))))","qid":"3b80c610-0fcb-4014-b7e6-195d014f5507.0"}
{"source":"5 th of April will be the new meeting","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( MD :day # ( Number 5 ) :month # ( Month \" APRIL \" ) ) ) ) ) ) ) )","target":"CreateEvent(starts_at(MD(month=\" APRIL \",day=5)))","qid":"0d1a66ab-1a48-4524-a218-4877c995957f.0"}
{"source":"Add event \" Post debrief evaluation \" with Karl Boon at 11 : 30 am on June 7","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Karl Boon \" ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( MD :day # ( Number 7 ) :month # ( Month \" JUNE \" ) ) :time ( HourMinuteAm :hours # ( Number 11 ) :minutes # ( Number 30.0 ) ) ) ) :subject ( ?= # ( String \" Post debrief evaluation \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Karl Boon \"),has_subject(\" Post debrief evaluation \"),starts_at(MD(month=\" JUNE \",day=7)),starts_at(HourMinuteAm(hours=11,minutes=30))))","qid":"7dae7030-fbeb-4121-9254-a88cb6658dfa.14"}
{"source":"Please add a new event to my calander : Lunch with Barak on Wednesday at 12 PM","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Barak \" ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" WEDNESDAY \" ) ) :time ( NumberPM :number # ( Number 12 ) ) ) ) :subject ( ?= # ( String \" Lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Barak \"),has_subject(\" Lunch \"),starts_at(NextDOW(\" WEDNESDAY \")),starts_at(NumberPM(12))))","qid":"7bed3388-e581-478c-8dcc-53be8718bf96.7"}
{"source":"Awesome . Could you set up a meeting at 5 on Thursday ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" THURSDAY \" ) ) :time ( NumberPM :number # ( Number 5 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(starts_at(NextDOW(\" THURSDAY \")),starts_at(NumberPM(5))))","qid":"41564612-3493-4797-a44b-0ca8c2741d3c.3"}
{"source":"Who is Sally Jones reporting to ?","original_target":"( Yield :output ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Sally Jones \" ) ) ) ) ) ) )","target":"FindManager(\" Sally Jones \")","qid":"0a27e064-b3da-4089-8336-8b62a1f104d4.4"}
{"source":"I need the shopping spree I had last Friday into my calendar .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( previousDayOfWeek ( Today ) # ( DayOfWeek \" FRIDAY \" ) ) ) ) :subject ( ?= # ( String \" shopping spree \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" shopping spree \"),starts_at(previousDayOfWeek(Today(),DayOfWeek(\" FRIDAY \")))))","qid":"df22c5c1-ff50-41c4-8580-996f23aed83b.3"}
{"source":"I need to schedule a business meeting with Mr Rogers tomorrow at 2 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Mr Rogers \" ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 2 ) ) ) ) :subject ( ?= # ( String \" business meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Mr Rogers \"),has_subject(\" business meeting \"),starts_at(Tomorrow()),starts_at(NumberPM(2))))","qid":"465af817-cc51-47a0-b2c6-3d2774ab1211.0"}
{"source":"Schedule Call Parents for Sunday at 2 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" SUNDAY \" ) ) :time ( NumberPM :number # ( Number 2 ) ) ) ) :subject ( ?= # ( String \" Call Parents \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" Call Parents \"),starts_at(NextDOW(\" SUNDAY \")),starts_at(NumberPM(2))))","qid":"d9d7cdce-f43f-42ba-934d-64d0d83dcb42.0"}
{"source":"Add meet with Luna for sales discussion at 3 p m.","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Luna \" ) ) ) ) ) ) :start ( ?= ( NextTime :time ( NumberPM :number # ( Number 3 ) ) ) ) :subject ( ?= # ( String \" sales discussion \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Luna \"),has_subject(\" sales discussion \"),starts_at(NextTime(time=NumberPM(3)))))","qid":"f496adcb-cb30-4277-8d84-a2070c45b698.1"}
{"source":"Can you put me down for an appointment April 15 th at 8 am ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( MD :day # ( Number 15 ) :month # ( Month \" APRIL \" ) ) :time ( NumberAM :number # ( Number 8 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(starts_at(MD(month=\" APRIL \",day=15)),starts_at(NumberAM(8))))","qid":"349b5da0-8e66-44af-b7c5-54d7efa09ad6.0"}
{"source":"Add dinner with Justin at 6 : 30 pm tonight .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Justin \" ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Today ) :time ( HourMinutePm :hours # ( Number 6 ) :minutes # ( Number 30.0 ) ) ) ) :subject ( ?= # ( String \" dinner \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Justin \"),has_subject(\" dinner \"),starts_at(Today()),starts_at(HourMinutePm(hours=6,minutes=30))))","qid":"d83b567c-0b5b-4cec-9c59-503333da8fdd.1"}
{"source":"I need to plan my daughter 's party for Saturday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" SATURDAY \" ) ) ) ) :subject ( ?= # ( String \" daughter's party \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" daughter's party \"),starts_at(NextDOW(\" SATURDAY \"))))","qid":"6f2d3415-db6d-45f5-8405-d927cb64fe7b.0"}
{"source":"schedule a appointment with chief tl gary today evening","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" chief tl gary \" ) ) ) ) ) ) :start ( DateTimeConstraint :constraint ( Evening ) :date ( Today ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" chief tl gary \"),starts_at(Evening()),starts_at(Today())))","qid":"bb13d000-52c8-4378-84ba-bea8729952f1.2"}
{"source":"Create an event called Nashville vacation from tomorrow and lasting a week .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( EventAllDayStartingDateForPeriod :event ( Constraint[Event] :subject ( ?= # ( String \" Nashville vacation \" ) ) ) :period ( toWeeks # ( Number 1 ) ) :startDate ( Tomorrow ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" Nashville vacation \"),has_duration(toWeeks(1)),starts_at(Tomorrow()),starts_at(Time(hour=0,minute=0))))","qid":"02ab087d-de95-4006-8262-ff14255d81d7.4"}
{"source":"make a meeting with pattinson on tomorrow 4 . 00 - 4 . 30 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" pattinson \" ) ) ) ) ) ) :end ( ?= ( TimeAfterDateTime :dateTime ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 4 ) ) ) :time ( HourMinutePm :hours # ( Number 4 ) :minutes # ( Number 30.0 ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 4 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(ends_at(AND(GE(DateTime?(date=Tomorrow(),time=NumberPM(4))),HourMinutePm(hours=4,minutes=30))),with_attendee(\" pattinson \"),starts_at(Tomorrow()),starts_at(NumberPM(4))))","qid":"3c368863-dce4-44ba-82e7-139265ad693d.2"}
{"source":"i want to meeting with kristen on next week","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" kristen \" ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( NextWeekList ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" kristen \"),starts_at(NextWeekList())))","qid":"83e26908-4f77-4917-9b28-fb79876b929c.5"}
{"source":"Hi . Party is at 7 : 30 on the 29 th . Should run 2 hours .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :duration ( ?= ( toHours # ( Number 2 ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( nextDayOfMonth ( Today ) # ( Number 29 ) ) :time ( HourMinutePm :hours # ( Number 7 ) :minutes # ( Number 30.0 ) ) ) ) :subject ( ?= # ( String \" Party \" ) ) ) ) ) )","target":"CreateEvent(AND(has_duration(toHours(2)),has_subject(\" Party \"),starts_at(nextDayOfMonth(Today(),29)),starts_at(HourMinutePm(hours=7,minutes=30))))","qid":"45b1f2bb-54cb-4c5d-b9bb-da8327d2f257.0"}
{"source":"Ok , than lets schedule Batman for 2 : PM .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( NextTime :time ( NumberPM :number # ( Number 2 ) ) ) ) :subject ( ?= # ( String \" Batman \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" Batman \"),starts_at(NextTime(time=NumberPM(2)))))","qid":"538d1efd-e79f-4fc8-9a6f-1207dd714239.1"}
{"source":"Meeting with Accountant James Sunday morning","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Accountant James \" ) ) ) ) ) ) :start ( DateTimeConstraint :constraint ( Morning ) :date ( NextDOW :dow # ( DayOfWeek \" SUNDAY \" ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Accountant James \"),starts_at(Morning()),starts_at(NextDOW(\" SUNDAY \"))))","qid":"8bd40720-de1f-4218-8555-a030a19650ec.3"}
{"source":"add a meeting with barack obama today on 1130 in the morning","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" barack obama \" ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Today ) :time ( HourMinuteAm :hours # ( Number 11 ) :minutes # ( Number 30.0 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" barack obama \"),starts_at(Today()),starts_at(HourMinuteAm(hours=11,minutes=30))))","qid":"1c45c3fa-e831-40d0-8fe2-103e4395fade.4"}
{"source":"Put the birthday party at Kai Sushi on my calendar for Friday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :location ( ?= # ( LocationKeyphrase \" Kai Sushi \" ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) ) ) :subject ( ?= # ( String \" birthday party \" ) ) ) ) ) )","target":"CreateEvent(AND(at_location(\" Kai Sushi \"),has_subject(\" birthday party \"),starts_at(NextDOW(\" FRIDAY \"))))","qid":"44ce1537-7546-4365-9b30-46e38fdae9c4.2"}
{"source":"Add a doctor appointment to my schedule on Saturday at 5 pm for 3 hours","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :duration ( ?= ( toHours # ( Number 3 ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" SATURDAY \" ) ) :time ( NumberPM :number # ( Number 5 ) ) ) ) :subject ( ?= # ( String \" doctor appointment \" ) ) ) ) ) )","target":"CreateEvent(AND(has_duration(toHours(3)),has_subject(\" doctor appointment \"),starts_at(NextDOW(\" SATURDAY \")),starts_at(NumberPM(5))))","qid":"fd62ded9-75f9-4616-8110-49f9a2a935d5.0"}
{"source":"Can you add reading by the downstairs cafe ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :subject ( ?= # ( String \" reading by the downstairs cafe \" ) ) ) ) ) )","target":"CreateEvent(has_subject(\" reading by the downstairs cafe \"))","qid":"bb4eb5fd-bd70-4d15-8d70-3c7342d51495.0"}
{"source":"Schedule 1 hour for Eating Rice Chips on Sunday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :duration ( ?= ( toHours # ( Number 1 ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" SUNDAY \" ) ) ) ) :subject ( ?= # ( String \" Eating Rice Chips \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" Eating Rice Chips \"),starts_at(NextDOW(\" SUNDAY \")),has_duration(toHours(1))))","qid":"559b9483-a13c-43c0-aa6d-de32e438cf50.2"}
{"source":"basketball game 7 pm saturday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" SATURDAY \" ) ) :time ( NumberPM :number # ( Number 7 ) ) ) ) :subject ( ?= # ( String \" basketball game \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" basketball game \"),starts_at(NextDOW(\" SATURDAY \")),starts_at(NumberPM(7))))","qid":"33e09a98-f97b-4d83-a704-7569116fe2c2.0"}
{"source":"Create another meeting for monday at dinner as well","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :time ( Dinner ) ) ) :subject ( ?= # ( String \" meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" meeting \"),starts_at(NextDOW(\" MONDAY \")),starts_at(Dinner())))","qid":"6227307c-3919-46fd-b2cf-460a3846dc97.1"}
{"source":"Add a doctors appointment tomorrow morning","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( DateTimeConstraint :constraint ( Morning ) :date ( Tomorrow ) ) :subject ( ?= # ( String \" doctors appointment \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" doctors appointment \"),starts_at(Morning()),starts_at(Tomorrow())))","qid":"d16e9413-ccad-43c7-abf5-1f0f5c811f2f.4"}
{"source":"When am I free for lunch next week ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( NextWeekList ) ) :subject ( ?= # ( String \" lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" lunch \"),starts_at(NextWeekList())))","qid":"eb717c38-5ed2-4158-9b73-f17426691282.0"}
{"source":"I need a meeting Feb 21 of next year","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( MDY :day # ( Number 21 ) :month # ( Month \" FEBRUARY \" ) :year ( NextYear ) ) ) ) ) ) ) )","target":"CreateEvent(starts_at(MDY(month=Month(\" FEBRUARY \"),day=21,year=NextYear())))","qid":"6e5127c6-9ef6-4c7d-87b2-d4b415716f2c.0"}
{"source":"Great ! Add an appointment at the end of the day on June 6 th","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( MD :day # ( Number 6 ) :month # ( Month \" JUNE \" ) ) :time ( EndOfWorkDay ) ) ) ) ) ) )","target":"CreateEvent(AND(starts_at(MD(month=\" JUNE \",day=6)),starts_at(EndOfWorkDay())))","qid":"f3e3bb66-0ac3-4542-b048-c90e5a23144d.3"}
{"source":"Schedule a \" Doctor 's Appointment \" at 4 pm this Thursday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" THURSDAY \" ) ) :time ( NumberPM :number # ( Number 4 ) ) ) ) :subject ( ?= # ( String \" Doctor's Appointment \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" Doctor's Appointment \"),starts_at(NextDOW(\" THURSDAY \")),starts_at(NumberPM(4))))","qid":"3fb91d3c-a319-43f2-a716-65c277efcdcd.0"}
{"source":"okay and create a wine tour for all weekend","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( EventAllDayForDateRange :dateRange ( ThisWeekend ) :event ( Constraint[Event] :subject ( ?= # ( String \" wine tour \" ) ) ) ) ) ) )","target":"CreateEvent(AND(spans_time(ThisWeekend()),has_subject(\" wine tour \")))","qid":"90b33e97-0b74-43a8-a17c-3bddaaa1a968.2"}
{"source":"put a presentation at sep 12","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( MD :day # ( Number 12 ) :month # ( Month \" SEPTEMBER \" ) ) ) ) :subject ( ?= # ( String \" presentation \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" presentation \"),starts_at(MD(month=\" SEPTEMBER \",day=12))))","qid":"82f9c116-98df-4ac9-988d-46752adedb67.4"}
{"source":"Monday April 8 back to work","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( MD :day # ( Number 8 ) :month # ( Month \" APRIL \" ) ) ) ) :subject ( ?= # ( String \" back to work \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" back to work \"),starts_at(MD(month=\" APRIL \",day=8))))","qid":"7298c3df-a9a0-4500-9ea5-ebe5b52e03dd.0"}
{"source":"Schedule a hike through the Rocky Mountains tomorrow","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :location ( ?= # ( LocationKeyphrase \" the Rocky Mountains \" ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) :subject ( ?= # ( String \" hike \" ) ) ) ) ) )","target":"CreateEvent(AND(at_location(\" the Rocky Mountains \"),has_subject(\" hike \"),starts_at(Tomorrow())))","qid":"99950317-aaab-4d83-aeb8-8a5e590c0860.1"}
{"source":"could you please set me an event date ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :subject ( ?= # ( String \" date \" ) ) ) ) ) )","target":"CreateEvent(has_subject(\" date \"))","qid":"1604a5d0-f768-4529-8fe1-bb075dfe305b.2"}
{"source":"Add a co - worker sync with Cecelia Waller for 1 hour after the Lunch date .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Cecelia Waller \" ) ) ) ) ) ) :start ( ?= ( adjustByPeriodDuration ( :end ( singleton ( :results ( FindEventWrapperWithDefaults :constraint ( Constraint[Event] :subject ( ?~= # ( String \" Lunch date \" ) ) ) ) ) ) ) ( PeriodDuration :duration ( toHours # ( Number 1 ) ) ) ) ) :subject ( ?= # ( String \" co-worker sync \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Cecelia Waller \"),has_subject(\" co_worker sync \"),starts_at(adjustByPeriodDuration(:end(FindEvents(has_subject(\" Lunch date \"))),PeriodDuration(duration=toHours(1))))))","qid":"f4e2d808-8b1b-4ca3-89d8-44bc21afe87b.8"}
{"source":"Schedule dogsitter next week","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( NextWeekList ) ) :subject ( ?= # ( String \" dogsitter \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" dogsitter \"),starts_at(NextWeekList())))","qid":"519179b3-01d7-49f5-a3bd-64ece1a4a008.4"}
{"source":"Please schedule a vet appointment for my cat for Friday from 2 pm to 4 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :end ( ?= ( TimeAfterDateTime :dateTime ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( NumberPM :number # ( Number 2 ) ) ) :time ( NumberPM :number # ( Number 4 ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( NumberPM :number # ( Number 2 ) ) ) ) :subject ( ?= # ( String \" vet appointment for my cat \" ) ) ) ) ) )","target":"CreateEvent(AND(ends_at(AND(GE(DateTime?(date=NextDOW(\" FRIDAY \"),time=NumberPM(2))),NumberPM(4))),has_subject(\" vet appointment for my cat \"),starts_at(NextDOW(\" FRIDAY \")),starts_at(NumberPM(2))))","qid":"1aebdb61-efd6-4608-bf94-0ba32ea84c1b.0"}
{"source":"Busy all Wednesday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( EventAllDayOnDate :date ( NextDOW :dow # ( DayOfWeek \" WEDNESDAY \" ) ) :event ( Constraint[Event] :showAs ( ?= # ( ShowAsStatus \" Busy \" ) ) ) ) ) ) )","target":"CreateEvent(AND(spans_time(NextDOW(\" WEDNESDAY \")),has_status(ShowAsStatus(\" Busy \"))))","qid":"2813f47c-95d0-42bc-bfc9-bedcf6d0819b.0"}
{"source":"how many members in my team ?","original_target":"( Yield :output ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) )","target":"FindTeamOf(recipient=with_attendee(CurrentUser()))","qid":"33cb5a6c-3199-4f66-a13e-4ec0918f75e0.0"}
{"source":"put on meet with smith and john","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" smith \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" john \" ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" smith \"),with_attendee(\" john \")))","qid":"0f3978b8-51c0-4c21-8197-992a50425ff5.1"}
{"source":"Show my status as tentative for the rest of the week .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :nonEmptyBase ( EventDuringRange :event ( Constraint[Event] ) :range ( ThisWeek ) ) :showAs ( ?= # ( ShowAsStatus \" Tentative \" ) ) ) ) ) )","target":"CreateEvent(AND(has_status(ShowAsStatus(\" Tentative \")),at_time(ThisWeek())))","qid":"3e4fd081-48ab-4983-8d31-a1829b452fdf.0"}
{"source":"Trying to get a meeting together ... just me , Wade and Janice","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Wade \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Janice \" ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Wade \"),with_attendee(\" Janice \")))","qid":"1fba0907-12c1-4424-8f81-8159ef4af678.0"}
{"source":"I also need a dental appointment tomorrow afternoon","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( DateTimeConstraint :constraint ( Afternoon ) :date ( Tomorrow ) ) :subject ( ?= # ( String \" dental appointment \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" dental appointment \"),starts_at(Afternoon()),starts_at(Tomorrow())))","qid":"0d05db30-21de-462e-811a-b13317cbd6ed.2"}
{"source":"can you please put on my calendar that i have a movie date tomorrow starting at 7 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 7 ) ) ) ) :subject ( ?= # ( String \" movie date \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" movie date \"),starts_at(Tomorrow()),starts_at(NumberPM(7))))","qid":"998f95e2-4b92-48a5-a951-c71ff8e4abe0.3"}
{"source":"Create a meeting in the afternoon on Monday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( DateTimeConstraint :constraint ( Afternoon ) :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) ) ) ) ) )","target":"CreateEvent(AND(starts_at(Afternoon()),starts_at(NextDOW(\" MONDAY \"))))","qid":"0122a497-fbc1-4804-9867-f8bfad2958f1.2"}
{"source":"Can you add Annual Company Picnic at Central Park on Saturday at 11 : 15 am ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :location ( ?= # ( LocationKeyphrase \" Central Park \" ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" SATURDAY \" ) ) :time ( HourMinuteAm :hours # ( Number 11 ) :minutes # ( Number 15 ) ) ) ) :subject ( ?= # ( String \" Annual Company Picnic \" ) ) ) ) ) )","target":"CreateEvent(AND(at_location(\" Central Park \"),has_subject(\" Annual Company Picnic \"),starts_at(NextDOW(\" SATURDAY \")),starts_at(HourMinuteAm(hours=11,minutes=15))))","qid":"e3c8cfe8-3876-4792-89ac-339cd1de7a47.1"}
{"source":"Schedule my soccer appointment at 2 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( NextTime :time ( NumberPM :number # ( Number 2 ) ) ) ) :subject ( ?= # ( String \" soccer appointment \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" soccer appointment \"),starts_at(NextTime(time=NumberPM(2)))))","qid":"bf5c1e6f-20a5-4a31-9987-d47497540b2e.2"}
{"source":"Make an all day event starting the 19 th called partytime","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( EventAllDayOnDate :date ( nextDayOfMonth ( Today ) # ( Number 19 ) ) :event ( Constraint[Event] :subject ( ?= # ( String \" partytime \" ) ) ) ) ) ) )","target":"CreateEvent(AND(spans_time(nextDayOfMonth(Today(),19)),has_subject(\" partytime \")))","qid":"25c41cad-caa4-4bb6-8977-a9ca78191493.0"}
{"source":"Make an event called relaxing me time from 8 AM to noon .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :end ( ?= ( TimeAfterDateTime :dateTime ( NextTime :time ( NumberAM :number # ( Number 8 ) ) ) :time ( Noon ) ) ) :start ( ?= ( NextTime :time ( NumberAM :number # ( Number 8 ) ) ) ) :subject ( ?= # ( String \" relaxing me time \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" relaxing me time \"),starts_at(NextTime(time=NumberAM(8))),ends_at(AND(GE(NextTime(time=NumberAM(8))),Noon()))))","qid":"d8757d14-96c8-463c-a97d-cf5a65f9bd16.1"}
{"source":"I also need to call my accountant 9 days before tax day to check on my taxes and that will be at noon and will probably last about 45 minutes and I need to be shown as busy","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :duration ( ?= ( toMinutes # ( Number 45 ) ) ) :showAs ( ?= # ( ShowAsStatus \" Busy \" ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( PeriodBeforeDate :date ( NextHolidayFromToday :holiday # ( Holiday \" TaxDay \" ) ) :period ( toDays # ( Number 9 ) ) ) :time ( Noon ) ) ) :subject ( ?= # ( String \" call my accountant \" ) ) ) ) ) )","target":"CreateEvent(AND(has_duration(toMinutes(45)),has_status(ShowAsStatus(\" Busy \")),has_subject(\" call my accountant \"),starts_at(PeriodBeforeDate(date=NextHolidayFromToday(holiday=Holiday(\" TaxDay \")),period=toDays(9))),starts_at(Noon())))","qid":"51ffe10a-ec9e-405b-be96-3e456a9b2b07.1"}
{"source":"I 'm attending a Math Conference in Washington D.C. tomorrow .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :location ( ?= # ( LocationKeyphrase \" Washington D.C. \" ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) :subject ( ?= # ( String \" Math Conference \" ) ) ) ) ) )","target":"CreateEvent(AND(at_location(\" Washington D.C. \"),has_subject(\" Math Conference \"),starts_at(Tomorrow())))","qid":"0ec7199a-078d-4107-8c0e-c167775e443d.2"}
{"source":"create a staff meeting headed by damon straeter and add dan schoffel","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" damon straeter \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" dan schoffel \" ) ) ) ) ) ) ) :subject ( ?= # ( String \" staff meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" damon straeter \"),with_attendee(\" dan schoffel \"),has_subject(\" staff meeting \")))","qid":"7c8fc548-d943-4883-bca2-2b1131d44759.0"}
{"source":"ok put meeting on jul 26","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( MD :day # ( Number 26 ) :month # ( Month \" JULY \" ) ) ) ) ) ) ) )","target":"CreateEvent(starts_at(MD(month=\" JULY \",day=26)))","qid":"5828dcef-0e13-4067-bc56-6a5bf5f53ca9.1"}
{"source":"Add dinner at 6 to 8 pm on Friday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :end ( ?= ( TimeAfterDateTime :dateTime ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( NumberPM :number # ( Number 6 ) ) ) :time ( NumberPM :number # ( Number 8 ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( NumberPM :number # ( Number 6 ) ) ) ) :subject ( ?= # ( String \" dinner \" ) ) ) ) ) )","target":"CreateEvent(AND(ends_at(AND(GE(DateTime?(date=NextDOW(\" FRIDAY \"),time=NumberPM(6))),NumberPM(8))),has_subject(\" dinner \"),starts_at(NextDOW(\" FRIDAY \")),starts_at(NumberPM(6))))","qid":"9d8d0634-fc15-42f6-8742-142920ea17ea.1"}
{"source":"I 'm going to be at Fort Myers Beach tomorrow .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :location ( ?= # ( LocationKeyphrase \" Fort Myers Beach \" ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) ) ) ) )","target":"CreateEvent(AND(at_location(\" Fort Myers Beach \"),starts_at(Tomorrow())))","qid":"04efad9b-a943-4144-836c-80da6b4b681e.1"}
{"source":"make a appointment with jacob tomorrow 9 . 00 am - 9 . 30 am","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" jacob \" ) ) ) ) ) ) :end ( ?= ( TimeAfterDateTime :dateTime ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberAM :number # ( Number 9 ) ) ) :time ( HourMinuteAm :hours # ( Number 9 ) :minutes # ( Number 30.0 ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberAM :number # ( Number 9 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(ends_at(AND(GE(DateTime?(date=Tomorrow(),time=NumberAM(9))),HourMinuteAm(hours=9,minutes=30))),with_attendee(\" jacob \"),starts_at(Tomorrow()),starts_at(NumberAM(9))))","qid":"f462c742-dd5e-4172-89c4-f4a51dea39e5.0"}
{"source":"Do I have time to schedule a meditation session this afternoon ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( DateTimeConstraint :constraint ( Afternoon ) :date ( Today ) ) :subject ( ?= # ( String \" meditation session \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" meditation session \"),starts_at(Afternoon()),starts_at(Today())))","qid":"83363e06-09e8-46ef-a0e8-bd8fa2811edc.2"}
{"source":"I need to schedule a meeting for tomorrow at 8 AM .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberAM :number # ( Number 8 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(starts_at(Tomorrow()),starts_at(NumberAM(8))))","qid":"1f180de1-16b3-42ac-88d2-43d9f2df3d30.0"}
{"source":"Schedule a meeting in 15 minutes with bill","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" bill \" ) ) ) ) ) ) :start ( ?= ( adjustByPeriodDuration ( Now ) ( PeriodDuration :duration ( toMinutes # ( Number 15 ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" bill \"),starts_at(adjustByPeriodDuration(Now(),PeriodDuration(duration=toMinutes(15))))))","qid":"4380a072-29c5-4bd3-8932-de08f2aa5fa5.0"}
{"source":"Going on holiday to India for 5 days","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( EventAllDayStartingDateForPeriod :event ( Constraint[Event] :subject ( ?= # ( String \" holiday to India \" ) ) ) :period ( toDays # ( Number 5 ) ) :startDate ( Execute :intension ( refer ( extensionConstraint ( Constraint[Date] ) ) ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" holiday to India \"),has_duration(toDays(5)),starts_at(refer(Date?())),starts_at(Time(hour=0,minute=0))))","qid":"c33205b3-c26d-49fb-a521-74fd57d814b4.0"}
{"source":"Hi , can you add a meeting with Hailey at lunch and ending at the end of the day on Friday please ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Hailey \" ) ) ) ) ) ) :end ( ?= ( TimeAfterDateTime :dateTime ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( Lunch ) ) :time ( EndOfWorkDay ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( Lunch ) ) ) ) ) ) )","target":"CreateEvent(AND(ends_at(AND(GE(DateTime?(date=NextDOW(\" FRIDAY \"),time=Lunch())),EndOfWorkDay())),with_attendee(\" Hailey \"),starts_at(NextDOW(\" FRIDAY \")),starts_at(Lunch())))","qid":"e1699254-3514-4a33-af58-9decf780d0e6.0"}
{"source":"Schedule a meeting with Scot for Thursday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Scot \" ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" THURSDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Scot \"),starts_at(NextDOW(\" THURSDAY \"))))","qid":"a2e4421d-3584-4391-a3be-14e114209752.4"}
{"source":"Schedule pack for trip to Disney Land on Friday 2 pm for 2 hours .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :duration ( ?= ( toHours # ( Number 2 ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( NumberPM :number # ( Number 2 ) ) ) ) :subject ( ?= # ( String \" pack for trip to Disney Land \" ) ) ) ) ) )","target":"CreateEvent(AND(has_duration(toHours(2)),has_subject(\" pack for trip to Disney Land \"),starts_at(NextDOW(\" FRIDAY \")),starts_at(NumberPM(2))))","qid":"5c53a176-5426-470d-a029-e11d06079633.0"}
{"source":"Make me an event next friday at 4 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( NumberPM :number # ( Number 4 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(starts_at(NextDOW(\" FRIDAY \")),starts_at(NumberPM(4))))","qid":"db14ecde-04d6-477d-b432-1d92cdb2887a.0"}
{"source":"Yes , I will take a day off Monday October 21 .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( EventAllDayOnDate :date ( MD :day # ( Number 21 ) :month # ( Month \" OCTOBER \" ) ) :event ( Constraint[Event] :subject ( ?= # ( String \" take a day off \" ) ) ) ) ) ) )","target":"CreateEvent(AND(spans_time(MD(month=\" OCTOBER \",day=21)),has_subject(\" take a day off \")))","qid":"61703e8d-86bb-4cd9-b217-71651e1f5191.4"}
{"source":"can you add lunch with Mia sometime between 10 am and 12 pm please .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Mia \" ) ) ) ) ) ) :end ( ?= ( TimeAfterDateTime :dateTime ( NextTime :time ( NumberAM :number # ( Number 10.0 ) ) ) :time ( NumberPM :number # ( Number 12 ) ) ) ) :start ( ?= ( NextTime :time ( NumberAM :number # ( Number 10.0 ) ) ) ) :subject ( ?= # ( String \" lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Mia \"),has_subject(\" lunch \"),starts_at(NextTime(time=NumberAM(10))),ends_at(AND(GE(NextTime(time=NumberAM(10))),NumberPM(12)))))","qid":"5ddaac6a-f795-41de-b758-d8b0232a0a2f.2"}
{"source":"Who are my reports","original_target":"( Yield :output ( FindReports :recipient ( toRecipient ( CurrentUser ) ) ) )","target":"FindReports(recipient=CurrentUser())","qid":"c6171a26-13f0-40dd-bb5f-7510d23192b4.1"}
{"source":"Please schedule a meeting with the pope tomorrow","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" pope \" ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" pope \"),starts_at(Tomorrow())))","qid":"a84b31cd-2035-49a2-9d4a-11d4d8082142.0"}
{"source":"Make an event for Monday at 3 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :time ( NumberPM :number # ( Number 3 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(starts_at(NextDOW(\" MONDAY \")),starts_at(NumberPM(3))))","qid":"58942d7a-fe51-49cd-9fbe-bad98f4553e5.1"}
