{"source":"Make me a meeting with my team . We need a room","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :location ( roomRequest ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),at_location(roomRequest())))","qid":"2bf907bd-e47b-4830-b33b-86f09cfa0cb0.0"}
{"source":"Schedule a meeting with jake and his team for next week .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" jake \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" jake \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( NextWeekList ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" jake \"),with_attendee(FindTeamOf(recipient=\" jake \")),starts_at(NextWeekList())))","qid":"e7e3024f-555b-4399-acf1-3a6ed35a89a2.1"}
{"source":"Schedule party time after happy hour with Brett , and add Joe 's team to the fun .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Joe \" ) ) ) ) ) ) ) :start ( ?= ( :end ( singleton ( :results ( FindEventWrapperWithDefaults :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipientConstraint :recipientConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Brett \" ) ) ) :subject ( ?~= # ( String \" happy hour \" ) ) ) ) ) ) ) ) :subject ( ?= # ( String \" party time \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=\" Joe \")),has_subject(\" party time \"),starts_at(:end(FindEvents(AND(with_attendee(\" Brett \"),has_subject(\" happy hour \")))))))","qid":"34e3d738-a641-43a3-b81b-9e2096450916.0"}
{"source":"I will be in Seattle tomorrow for 89 days with my team","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :nonEmptyBase ( EventAllDayStartingDateForPeriod :event ( Constraint[Event] :location ( ?= # ( LocationKeyphrase \" Seattle \" ) ) ) :period ( toDays # ( Number 89 ) ) :startDate ( Tomorrow ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),at_location(\" Seattle \"),has_duration(toDays(89)),starts_at(Tomorrow()),starts_at(Time(hour=0,minute=0))))","qid":"4b9a3962-290e-4571-be00-5ef9630f6eac.2"}
{"source":"Please schedule a meeting with Chan 's boss at 10 am on Monday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Chan \" ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :time ( NumberAM :number # ( Number 10.0 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Chan \")),starts_at(NextDOW(\" MONDAY \")),starts_at(NumberAM(10))))","qid":"f0c397ed-9d05-4487-956a-5b9adacb46e4.5"}
{"source":"Set up a call with Matt and his manager","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Matt \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Matt \" ) ) ) ) ) ) ) ) :subject ( ?= # ( String \" call \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Matt \"),with_attendee(FindManager(\" Matt \")),has_subject(\" call \")))","qid":"6e6c09f2-72ca-41c5-ab33-b2bc22bb96e0.3"}
{"source":"Now I 've got to set a get together with Meg and her supervisor for tomorrow .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Meg \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Meg \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) :subject ( ?= # ( String \" get together \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Meg \"),with_attendee(FindManager(\" Meg \")),has_subject(\" get together \"),starts_at(Tomorrow())))","qid":"15edf3cf-eaaf-448e-a0ed-159cafcc763e.2"}
{"source":"Schedule a meeting with my boss for this Thursday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" THURSDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),starts_at(NextDOW(\" THURSDAY \"))))","qid":"fbc1c0e9-b095-48b6-8921-ec6212870d06.1"}
{"source":"Can you set up a presentation with Elli and her Team tomorrow at 3 ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Elli \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Elli \" ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 3 ) ) ) ) :subject ( ?= # ( String \" presentation \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Elli \"),with_attendee(FindTeamOf(recipient=\" Elli \")),has_subject(\" presentation \"),starts_at(Tomorrow()),starts_at(NumberPM(3))))","qid":"510f242b-bc8a-457a-8aed-6cf7aa3c48e9.3"}
{"source":"I need a meeting with Jake and his boss","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jake \"),with_attendee(FindManager(\" Jake \"))))","qid":"bf35a204-527c-409c-a332-d1f6b77418a1.2"}
{"source":"Add me a room for my Team at NERD please , for thursday afternoon .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :location ( andConstraint ( ?= # ( LocationKeyphrase \" NERD \" ) ) ( roomRequest ) ) :start ( DateTimeConstraint :constraint ( Afternoon ) :date ( NextDOW :dow # ( DayOfWeek \" THURSDAY \" ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),at_location(\" NERD \"),at_location(roomRequest()),starts_at(Afternoon()),starts_at(NextDOW(\" THURSDAY \"))))","qid":"b06aa9d1-806b-448a-a105-a20eb93aaa81.2"}
{"source":"Please add to the calendar meeting with team on Friday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(NextDOW(\" FRIDAY \"))))","qid":"f57bce5b-ab43-4897-b113-1a5059ac5380.0"}
{"source":"I need to have a conference with Janet and her supervisor on Monday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Janet \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Janet \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) ) ) :subject ( ?= # ( String \" conference \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Janet \"),with_attendee(FindManager(\" Janet \")),has_subject(\" conference \"),starts_at(NextDOW(\" MONDAY \"))))","qid":"d74d8ef7-46c6-47a3-a479-06eaf68236bd.4"}
{"source":"create meeting with coworkers at 8 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( NextTime :time ( NumberPM :number # ( Number 8 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(NextTime(time=NumberPM(8)))))","qid":"c543d280-b449-4d71-98c9-47ee9f237c5f.0"}
{"source":"Set up a meeting called reviews with Cheyenne 's manager on friday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Cheyenne \" ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) ) ) :subject ( ?= # ( String \" reviews \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Cheyenne \")),has_subject(\" reviews \"),starts_at(NextDOW(\" FRIDAY \"))))","qid":"5e320ecf-1a6d-458f-aa2a-ea5569511eb6.3"}
{"source":"That looks good Now please schedule a meeting with manager in 2020","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( FullYearofYear :year # ( Number 2020.0 ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),starts_at(FullYearofYear(2020))))","qid":"ddad4b3b-0660-4519-8076-bc2435f3d177.2"}
{"source":"Make me an event tomorrow with my team","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(Tomorrow())))","qid":"a2ebf8e1-92f3-4530-a0ab-3e42835ba616.0"}
{"source":"Great , I want a meeting with Kim Possible 's team . Can you schedule that for me please ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim Possible \" ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindTeamOf(recipient=\" Kim Possible \")))","qid":"6a475e18-7271-4622-a1f0-fad48033393b.2"}
{"source":"I need to schedule a meeting with Dan Schoffel and his bosses boss on Monday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Dan Schoffel \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Dan Schoffel \" ) ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Dan Schoffel \"),with_attendee(FindManager(FindManager(\" Dan Schoffel \"))),starts_at(NextDOW(\" MONDAY \"))))","qid":"4e2f164c-a3ff-49bb-8647-fa1d1101da8a.0"}
{"source":"Schedule a breakfast meeting with Elli and her skip on Saturday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Elli \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Elli \" ) ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" SATURDAY \" ) ) ) ) :subject ( ?= # ( String \" breakfast meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Elli \"),with_attendee(FindManager(FindManager(\" Elli \"))),has_subject(\" breakfast meeting \"),starts_at(NextDOW(\" SATURDAY \"))))","qid":"2cea1bcb-6643-49dd-bb74-faa97f1da96d.1"}
{"source":"Can you add a meeting with Sue 's manager next week ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Sue \" ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( NextWeekList ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Sue \")),starts_at(NextWeekList())))","qid":"705b0118-0830-4650-9981-292add5f583b.3"}
{"source":"make dinner with my team","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :subject ( ?= # ( String \" dinner \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),has_subject(\" dinner \")))","qid":"b9d3a8c5-b755-49b4-af42-9cc12b8762dc.0"}
{"source":"Schedule a dinner with my boss about our future business partners .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :subject ( ?= # ( String \" dinner \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),has_subject(\" dinner \")))","qid":"4933f385-0eb0-495d-93fc-7bef066cbead.0"}
{"source":"When the morning meeting ends I need to see Harriet 's team .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Harriet \" ) ) ) ) ) ) ) :start ( ?= ( :end ( singleton ( :results ( FindEventWrapperWithDefaults :constraint ( Constraint[Event] :subject ( ?~= # ( String \" morning meeting \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=\" Harriet \")),starts_at(:end(FindEvents(has_subject(\" morning meeting \"))))))","qid":"ef5c545a-47d4-4436-9315-724f98793808.2"}
{"source":"create meeting with boss on tuesday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),starts_at(NextDOW(\" TUESDAY \"))))","qid":"1c4e4071-27f6-4e69-b598-decaec2b086c.0"}
{"source":"Please make a meeting with Jesse and his skip tomorrow","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jesse \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jesse \" ) ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jesse \"),with_attendee(FindManager(FindManager(\" Jesse \"))),starts_at(Tomorrow())))","qid":"ad6cace1-eae2-4810-943d-436696e6e660.1"}
{"source":"make an event for next tuesday with Elli , her boss , Jake and his boss","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Elli \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Elli \" ) ) ) ) ) ) ) ) ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Elli \"),with_attendee(FindManager(\" Elli \")),with_attendee(\" Jake \"),with_attendee(FindManager(\" Jake \")),starts_at(NextDOW(\" TUESDAY \"))))","qid":"c567ef17-01c4-4eef-bad4-9cc0446da9ae.1"}
{"source":"Schedule Yearbook Club First Meeting with Shannon and her supervisor on August 16 th at 1 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Shannon \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Shannon \" ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( MD :day # ( Number 16 ) :month # ( Month \" AUGUST \" ) ) :time ( NumberPM :number # ( Number 1 ) ) ) ) :subject ( ?= # ( String \" Yearbook Club First Meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Shannon \"),with_attendee(FindManager(\" Shannon \")),has_subject(\" Yearbook Club First Meeting \"),starts_at(MD(month=\" AUGUST \",day=16)),starts_at(NumberPM(1))))","qid":"0b4b6ae3-4ed5-4870-9833-e089f60e0908.3"}
{"source":"I want to meet with Gregory 's manager tomorrow around noon .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Gregory \" ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( Noon ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Gregory \")),starts_at(Tomorrow()),starts_at(Noon())))","qid":"20d6881d-f2a9-4521-a857-7a5361dac67c.4"}
{"source":"I need a meeting with Jake , his manager , Elli and her manager","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) ( andConstraint ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Elli \" ) ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Elli \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Elli \")),with_attendee(\" Jake \"),with_attendee(FindManager(\" Jake \")),with_attendee(\" Elli \")))","qid":"34e953d4-4052-4881-b91a-1c8fa83ec8c9.0"}
{"source":"Add drinks with the team on Friday at 8 : 00 PM .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( NumberPM :number # ( Number 8 ) ) ) ) :subject ( ?= # ( String \" drinks \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),has_subject(\" drinks \"),starts_at(NextDOW(\" FRIDAY \")),starts_at(NumberPM(8))))","qid":"b0da0a23-6ae7-41c2-b1a7-b7592afe995c.3"}
{"source":"Add a meeting with Ryan and his boss .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Ryan \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Ryan \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Ryan \"),with_attendee(FindManager(\" Ryan \"))))","qid":"8bd9dc60-f92d-4338-a613-1427b1447bd8.0"}
{"source":"Please create a lunch with Sam , his boss , Nelly her boss to discuss the new contract .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Sam \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Sam \" ) ) ) ) ) ) ) ) ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Nelly \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Nelly \" ) ) ) ) ) ) ) ) ) :subject ( ?= # ( String \" lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Sam \"),with_attendee(FindManager(\" Sam \")),with_attendee(\" Nelly \"),with_attendee(FindManager(\" Nelly \")),has_subject(\" lunch \")))","qid":"3ca249d3-c784-43e6-a217-b1577f7c8166.2"}
{"source":"Schedule a meeting with bobs team after the lunch on Thursday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" bobs \" ) ) ) ) ) ) ) :start ( OnDateAfterTime :date ( NextDOW :dow # ( DayOfWeek \" THURSDAY \" ) ) :time ( Lunch ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=\" bobs \")),starts_at(OnDateAfterTime(date=NextDOW(\" THURSDAY \"),time=Lunch()))))","qid":"5cc6e434-fe04-4149-8f49-4bf3582d2717.2"}
{"source":"Make a meeting with my boss tomorrow at 5 am .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberAM :number # ( Number 5 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),starts_at(Tomorrow()),starts_at(NumberAM(5))))","qid":"fc1c7ef5-c0b1-4232-9973-f8c016939574.0"}
{"source":"make a coffee day with my boss ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :subject ( ?= # ( String \" coffee day \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),has_subject(\" coffee day \")))","qid":"b3e1367b-84a8-42c4-8f1a-e33d176b8c0e.3"}
{"source":"I have Medical Decision Discussion planned for tomorrow at 1 with Janice and her supervisor .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Janice \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Janice \" ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 1 ) ) ) ) :subject ( ?= # ( String \" Medical Decision Discussion \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Janice \"),with_attendee(FindManager(\" Janice \")),has_subject(\" Medical Decision Discussion \"),starts_at(Tomorrow()),starts_at(NumberPM(1))))","qid":"4dfda763-9149-4415-938f-7409014e7cb0.2"}
{"source":"make a dinner event with my coworkers","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :subject ( ?= # ( String \" dinner \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),has_subject(\" dinner \")))","qid":"6a63daff-2a4e-4dd0-a8f3-bd429f016b2f.0"}
{"source":"Create a budget meeting to discuss the kingdom expenses on Friday with Qyburn and his boss .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Qyburn \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Qyburn \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) ) ) :subject ( ?= # ( String \" budget meeting to discuss the kingdom expenses \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Qyburn \"),with_attendee(FindManager(\" Qyburn \")),has_subject(\" budget meeting to discuss the kingdom expenses \"),starts_at(NextDOW(\" FRIDAY \"))))","qid":"d2fd8ca4-5c93-4b48-8e6a-817f98628311.0"}
{"source":"I need to schedule a meeting with Tom 's boss .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Tom \" ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindManager(\" Tom \")))","qid":"f7f9cae1-91fa-4a49-b8de-eca5c84bd22e.1"}
{"source":"put dinner meeting with manager","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :subject ( ?= # ( String \" dinner meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),has_subject(\" dinner meeting \")))","qid":"ac5c5fba-3fa4-450b-9f23-8874a8d7f63b.0"}
{"source":"Schedule breakfast meeting with boss this Tuesday at 8 am .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) :time ( NumberAM :number # ( Number 8 ) ) ) ) :subject ( ?= # ( String \" breakfast meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),has_subject(\" breakfast meeting \"),starts_at(NextDOW(\" TUESDAY \")),starts_at(NumberAM(8))))","qid":"f82f85fe-cabe-4d7d-9071-69ac80bb250a.0"}
{"source":"Right after the orientation , set up a brunch and invite Scotty 's team .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Scotty \" ) ) ) ) ) ) ) :start ( ?= ( :end ( singleton ( :results ( FindEventWrapperWithDefaults :constraint ( Constraint[Event] :subject ( ?~= # ( String \" orientation \" ) ) ) ) ) ) ) ) :subject ( ?= # ( String \" brunch \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=\" Scotty \")),has_subject(\" brunch \"),starts_at(:end(FindEvents(has_subject(\" orientation \"))))))","qid":"5621a90d-01c3-40ce-b641-214a71048e99.4"}
{"source":"Set a date for a group meeting with Maria and her manager .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Maria \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Maria \" ) ) ) ) ) ) ) ) :subject ( ?= # ( String \" group meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Maria \"),with_attendee(FindManager(\" Maria \")),has_subject(\" group meeting \")))","qid":"a2f3fac9-4edb-4a47-a89b-1cc223bc3c2c.0"}
{"source":"My team needs a room in Berkeley .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :location ( andConstraint ( ?= # ( LocationKeyphrase \" Berkeley \" ) ) ( roomRequest ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),at_location(\" Berkeley \"),at_location(roomRequest())))","qid":"4d91ebc7-b0b7-4ea9-85a0-a081f221ea38.2"}
{"source":"create work conference with boss on friday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) ) ) :subject ( ?= # ( String \" work conference \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),has_subject(\" work conference \"),starts_at(NextDOW(\" FRIDAY \"))))","qid":"3249745a-8250-497a-82da-8dcc94a50473.0"}
{"source":"Make a meeting with Abby 's team","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindTeamOf(recipient=\" Abby \")))","qid":"de1670ac-b183-4b1a-9750-376cae725d1a.1"}
{"source":"Make an event for hanging out with co - workers from 6 - 8 pm tomorrow","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :end ( ?= ( TimeAfterDateTime :dateTime ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 6 ) ) ) :time ( NumberPM :number # ( Number 8 ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 6 ) ) ) ) :subject ( ?= # ( String \" hanging out \" ) ) ) ) ) )","target":"CreateEvent(AND(ends_at(AND(GE(DateTime?(date=Tomorrow(),time=NumberPM(6))),NumberPM(8))),with_attendee(FindTeamOf(recipient=CurrentUser())),has_subject(\" hanging out \"),starts_at(Tomorrow()),starts_at(NumberPM(6))))","qid":"80c53460-b220-4f0c-8f05-5a17751b380d.0"}
{"source":"I am going to see Abby and her boss tomorrow for Subjective Things","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) :subject ( ?= # ( String \" Subjective Things \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Abby \"),with_attendee(FindManager(\" Abby \")),has_subject(\" Subjective Things \"),starts_at(Tomorrow())))","qid":"d323f65a-fe1c-42b9-9ee4-2ec1290ad0d9.4"}
{"source":"schedule a meeting with Elli and her team next week .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Elli \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Elli \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( NextWeekList ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Elli \"),with_attendee(FindTeamOf(recipient=\" Elli \")),starts_at(NextWeekList())))","qid":"e18f92ac-a84b-4e7c-8174-ce53be91db05.0"}
{"source":"Can you make a meeting with Kim her boss with Abby and her Boss for next week ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim \" ) ) ) ) ) ) ) ) ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( NextWeekList ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Kim \"),with_attendee(FindManager(\" Kim \")),with_attendee(\" Abby \"),with_attendee(FindManager(\" Abby \")),starts_at(NextWeekList())))","qid":"6646fc66-4bfc-4b72-9758-b4afd28d715e.1"}
{"source":"Thanks , now schedule another meeting with Grace and her boss for next thursday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Grace \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Grace \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" THURSDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Grace \"),with_attendee(FindManager(\" Grace \")),starts_at(NextDOW(\" THURSDAY \"))))","qid":"5a47efa3-2f08-4107-a5f4-37f407b7e6c9.2"}
{"source":"Make a meeting with David Crim and his team","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" David Crim \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" David Crim \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" David Crim \"),with_attendee(FindTeamOf(recipient=\" David Crim \"))))","qid":"c322b0e8-a4cd-4d7f-b82f-056f2dfe0904.2"}
{"source":"Schedule a meeting with my boss tomorrow .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),starts_at(Tomorrow())))","qid":"1c695bdb-26a9-43e4-934f-cd5f906e9508.0"}
{"source":"lunch meeting with my team","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :subject ( ?= # ( String \" lunch meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),has_subject(\" lunch meeting \")))","qid":"4d04bbaa-0f12-43c7-af95-094721991f8c.3"}
{"source":"Hey lets make a meeting for next week with Jake and his manager with Elli and his manager .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) ( andConstraint ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Elli \" ) ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Elli \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( NextWeekList ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Elli \")),with_attendee(\" Jake \"),with_attendee(FindManager(\" Jake \")),with_attendee(\" Elli \"),starts_at(NextWeekList())))","qid":"1f8c9ffd-a2bb-454a-8db5-3596ba0747e3.0"}
{"source":"Have rehearsal with the team this Friday at 2 pm to 6 pm .","original_target":"( do ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :end ( ?= ( TimeAfterDateTime :dateTime ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( NumberPM :number # ( Number 2 ) ) ) :time ( NumberPM :number # ( Number 6 ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( NumberPM :number # ( Number 2 ) ) ) ) :subject ( ?= # ( String \" rehearsal \" ) ) ) ) ) ) )","target":"do(FindTeamOf(recipient=with_attendee(CurrentUser())),CreateEvent(AND(ends_at(AND(GE(DateTime?(date=NextDOW(\" FRIDAY \"),time=NumberPM(2))),NumberPM(6))),has_subject(\" rehearsal \"),starts_at(NextDOW(\" FRIDAY \")),starts_at(NumberPM(2)))))","qid":"eacea143-be4c-4132-8392-8b7ccd526a46.0"}
{"source":"Create an event for tomorrow at 8 AM . John and his supervisor will attend the meeting .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" John \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" John \" ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberAM :number # ( Number 8 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" John \"),with_attendee(FindManager(\" John \")),starts_at(Tomorrow()),starts_at(NumberAM(8))))","qid":"b01d7cb5-b577-42c3-bafb-00edbf8f927b.1"}
{"source":"Alright , now let 's find a time to meet Janet and her team on Thursday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Janet \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Janet \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" THURSDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Janet \"),with_attendee(FindTeamOf(recipient=\" Janet \")),starts_at(NextDOW(\" THURSDAY \"))))","qid":"709c2ecd-69ef-4251-b273-22da03c3c68a.2"}
{"source":"Make a meeting with Abby and her team for tomorrow night","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ) ) :start ( DateTimeConstraint :constraint ( Night ) :date ( Tomorrow ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Abby \"),with_attendee(FindTeamOf(recipient=\" Abby \")),starts_at(Night()),starts_at(Tomorrow())))","qid":"fbce2075-0d54-4b0c-8daa-381f1d95d0e3.0"}
{"source":"I need to schedule a meeting tomorrow with Ryan and his manager .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Ryan \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Ryan \" ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Ryan \")),with_attendee(\" Ryan \"),starts_at(Tomorrow())))","qid":"7125bbb0-3664-492d-acff-0105cd40151c.4"}
{"source":"Can you set me up a meeting with Jen and her boss ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jen \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jen \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jen \"),with_attendee(FindManager(\" Jen \"))))","qid":"53f39dc6-598d-45b5-b99f-2a55496f2826.0"}
{"source":"I want to set up a Brainstorming Meeting with Tyler and his manager for tomorrow .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Tyler \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Tyler \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) :subject ( ?= # ( String \" Brainstorming Meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Tyler \"),with_attendee(FindManager(\" Tyler \")),has_subject(\" Brainstorming Meeting \"),starts_at(Tomorrow())))","qid":"542effa7-8fca-4169-b498-5af64818a453.3"}
{"source":"I am going to be with Abby and her boss tomorrow from 3 to 5 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ) ) :end ( ?= ( TimeAfterDateTime :dateTime ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 3 ) ) ) :time ( NumberPM :number # ( Number 5 ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 3 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(ends_at(AND(GE(DateTime?(date=Tomorrow(),time=NumberPM(3))),NumberPM(5))),with_attendee(\" Abby \"),with_attendee(FindManager(\" Abby \")),starts_at(Tomorrow()),starts_at(NumberPM(3))))","qid":"ce485eec-90f8-4f40-a873-872f51141693.4"}
{"source":"put appointment my new boss","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindManager(CurrentUser())))","qid":"63a5b271-83ec-4f9a-87dd-2834351fefa3.2"}
{"source":"I need a meeting with Abby and her boss","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Abby \"),with_attendee(FindManager(\" Abby \"))))","qid":"005cf941-4ef4-4aeb-93e5-7be335ebbb23.2"}
{"source":"I NEED TO MEET JOEL 'S MANAGER","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" JOEL \" ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindManager(\" JOEL \")))","qid":"0d66fd01-408d-446a-9e00-76a7976f91cc.0"}
{"source":"Will I be having dinner with Hans , his boss , Fenny and her boss anytime this week ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Hans \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Hans \" ) ) ) ) ) ) ) ) ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Fenny \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Fenny \" ) ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ThisWeek ) ) :subject ( ?= # ( String \" dinner \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Hans \"),with_attendee(FindManager(\" Hans \")),with_attendee(\" Fenny \"),with_attendee(FindManager(\" Fenny \")),has_subject(\" dinner \"),starts_at(ThisWeek())))","qid":"fad08b6b-a76a-4259-a7d8-5dabf2c2113e.2"}
{"source":"Help in making an appointment with the staff tomorrow at 11 am","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindReports :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberAM :number # ( Number 11 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindReports(recipient=CurrentUser())),starts_at(Tomorrow()),starts_at(NumberAM(11))))","qid":"d2f0d8d0-b4a7-4ef1-b2cc-abc599052287.0"}
{"source":"I need to see Jack and their manager for a budget meeting this week","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jack \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jack \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ThisWeek ) ) :subject ( ?= # ( String \" budget meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jack \"),with_attendee(FindManager(\" Jack \")),has_subject(\" budget meeting \"),starts_at(ThisWeek())))","qid":"03aaa06f-0452-4190-8123-88a66f06bc0a.2"}
{"source":"Can you set up a lunch meeting with my boss tomorrow at noon ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( Noon ) ) ) :subject ( ?= # ( String \" lunch meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),has_subject(\" lunch meeting \"),starts_at(Tomorrow()),starts_at(Noon())))","qid":"b57b6916-71d4-44ac-a75c-d023260a0ea4.0"}
{"source":"Set up a call with my team Friday at 2","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( NumberPM :number # ( Number 2 ) ) ) ) :subject ( ?= # ( String \" call \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),has_subject(\" call \"),starts_at(NextDOW(\" FRIDAY \")),starts_at(NumberPM(2))))","qid":"3c1843dd-b309-4827-bf11-d682d255da1d.6"}
{"source":"Can you create a new meeting with my manager ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindManager(CurrentUser())))","qid":"3b80acd8-14f8-4e36-8d68-124bb631bbce.4"}
{"source":"ARRANGE MEETING WITH BOSS ON FRIDAY","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),starts_at(NextDOW(\" FRIDAY \"))))","qid":"e85a76fe-a67a-49bd-a820-b8515163baf5.0"}
{"source":"Please schedule a meeting with my direct reports on Friday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindReports :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindReports(recipient=CurrentUser())),starts_at(NextDOW(\" FRIDAY \"))))","qid":"e50bd9e0-972d-4e8a-8e87-17059043775a.4"}
{"source":"Schedule dinner with the team at 5 .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( NextTime :time ( NumberPM :number # ( Number 5 ) ) ) ) :subject ( ?= # ( String \" dinner \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),has_subject(\" dinner \"),starts_at(NextTime(time=NumberPM(5)))))","qid":"b52e657d-9176-4c7f-b294-5c31b69f0423.3"}
{"source":"Book a time to meet , one on one , with my manager .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :isOneOnOne ( ?= # ( Boolean true ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),is_oneOnOne()))","qid":"6553176e-9663-4d9c-a2e5-fbb127d7774c.0"}
{"source":"Schedule a sales meeting with Jake 's Manager 's Manager tomorrow .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) :subject ( ?= # ( String \" sales meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(FindManager(\" Jake \"))),has_subject(\" sales meeting \"),starts_at(Tomorrow())))","qid":"f6c5f14a-510f-4050-a394-8d6aca509339.2"}
{"source":"i will be with abby and her skip tomorrow at 4 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" abby \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" abby \" ) ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 4 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" abby \"),with_attendee(FindManager(FindManager(\" abby \"))),starts_at(Tomorrow()),starts_at(NumberPM(4))))","qid":"2d115525-6696-4ec0-a6f3-29f73a22200a.4"}
{"source":"Set up a review meeting with Sue and her boss","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Sue \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Sue \" ) ) ) ) ) ) ) ) :subject ( ?= # ( String \" review meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Sue \"),with_attendee(FindManager(\" Sue \")),has_subject(\" review meeting \")))","qid":"bc166f9c-95a7-4531-8803-7aafb87392e4.4"}
{"source":"Make a lunch with Kim Possible , Elli and their respective bosses this Week","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim Possible \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim Possible \" ) ) ) ) ) ) ) ) ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Elli \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Elli \" ) ) ) ) ) ) ) ) ) :subject ( ?= # ( String \" lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Kim Possible \"),with_attendee(FindManager(\" Kim Possible \")),with_attendee(\" Elli \"),with_attendee(FindManager(\" Elli \")),has_subject(\" lunch \")))","qid":"8cbc5022-88d0-48ca-94d5-a7e1e17370db.4"}
{"source":"I need a meeting with Kim and her boss","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Kim \"),with_attendee(FindManager(\" Kim \"))))","qid":"dbcd1ee7-4264-4091-953f-3014d23c7fba.4"}
{"source":"Make an event for Tuesday at 3 pm with my manager","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) :time ( NumberPM :number # ( Number 3 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),starts_at(NextDOW(\" TUESDAY \")),starts_at(NumberPM(3))))","qid":"dd115fb7-4520-46f2-bb22-2ecca6ccda1b.4"}
{"source":"Add Jennifer and her skip to a coffee meeting at 4 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jennifer \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jennifer \" ) ) ) ) ) ) ) ) ) :start ( ?= ( NextTime :time ( NumberPM :number # ( Number 4 ) ) ) ) :subject ( ?= # ( String \" coffee meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jennifer \"),with_attendee(FindManager(FindManager(\" Jennifer \"))),has_subject(\" coffee meeting \"),starts_at(NextTime(time=NumberPM(4)))))","qid":"3dc08096-2751-4d67-a05c-7747240c4dbf.2"}
{"source":"I need to set up something with my manager tuesday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),starts_at(NextDOW(\" TUESDAY \"))))","qid":"776ed93f-4552-49be-88ab-793cbcb54cd3.0"}
{"source":"Schedule a meeting with supervisor on thursday at 10 am","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" THURSDAY \" ) ) :time ( NumberAM :number # ( Number 10.0 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),starts_at(NextDOW(\" THURSDAY \")),starts_at(NumberAM(10))))","qid":"8b4e621d-5a31-4df5-b932-d795d64f3979.0"}
{"source":"Great . Make a team building event with Dan Morton 's team this weekend .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Dan Morton \" ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ThisWeekend ) ) :subject ( ?= # ( String \" team building \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=\" Dan Morton \")),has_subject(\" team building \"),starts_at(ThisWeekend())))","qid":"00e77679-ad06-4080-bfc1-83110762be8d.2"}
{"source":"Schedule a time with Elli Parker and her team","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Elli Parker \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Elli Parker \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Elli Parker \"),with_attendee(FindTeamOf(recipient=\" Elli Parker \"))))","qid":"2be8a28a-358f-4b98-a76d-299ae73bd48b.4"}
{"source":"Make me a meeting with Kim , her manager , Elli , and her manager","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim \" ) ) ) ) ) ) ) ) ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Elli \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Elli \" ) ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Kim \"),with_attendee(FindManager(\" Kim \")),with_attendee(\" Elli \"),with_attendee(FindManager(\" Elli \"))))","qid":"1e894659-72b9-4493-b9df-8fed2e77a6ee.2"}
{"source":"Fit in a meeting with Sam and his supervisor today","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Sam \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Sam \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Today ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Sam \"),with_attendee(FindManager(\" Sam \")),starts_at(Today())))","qid":"f2e36429-c94e-4ae1-9986-63ddd628ddd8.0"}
{"source":"I will be in Spain with my team all weekend","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :location ( ?= # ( LocationKeyphrase \" Spain \" ) ) :nonEmptyBase ( EventAllDayForDateRange :dateRange ( ThisWeekend ) :event ( Constraint[Event] ) ) ) ) ) )","target":"CreateEvent(AND(spans_time(ThisWeekend()),with_attendee(FindTeamOf(recipient=CurrentUser())),at_location(\" Spain \")))","qid":"80423fe8-5163-42b5-8696-c97c2211737a.2"}
{"source":"set up a meeting for friday with Jennifer and Elli and their bosses","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jennifer \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Elli \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jennifer \" ) ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Elli \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Elli \")),with_attendee(FindManager(\" Jennifer \")),with_attendee(\" Jennifer \"),with_attendee(\" Elli \"),starts_at(NextDOW(\" FRIDAY \"))))","qid":"920aa161-a29e-42a2-b3af-33893da4c21d.2"}
{"source":"Invite Daniel 's team to dinner after the presentation .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Daniel \" ) ) ) ) ) ) ) :start ( ?= ( :end ( singleton ( :results ( FindEventWrapperWithDefaults :constraint ( Constraint[Event] :subject ( ?~= # ( String \" presentation \" ) ) ) ) ) ) ) ) :subject ( ?= # ( String \" dinner \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=\" Daniel \")),has_subject(\" dinner \"),starts_at(:end(FindEvents(has_subject(\" presentation \"))))))","qid":"77024f1d-8cd4-4e18-a782-680deb62fe42.0"}
{"source":"Make me a dinner with my team but do not include Thanos","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) ( AttendeeListExcludesRecipient :recipient ( ?= ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Thanos \" ) ) ) ) ) ) ) ) :subject ( ?= # ( String \" dinner \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),avoid_attendee(refer(Recipient?(name=LIKE(Thanos)))),has_subject(\" dinner \")))","qid":"49905958-2066-42b1-8d64-1fc38fe4f927.2"}
{"source":"I need a meeting with the whole team next week sometime in the evening .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( andConstraint ( Constraint[DateTime] :date ( NextWeekList ) ) ( Constraint[DateTime] :time ( Evening ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(NextWeekList()),starts_at(Evening())))","qid":"982bca97-6d7b-4a6f-9682-3ba637a2c919.2"}
{"source":"Make a meeting with Lee 's boss called Salary Negotiation tomorrow at 9 am .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Lee \" ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberAM :number # ( Number 9 ) ) ) ) :subject ( ?= # ( String \" Salary Negotiation \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Lee \")),has_subject(\" Salary Negotiation \"),starts_at(Tomorrow()),starts_at(NumberAM(9))))","qid":"4b0c86fb-104f-41fa-bdc0-351e4ae44ab2.3"}
{"source":"Add a dinner event with David Lax and his reports for tomorrow night at 6 .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" David Lax \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindReports :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" David Lax \" ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 6 ) ) ) ) :subject ( ?= # ( String \" dinner event \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" David Lax \"),with_attendee(FindReports(recipient=refer(Recipient?(name=LIKE(David Lax))))),has_subject(\" dinner event \"),starts_at(Tomorrow()),starts_at(NumberPM(6))))","qid":"861bfcef-72cd-491a-a1f8-0e4fc2b55d2b.4"}
{"source":"Schedule a lunch with my boss around noon today","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( AroundDateTime :dateTime ( DateAtTimeWithDefaults :date ( Today ) :time ( Noon ) ) ) :subject ( ?= # ( String \" lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),has_subject(\" lunch \"),starts_at(AroundDateTime(dateTime=DateTime?(date=Today(),time=Noon())))))","qid":"9f717c8a-3d83-4dbd-9354-4da688bf447c.0"}
{"source":"Set up a meeting with Abby and her skip Friday morning","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ) ) ) :start ( DateTimeConstraint :constraint ( Morning ) :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Abby \"),with_attendee(FindManager(FindManager(\" Abby \"))),starts_at(Morning()),starts_at(NextDOW(\" FRIDAY \"))))","qid":"e12cb091-bdb6-461e-81d2-17139bfb565a.4"}
{"source":"Create a new meeting with Ben and Brad and their bosses .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Ben \" ) ) ) ) ) ) ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Brad \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Ben \" ) ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Brad \" ) ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Ben \"),with_attendee(FindManager(\" Brad \")),with_attendee(\" Brad \"),with_attendee(FindManager(\" Ben \"))))","qid":"ba296128-4e20-4a24-8998-6af70b0cbebb.1"}
{"source":"Can you make an appointment with my boss ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindManager(CurrentUser())))","qid":"69a033a3-1a24-4eb9-93c1-5dddf9432619.0"}
{"source":"Add Build Legos with Elli , her boss , Jake and his boss","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Elli \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Elli \" ) ) ) ) ) ) ) ) ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) ) ) ) :subject ( ?= # ( String \" Build Legos \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Elli \"),with_attendee(FindManager(\" Elli \")),with_attendee(\" Jake \"),with_attendee(FindManager(\" Jake \")),has_subject(\" Build Legos \")))","qid":"f8c683da-0d6a-4212-a97f-95e67b0a4bf5.2"}
{"source":"Make a meeting with Kim 's team and remove Watts","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim \" ) ) ) ) ) ) ) ( AttendeeListExcludesRecipient :recipient ( ?= ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Watts \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=\" Kim \")),avoid_attendee(refer(Recipient?(name=LIKE(Watts))))))","qid":"01b2b214-06b0-4bd6-b58c-386599125d0d.0"}
{"source":"make an appointment with John 's boss at today 7 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" John \" ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Today ) :time ( NumberPM :number # ( Number 7 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" John \")),starts_at(Today()),starts_at(NumberPM(7))))","qid":"dfcefb04-89c0-4ea4-90d2-e5b767b7412b.0"}
{"source":"Please make another meeting with Abby and her skip next week","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( NextWeekList ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Abby \"),with_attendee(FindManager(FindManager(\" Abby \"))),starts_at(NextWeekList())))","qid":"7b57906a-7265-46d8-a208-699c5614a81e.2"}
{"source":"Add to schedule hiring presentation with Joe and his boss on Friday at 2 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Joe \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Joe \" ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( NumberPM :number # ( Number 2 ) ) ) ) :subject ( ?= # ( String \" hiring presentation \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Joe \"),with_attendee(FindManager(\" Joe \")),has_subject(\" hiring presentation \"),starts_at(NextDOW(\" FRIDAY \")),starts_at(NumberPM(2))))","qid":"f002a381-e55c-45ea-8423-2cc8027df0df.3"}
{"source":"Hey there - I need to take my manager to lunch next Friday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) ) ) :subject ( ?= # ( String \" lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),has_subject(\" lunch \"),starts_at(NextDOW(\" FRIDAY \"))))","qid":"4170359b-1dbb-4193-b864-c48fcee918b7.0"}
{"source":"Can you add a meeting with David and his report Thursday at noon ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" David \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" David \" ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" THURSDAY \" ) ) :time ( Noon ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" David \"),with_attendee(FindManager(\" David \")),starts_at(NextDOW(\" THURSDAY \")),starts_at(Noon())))","qid":"76f6d1ff-26c1-4039-841d-26497e6c3c5e.3"}
{"source":"Great . After the happy hour , I need to see Jim 's team .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jim \" ) ) ) ) ) ) ) :start ( ?= ( :end ( singleton ( :results ( FindEventWrapperWithDefaults :constraint ( Constraint[Event] :subject ( ?~= # ( String \" happy hour \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=\" Jim \")),starts_at(:end(FindEvents(has_subject(\" happy hour \"))))))","qid":"50b04838-96f6-4224-8bcb-21fcc828fde8.4"}
{"source":"I will be with my team for 3 days starting tomorrow","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :nonEmptyBase ( EventAllDayStartingDateForPeriod :event ( Constraint[Event] ) :period ( toDays # ( Number 3 ) ) :startDate ( Tomorrow ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),has_duration(toDays(3)),starts_at(Tomorrow()),starts_at(Time(hour=0,minute=0))))","qid":"47a0db27-b624-4a39-87fc-f9423c120b28.0"}
{"source":"Add a meeting on Thursday with my manager , gon na be all day","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :nonEmptyBase ( EventAllDayOnDate :date ( NextDOW :dow # ( DayOfWeek \" THURSDAY \" ) ) :event ( Constraint[Event] ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),spans_time(NextDOW(\" THURSDAY \"))))","qid":"126e3414-c917-47ba-85f3-954a13ec571d.2"}
{"source":"I need to meet my team in a room at NERD for Sat at 11 am .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :location ( andConstraint ( ?= # ( LocationKeyphrase \" NERD \" ) ) ( roomRequest ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" SATURDAY \" ) ) :time ( NumberAM :number # ( Number 11 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),at_location(\" NERD \"),at_location(roomRequest()),starts_at(NextDOW(\" SATURDAY \")),starts_at(NumberAM(11))))","qid":"2a672595-0dd1-4d52-b971-c4ffc6b29d41.4"}
{"source":"I need to be with my team tomorrow","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(Tomorrow())))","qid":"2a17bd2d-a0d3-44ca-8827-813e8f9bba81.0"}
{"source":"I need a meeting to talk about the performance appraisal process with my boss at 8 am on Monday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :time ( NumberAM :number # ( Number 8 ) ) ) ) :subject ( ?= # ( String \" performance appraisal process \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),has_subject(\" performance appraisal process \"),starts_at(NextDOW(\" MONDAY \")),starts_at(NumberAM(8))))","qid":"2f9cce96-6581-4c8e-a7ca-62db1fe9177b.0"}
{"source":"I want to set up a meeting this Friday at 11 AM with Julie and her manager Dan","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Julie \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Julie \" ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( NumberAM :number # ( Number 11 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Julie \"),with_attendee(FindManager(\" Julie \")),starts_at(NextDOW(\" FRIDAY \")),starts_at(NumberAM(11))))","qid":"01428b37-21c9-4661-a598-2edd90d04425.3"}
{"source":"create work conference on saturday at 3 and invite my manager","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" SATURDAY \" ) ) :time ( NumberPM :number # ( Number 3 ) ) ) ) :subject ( ?= # ( String \" work conference \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),has_subject(\" work conference \"),starts_at(NextDOW(\" SATURDAY \")),starts_at(NumberPM(3))))","qid":"fa6c9f66-0966-4959-a0be-33ffc83795d7.0"}
{"source":"Add dinner with team to my calendar tomorrow at 6 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 6 ) ) ) ) :subject ( ?= # ( String \" dinner \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),has_subject(\" dinner \"),starts_at(Tomorrow()),starts_at(NumberPM(6))))","qid":"ed53b68e-18c6-4e05-9b48-e18a6acc99da.3"}
{"source":"Make a dinner with my team and make sure Abby is not there","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) ( AttendeeListExcludesRecipient :recipient ( ?= ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ) ) :subject ( ?= # ( String \" dinner \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),avoid_attendee(refer(Recipient?(name=LIKE(Abby)))),has_subject(\" dinner \")))","qid":"cc7c92c2-6360-43e2-a26c-8e93a3c2c462.0"}
{"source":"Make a meeting with Watts team","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Watts \" ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindTeamOf(recipient=\" Watts \")))","qid":"151fb80d-f831-440e-b07d-48f7ad3c5f5a.4"}
{"source":"When I return from golfing I need to see Kadence and her team .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kadence \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kadence \" ) ) ) ) ) ) ) ) :start ( ?= ( :end ( singleton ( :results ( FindEventWrapperWithDefaults :constraint ( Constraint[Event] :subject ( ?~= # ( String \" golfing \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Kadence \"),with_attendee(FindTeamOf(recipient=\" Kadence \")),starts_at(:end(FindEvents(has_subject(\" golfing \"))))))","qid":"b00b4447-caa8-4316-b715-8ac031de8726.2"}
{"source":"Thanks , now set a training session with Jesse Rosenfeld 's team on the 21 st","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jesse Rosenfeld \" ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( nextDayOfMonth ( Today ) # ( Number 21 ) ) ) ) :subject ( ?= # ( String \" training session \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=\" Jesse Rosenfeld \")),has_subject(\" training session \"),starts_at(nextDayOfMonth(Today(),21))))","qid":"eba6b4af-d1ce-46a5-ac0c-0d8438368cca.3"}
{"source":"Also schedule a meeting with Jeri 's manager at 3 : 00 Tuesday as well .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jeri \" ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) :time ( NumberPM :number # ( Number 3 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Jeri \")),starts_at(NextDOW(\" TUESDAY \")),starts_at(NumberPM(3))))","qid":"db147f51-735c-4ee5-8cd4-dfbb5275dcd4.3"}
{"source":"Create a new meeting with Catalina and her manager at 1 : 15 pm on Tuesday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Catalina \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Catalina \" ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) :time ( HourMinutePm :hours # ( Number 1 ) :minutes # ( Number 15 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Catalina \"),with_attendee(FindManager(\" Catalina \")),starts_at(NextDOW(\" TUESDAY \")),starts_at(HourMinutePm(hours=1,minutes=15))))","qid":"19621044-a5ac-4d97-8a20-74cae6affa73.2"}
{"source":"Good , now add brunch with Paula and her boss","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Paula \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Paula \" ) ) ) ) ) ) ) ) :subject ( ?= # ( String \" brunch \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Paula \"),with_attendee(FindManager(\" Paula \")),has_subject(\" brunch \")))","qid":"90838099-2615-4433-8b18-a9103231ffeb.4"}
{"source":"I need to have a lunch date with my boss tomorrow","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) :subject ( ?= # ( String \" lunch date \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),has_subject(\" lunch date \"),starts_at(Tomorrow())))","qid":"25ed0714-68b5-4a33-85e1-667183c78c77.0"}
{"source":"Also setup up a lunch meeting for Friday with Kim Possible and her team","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim Possible \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim Possible \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) ) ) :subject ( ?= # ( String \" lunch meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Kim Possible \"),with_attendee(FindTeamOf(recipient=\" Kim Possible \")),has_subject(\" lunch meeting \"),starts_at(NextDOW(\" FRIDAY \"))))","qid":"ef680676-7d1a-4bf4-b018-c6540d1586e6.2"}
{"source":"schedule a co - worker sync next monday with my team","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) ) ) :subject ( ?= # ( String \" co-worker sync \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),has_subject(\" co_worker sync \"),starts_at(NextDOW(\" MONDAY \"))))","qid":"54fc80f9-efb9-4266-9cfa-7c7d0660f672.6"}
{"source":"Let 's add a meeting at 3 PM with my manager for today","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Today ) :time ( NumberPM :number # ( Number 3 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),starts_at(Today()),starts_at(NumberPM(3))))","qid":"c6c6a3ac-9ce6-40db-99fd-53aaba291708.4"}
{"source":"Can you schedule my meeting with Sarumon and his boss next Wednesday at Orthanc ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Sarumon \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Sarumon \" ) ) ) ) ) ) ) ) :location ( ?= # ( LocationKeyphrase \" Orthanc \" ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" WEDNESDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Sarumon \"),with_attendee(FindManager(\" Sarumon \")),at_location(\" Orthanc \"),starts_at(NextDOW(\" WEDNESDAY \"))))","qid":"78092e01-b2fe-43da-b432-e01d3bf29f4b.3"}
{"source":"Create an Event with the reports of David Lax","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindReports :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" David Lax \" ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindReports(recipient=refer(Recipient?(name=LIKE(David Lax))))))","qid":"d0274521-eb64-4fc8-904a-fe817c47e870.4"}
{"source":"I will be meeting Dan Marton , Cain , and their respective bosses this Tuesday . Please set it up and invite them .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Dan Marton \" ) ) ) ) ) ) ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Cain \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Dan Marton \" ) ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Cain \" ) ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Dan Marton \"),with_attendee(FindManager(\" Cain \")),with_attendee(\" Cain \"),with_attendee(FindManager(\" Dan Marton \")),starts_at(NextDOW(\" TUESDAY \"))))","qid":"070831c4-56bf-4815-af39-9d426178489d.2"}
{"source":"Make a meeting with my manager","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindManager(CurrentUser())))","qid":"984a2f32-0188-4b1d-908a-587d9588b638.0"}
{"source":"Schedule a meeting with Kim and her reports for Saturday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindReports :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" SATURDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Kim \"),with_attendee(FindReports(recipient=refer(Recipient?(name=LIKE(Kim))))),starts_at(NextDOW(\" SATURDAY \"))))","qid":"11fb1828-05e8-4cc2-915d-41d307f3b86b.2"}
{"source":"Schedule a prep with JR and megan at noon today and make sure their bosses are on it","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" JR \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" megan \" ) ) ) ) ) ) ) ( andConstraint ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" JR \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" megan \" ) ) ) ) ) ) ) ) ) :subject ( ?= # ( String \" prep \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" JR \"),with_attendee(\" megan \"),with_attendee(FindManager(\" JR \")),with_attendee(FindManager(\" megan \")),has_subject(\" prep \")))","qid":"3ca249d3-c784-43e6-a217-b1577f7c8166.1"}
{"source":"Make a meal with just Abby and all of Kim 's team","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim \" ) ) ) ) ) ) ) ) :subject ( ?= # ( String \" meal \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Abby \"),with_attendee(FindTeamOf(recipient=\" Kim \")),has_subject(\" meal \")))","qid":"a58adccd-e433-4e15-b487-1ce995b9f7b9.0"}
{"source":"Set a meeting with Kim 's reports tomorrow","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindReports :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim \" ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindReports(recipient=refer(Recipient?(name=LIKE(Kim))))),starts_at(Tomorrow())))","qid":"a7961531-b005-4a05-b292-bd2eed5de3e4.1"}
{"source":"Create Brainstorming Plan with Jaina and her boss for July 18 th at 5 PM .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jaina \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jaina \" ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( MD :day # ( Number 18 ) :month # ( Month \" JULY \" ) ) :time ( NumberPM :number # ( Number 5 ) ) ) ) :subject ( ?= # ( String \" Brainstorming Plan \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jaina \"),with_attendee(FindManager(\" Jaina \")),has_subject(\" Brainstorming Plan \"),starts_at(MD(month=\" JULY \",day=18)),starts_at(NumberPM(5))))","qid":"18201c0b-a0b3-403e-a778-70b5c932b709.3"}
{"source":"Can you set up a lunch with David Lax and his team for next week ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" David Lax \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" David Lax \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( NextWeekList ) ) :subject ( ?= # ( String \" lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" David Lax \"),with_attendee(FindTeamOf(recipient=\" David Lax \")),has_subject(\" lunch \"),starts_at(NextWeekList())))","qid":"5f879bdd-2515-410c-9c15-2a49f943969c.3"}
{"source":"Cool . Can you put a catch up meeting with Abby and Abby 's boss for an hour tomorrow ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ) ) :duration ( ?= ( toHours # ( Number 1 ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) :subject ( ?= # ( String \" catch up meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Abby \"),with_attendee(FindManager(\" Abby \")),has_subject(\" catch up meeting \"),starts_at(Tomorrow()),has_duration(toHours(1))))","qid":"2b3719ff-6b15-4fb5-b207-dd0ad8f626ae.3"}
{"source":"Please set a meeting with Boza 's boss tomorrow at 6 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Boza \" ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 6 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Boza \")),starts_at(Tomorrow()),starts_at(NumberPM(6))))","qid":"fc68d63c-0b81-4c96-aadb-0543a3d9f99d.0"}
{"source":"Yes , schedule me for lunch with my boss Friday at 1 p.m. and show me as busy during that time .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :showAs ( ?= # ( ShowAsStatus \" Busy \" ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( NumberPM :number # ( Number 1 ) ) ) ) :subject ( ?= # ( String \" lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(has_status(ShowAsStatus(\" Busy \")),with_attendee(FindManager(CurrentUser())),has_subject(\" lunch \"),starts_at(NextDOW(\" FRIDAY \")),starts_at(NumberPM(1))))","qid":"d559b990-7520-47f1-8879-aea3e1ad385d.0"}
{"source":"Can you schedule a meeting with the reports tomorrow at 2 ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindReports :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 2 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindReports(recipient=CurrentUser())),starts_at(Tomorrow()),starts_at(NumberPM(2))))","qid":"62165005-f9a8-4818-922b-e7146c4c6822.2"}
{"source":"I 'll be seeing my supervisor at 4 today .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Today ) :time ( NumberPM :number # ( Number 4 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),starts_at(Today()),starts_at(NumberPM(4))))","qid":"689a01bc-0c92-4f81-972e-a06b687cf019.0"}
{"source":"Please try again . Schedule a meeting with the boss 's boss of Dan Schoffel .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Dan Schoffel \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindManager(FindManager(\" Dan Schoffel \"))))","qid":"4e2f164c-a3ff-49bb-8647-fa1d1101da8a.1"}
{"source":"Schedule a meeting with my team for Friday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(NextDOW(\" FRIDAY \"))))","qid":"5cf23ccf-5b06-4ce9-a8fd-d07aa71de29c.0"}
{"source":"Meeting with Abby Gonano and her team .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby Gonano \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby Gonano \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Abby Gonano \"),with_attendee(FindTeamOf(recipient=\" Abby Gonano \"))))","qid":"926a7b6d-a4f7-4370-9d3b-25c623f8f98d.2"}
{"source":"Set up a race with Abby Gonano and team","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby Gonano \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby Gonano \" ) ) ) ) ) ) ) ) :subject ( ?= # ( String \" race \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Abby Gonano \"),with_attendee(FindTeamOf(recipient=\" Abby Gonano \")),has_subject(\" race \")))","qid":"2cc71580-b634-434e-9865-74dcdea97343.3"}
{"source":"I 'd like to meet with Dan Schoffel 's reports tomorrow .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindReports :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Dan Schoffel \" ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindReports(recipient=refer(Recipient?(name=LIKE(Dan Schoffel))))),starts_at(Tomorrow())))","qid":"cec5b280-efad-4fbb-82be-3d15b1330458.0"}
{"source":"Robert and his manager will be here for a meeting at 3 pm tomorrow","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Robert \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Robert \" ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 3 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Robert \"),with_attendee(FindManager(\" Robert \")),starts_at(Tomorrow()),starts_at(NumberPM(3))))","qid":"c165287b-98fb-4ac5-bb93-8e271f6ef471.0"}
{"source":"I will be with my team for the next 100 days to celebrate REno starting tomorrow","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :nonEmptyBase ( EventAllDayStartingDateForPeriod :event ( Constraint[Event] :subject ( ?= # ( String \" celebrate REno \" ) ) ) :period ( toDays # ( Number 100.0 ) ) :startDate ( Tomorrow ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),has_subject(\" celebrate REno \"),has_duration(toDays(100)),starts_at(Tomorrow()),starts_at(Time(hour=0,minute=0))))","qid":"1d2c5c5a-64ab-44e9-b2cd-773d66fe3a70.2"}
{"source":"Make a meeting with my team but do nt invite abby","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) ( AttendeeListExcludesRecipient :recipient ( ?= ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" abby \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),avoid_attendee(refer(Recipient?(name=LIKE(abby))))))","qid":"de29acdc-f5ad-4e82-a262-d9d343383b8d.0"}
{"source":"Make a meeting with Kim Possible and her manager","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim Possible \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim Possible \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Kim Possible \"),with_attendee(FindManager(\" Kim Possible \"))))","qid":"1a923438-5ce0-48ff-a7fa-269285f4a189.1"}
{"source":"Create a meeting in the afternoon on Monday with Kim Possible 's team","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim Possible \" ) ) ) ) ) ) ) :start ( DateTimeConstraint :constraint ( Afternoon ) :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=\" Kim Possible \")),starts_at(Afternoon()),starts_at(NextDOW(\" MONDAY \"))))","qid":"2343ade4-8324-4046-9019-0fe11c9f419c.3"}
{"source":"I need to meet with boss at 5","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( NextTime :time ( NumberPM :number # ( Number 5 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),starts_at(NextTime(time=NumberPM(5)))))","qid":"b373afcb-dc36-4851-8304-1f6b2d24c031.0"}
{"source":"Please book a meeting for tomorrow with Sarah 's manager .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Sarah \" ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Sarah \")),starts_at(Tomorrow())))","qid":"d8523c03-d727-4544-b153-d772856944cd.0"}
{"source":"I need to have a meeting with Joe and his manager monday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Joe \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Joe \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Joe \"),with_attendee(FindManager(\" Joe \")),starts_at(NextDOW(\" MONDAY \"))))","qid":"31640b89-ddf7-42ef-b2d5-d0ba77700f37.0"}
{"source":"Make a meeting with Kim 's reports for next week .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindReports :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim \" ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( NextWeekList ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindReports(recipient=refer(Recipient?(name=LIKE(Kim))))),starts_at(NextWeekList())))","qid":"4eea89cd-9a7e-4724-910a-a5ab1160087f.2"}
{"source":"Thanks , now can you set up a meeting with Jenny 's manager at 10 am ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jenny \" ) ) ) ) ) ) ) :start ( ?= ( NextTime :time ( NumberAM :number # ( Number 10.0 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Jenny \")),starts_at(NextTime(time=NumberAM(10)))))","qid":"0fb6aa6b-7210-4f87-8959-b6b662f9112d.2"}
{"source":"Add a woodworking workshop with Woody and his boss tomorrow at 4 .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Woody \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Woody \" ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 4 ) ) ) ) :subject ( ?= # ( String \" woodworking workshop \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Woody \"),with_attendee(FindManager(\" Woody \")),has_subject(\" woodworking workshop \"),starts_at(Tomorrow()),starts_at(NumberPM(4))))","qid":"588b12a4-5939-41c2-b427-5ea45c542a72.3"}
{"source":"Create a meeting with Tyler and his boss for tomorrow .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Tyler \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Tyler \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Tyler \"),with_attendee(FindManager(\" Tyler \")),starts_at(Tomorrow())))","qid":"f8c4a402-345b-45e9-92ef-f8151be90d75.4"}
{"source":"create meeting with my boss","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindManager(CurrentUser())))","qid":"ce3a35fb-a89b-4527-be50-6a8eeca49b7c.0"}
{"source":"Book a meeting with Jackie and her manager this weekend .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jackie \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jackie \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ThisWeekend ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jackie \"),with_attendee(FindManager(\" Jackie \")),starts_at(ThisWeekend())))","qid":"7fedb6c3-00ff-45db-aae5-f722474ebff6.0"}
{"source":"Schedule a meeting with my manager at 1300 tomorrow .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( HourMinuteMilitary :hours # ( Number 13 ) :minutes # ( Number 0 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),starts_at(Tomorrow()),starts_at(HourMinuteMilitary(hours=13,minutes=0))))","qid":"3a658e4d-4a63-4cb2-b8c3-4b960435f8ae.1"}
{"source":"Schedule a meeting with Abby and her team on Wednesday at 3 : 00 PM .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" WEDNESDAY \" ) ) :time ( NumberPM :number # ( Number 3 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Abby \"),with_attendee(FindTeamOf(recipient=\" Abby \")),starts_at(NextDOW(\" WEDNESDAY \")),starts_at(NumberPM(3))))","qid":"cd918cac-8aa6-4554-9a88-8d244e8bb6ac.2"}
{"source":"Create an event on my calendar and invite Samson , his boss , Samuel and his boss .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Samson \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Samson \" ) ) ) ) ) ) ) ) ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Samuel \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Samuel \" ) ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Samson \"),with_attendee(FindManager(\" Samson \")),with_attendee(\" Samuel \"),with_attendee(FindManager(\" Samuel \"))))","qid":"c2ad3536-74e9-4e64-8072-b8154ca6d687.2"}
{"source":"I need to schedule a one hour meeting with my manager as soon as possible .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :duration ( ?= ( toHours # ( Number 1 ) ) ) :start ( ?= ( Now ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),starts_at(Now()),has_duration(toHours(1))))","qid":"1e13d6dc-f4ec-4ccc-aaa3-55115f1efac5.0"}
{"source":"Please make a meeting with my team tomorrow at noon","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( Noon ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(Tomorrow()),starts_at(Noon())))","qid":"248b4040-5b08-47c7-8fe0-19a2b01e0401.1"}
{"source":"I actually need to meet with Annabelle 's boss at 10 on friday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Annabelle \" ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( NumberAM :number # ( Number 10.0 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Annabelle \")),starts_at(NextDOW(\" FRIDAY \")),starts_at(NumberAM(10))))","qid":"2ae979a0-3730-4398-9ee5-420ee7c1a737.4"}
{"source":"Add a meeting with my manager Wednesday at 11 am","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" WEDNESDAY \" ) ) :time ( NumberAM :number # ( Number 11 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),starts_at(NextDOW(\" WEDNESDAY \")),starts_at(NumberAM(11))))","qid":"4bce867e-e217-4008-a96f-8ef10d670a98.3"}
{"source":"Could you make me a meeting with Abby , Kim , and Kim 's manager ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim \" ) ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Abby \"),with_attendee(\" Kim \"),with_attendee(FindManager(\" Kim \"))))","qid":"8e6fcfa8-026a-41df-898b-86fead88ca10.0"}
{"source":"Please create a meeting for tomorrow with Lindsay 's manager .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Lindsay \" ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Lindsay \")),starts_at(Tomorrow())))","qid":"9dc662ee-40a8-482d-823c-5e9daaa201a2.0"}
{"source":"Can you book lunch with Rachelle 's boss after my appointment ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Rachelle \" ) ) ) ) ) ) ) :start ( ?= ( :end ( singleton ( :results ( FindEventWrapperWithDefaults :constraint ( Constraint[Event] :subject ( ?~= # ( String \" appointment \" ) ) ) ) ) ) ) ) :subject ( ?= # ( String \" lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Rachelle \")),has_subject(\" lunch \"),starts_at(:end(FindEvents(has_subject(\" appointment \"))))))","qid":"dc2cd9e6-e6c3-4aed-888d-1bfdbef8217b.4"}
{"source":"Can you tell my staff to come to a meeting tomorrow at noon for one hour ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindReports :recipient ( toRecipient ( CurrentUser ) ) ) ) :duration ( ?= ( toHours # ( Number 1 ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( Noon ) ) ) :subject ( ?= # ( String \" staff \" ) ) ) ) ) )","target":"CreateEvent(AND(has_duration(toHours(1)),with_attendee(FindReports(recipient=CurrentUser())),has_subject(\" staff \"),starts_at(Tomorrow()),starts_at(Noon())))","qid":"f7185cdc-ffa4-44a4-88d2-af2261fde513.2"}
{"source":"I need a lunch meeting with my reports Sunday at 3 .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindReports :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" SUNDAY \" ) ) :time ( NumberPM :number # ( Number 3 ) ) ) ) :subject ( ?= # ( String \" lunch meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindReports(recipient=CurrentUser())),has_subject(\" lunch meeting \"),starts_at(NextDOW(\" SUNDAY \")),starts_at(NumberPM(3))))","qid":"6af8f2c7-783c-4dc0-95c1-948fbb26403d.4"}
{"source":"Make me a meeting with Jennifer , her boss , David Lax , and his boss","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jennifer \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jennifer \" ) ) ) ) ) ) ) ) ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" David Lax \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" David Lax \" ) ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jennifer \"),with_attendee(FindManager(\" Jennifer \")),with_attendee(\" David Lax \"),with_attendee(FindManager(\" David Lax \"))))","qid":"d5571e65-c4da-45e8-9c07-af0d2c2b6a98.0"}
{"source":"please make me a team bonding event around 8 pm with my team","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :time ( TimeAround :time ( NumberPM :number # ( Number 8 ) ) ) ) :subject ( ?= # ( String \" team bonding \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),has_subject(\" team bonding \"),starts_at(TimeAround(NumberPM(8)))))","qid":"22b63c3e-306e-4d39-ad38-51cdc028cc41.1"}
{"source":"I need to meet with james 's manager","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" james \" ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindManager(\" james \")))","qid":"8da555fe-c18d-402c-bdba-545094a45b57.3"}
{"source":"Schedule a meeting with Kim 's boss 's boss next Monday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(FindManager(\" Kim \"))),starts_at(NextDOW(\" MONDAY \"))))","qid":"63fed0c4-60ca-4f91-a245-a5f0e72ac27d.1"}
{"source":"Schedule breakfast meeting with boss this Tuesday at 8 am .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) :time ( NumberAM :number # ( Number 8 ) ) ) ) :subject ( ?= # ( String \" breakfast meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),has_subject(\" breakfast meeting \"),starts_at(NextDOW(\" TUESDAY \")),starts_at(NumberAM(8))))","qid":"7c167aac-1736-46f8-a607-40f0d040a16c.0"}
{"source":"Make a lunch with Abby and Crim 's team","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ) ) :subject ( ?= # ( String \" lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Abby \"),with_attendee(FindTeamOf(recipient=\" Abby \")),has_subject(\" lunch \")))","qid":"f118d41f-0f80-4ece-baa9-e80cfb1d872d.1"}
{"source":"Thanks , now I also need a meeting on the 1 st with my team","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( nextDayOfMonth ( Today ) # ( Number 1 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(nextDayOfMonth(Today(),1))))","qid":"76e500ca-e4e8-4842-b9d3-6743b5cf4352.2"}
{"source":"Make me an appointment with the team for Tuesday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(NextDOW(\" TUESDAY \"))))","qid":"b60880a6-3f5e-4276-9ce5-240ecba48b79.0"}
{"source":"create an event with sherin 's supervisor","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" sherin \" ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindManager(\" sherin \")))","qid":"bbfbce36-355a-4ffa-b529-4278afd8b4db.0"}
{"source":"Create a meeting with my manager tomorrow around 2 PM","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 2 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),starts_at(Tomorrow()),starts_at(NumberPM(2))))","qid":"ff246190-3581-44e2-9559-01c5e044c1c2.3"}
{"source":"Schedule a meeting with Hannah and her boss for July 24 th at 1 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Hannah \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Hannah \" ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( MD :day # ( Number 24 ) :month # ( Month \" JULY \" ) ) :time ( NumberPM :number # ( Number 1 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Hannah \"),with_attendee(FindManager(\" Hannah \")),starts_at(MD(month=\" JULY \",day=24)),starts_at(NumberPM(1))))","qid":"24fdcc40-f92d-47cb-bf38-c9eae76eacc4.4"}
{"source":"Make a new meeting with Jesse and their team .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jesse \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jesse \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jesse \"),with_attendee(FindTeamOf(recipient=\" Jesse \"))))","qid":"1d05cdbf-df21-4361-ad92-be1ec4b169d5.0"}
{"source":"Have a private meeting with my supervisor for this week .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ThisWeek ) ) :subject ( ?= # ( String \" private meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),has_subject(\" private meeting \"),starts_at(ThisWeek())))","qid":"c3be0acc-eb63-4ec0-9c36-c26f20d0c079.0"}
{"source":"Create a lunch appointment with Kim 's team and include Elli as well","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Elli \" ) ) ) ) ) ) ) :subject ( ?= # ( String \" lunch appointment \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=\" Kim \")),with_attendee(\" Elli \"),has_subject(\" lunch appointment \")))","qid":"cc7c92c2-6360-43e2-a26c-8e93a3c2c462.2"}
{"source":"make a lunch with Tom and his manager for friday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Tom \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Tom \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) ) ) :subject ( ?= # ( String \" lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Tom \"),with_attendee(FindManager(\" Tom \")),has_subject(\" lunch \"),starts_at(NextDOW(\" FRIDAY \"))))","qid":"c165287b-98fb-4ac5-bb93-8e271f6ef471.4"}
{"source":"Set up a meeting with Liz , Kim and Kim 's skip tomorrow","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Liz \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim \" ) ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(FindManager(\" Kim \"))),with_attendee(\" Liz \"),with_attendee(\" Kim \"),starts_at(Tomorrow())))","qid":"abbfa798-953b-431d-b529-5847c4a331eb.0"}
{"source":"set up a meeting with both of David Crim 's reports today","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindReports :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" David Crim \" ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Today ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindReports(recipient=refer(Recipient?(name=LIKE(David Crim))))),starts_at(Today())))","qid":"9ebb2b5b-de09-4953-a82a-79b0f5edd47b.0"}
{"source":"I need to check up with Jacob 's team after the staff meeting .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jacob \" ) ) ) ) ) ) ) :start ( ?= ( :end ( singleton ( :results ( FindEventWrapperWithDefaults :constraint ( Constraint[Event] :subject ( ?~= # ( String \" staff meeting \" ) ) ) ) ) ) ) ) :subject ( ?= # ( String \" check up \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=\" Jacob \")),has_subject(\" check up \"),starts_at(:end(FindEvents(has_subject(\" staff meeting \"))))))","qid":"6bfaf6b1-65fe-465b-9cb9-5b70b11d6139.2"}
{"source":"Please scheudle a meeting with David Lax , his boss , Paul and his supervisor","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" David Lax \" ) ) ) ) ) ) ( andConstraint ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" David Lax \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Paul \" ) ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Paul \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Paul \")),with_attendee(\" David Lax \"),with_attendee(FindManager(\" David Lax \")),with_attendee(\" Paul \")))","qid":"070831c4-56bf-4815-af39-9d426178489d.0"}
{"source":"Create an appointment with Eugene and Eugene 's team on Wednesday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Eugene \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Eugene \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" WEDNESDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Eugene \"),with_attendee(FindTeamOf(recipient=\" Eugene \")),starts_at(NextDOW(\" WEDNESDAY \"))))","qid":"709c2ecd-69ef-4251-b273-22da03c3c68a.0"}
{"source":"Add lunch with Lisa 2 hours before before the meeting with my boss","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Lisa \" ) ) ) ) ) ) :start ( ?= ( PeriodDurationBeforeDateTime :dateTime ( :start ( singleton ( :results ( FindEventWrapperWithDefaults :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) ) ) ) ) ) :periodDuration ( PeriodDuration :duration ( toHours # ( Number 2 ) ) ) ) ) :subject ( ?= # ( String \" lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Lisa \"),has_subject(\" lunch \"),starts_at(PeriodDurationBeforeDateTime(dateTime=:start(FindEvents(with_attendee(FindManager(CurrentUser())))),periodDuration=PeriodDuration(duration=toHours(2))))))","qid":"67dd50f3-61bf-4dff-92bc-5255d557a9d4.4"}
{"source":"Schedule a coffee date at 10 : 00 a.m. with David Lax and his manager .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" David Lax \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" David Lax \" ) ) ) ) ) ) ) ) :start ( ?= ( NextTime :time ( NumberAM :number # ( Number 10.0 ) ) ) ) :subject ( ?= # ( String \" coffee date \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" David Lax \"),with_attendee(FindManager(\" David Lax \")),has_subject(\" coffee date \"),starts_at(NextTime(time=NumberAM(10)))))","qid":"2270f5a8-4155-441a-b8d5-725f741479d7.2"}
{"source":"I need time with my team on Tuesday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(NextDOW(\" TUESDAY \"))))","qid":"52e45f8f-a3d8-44af-98a6-aae77500ffd9.0"}
{"source":"arrange a meeting with Mike and his manager for tomorrow","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Mike \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Mike \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Mike \"),with_attendee(FindManager(\" Mike \")),starts_at(Tomorrow())))","qid":"8161c7bc-78dd-416c-b902-8ae0e4e042c0.0"}
{"source":"put meeting with my manager at 10 . 00 am","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( NextTime :time ( NumberAM :number # ( Number 10.0 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),starts_at(NextTime(time=NumberAM(10)))))","qid":"6806368e-071a-487a-a7e5-64dd67b67ecb.1"}
{"source":"Set up a team building experience and add everyone on Kim 's team , except Jennifer","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim \" ) ) ) ) ) ) ) ( AttendeeListExcludesRecipient :recipient ( ?= ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jennifer \" ) ) ) ) ) ) ) ) :subject ( ?= # ( String \" team building experience \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=\" Kim \")),avoid_attendee(refer(Recipient?(name=LIKE(Jennifer)))),has_subject(\" team building experience \")))","qid":"f5ce36fc-ddba-4320-bcda-a48e62ae502b.2"}
{"source":"My team and I have a company retreat starting on sunday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" SUNDAY \" ) ) ) ) :subject ( ?= # ( String \" company retreat \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),has_subject(\" company retreat \"),starts_at(NextDOW(\" SUNDAY \"))))","qid":"4d565072-a7af-4394-8252-19f4e46cd2e5.0"}
{"source":"Ok , great , now make an appointment with Dennis and his boss for next week .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Dennis \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Dennis \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( NextWeekList ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Dennis \"),with_attendee(FindManager(\" Dennis \")),starts_at(NextWeekList())))","qid":"a8035314-e354-4fb3-a507-c5b60d56ed91.2"}
{"source":"I 'm going to the mall with the boss and his team","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) ) ) :subject ( ?= # ( String \" going to mall \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),with_attendee(FindTeamOf(recipient=FindManager(CurrentUser()))),has_subject(\" going to mall \")))","qid":"de07d70e-574c-4632-b256-06c342e52dc6.3"}
{"source":"please make a meeting with abby and team","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" abby \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" abby \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" abby \"),with_attendee(FindTeamOf(recipient=\" abby \"))))","qid":"c051eb97-70be-4701-af3f-a4518839b6ae.4"}
{"source":"i want to meet Hokage 's manager","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Hokage \" ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindManager(\" Hokage \")))","qid":"08682684-9acc-4bda-81aa-b02bb9b7a61c.0"}
{"source":"I want to meet with Kelly and her supervisor tomorrow .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kelly \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kelly \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Kelly \"),with_attendee(FindManager(\" Kelly \")),starts_at(Tomorrow())))","qid":"3568c0cb-42b8-4042-8d28-aa5e02534610.0"}
{"source":"Thanks , I want to add lunch with Jason and his supervisor on the 22 nd","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jason \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jason \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( nextDayOfMonth ( Today ) # ( Number 22 ) ) ) ) :subject ( ?= # ( String \" lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jason \"),with_attendee(FindManager(\" Jason \")),has_subject(\" lunch \"),starts_at(nextDayOfMonth(Today(),22))))","qid":"714cdbbb-d546-480b-8104-fb12202a2883.3"}
{"source":"How about we schedule something with Jim 's team after the lunch on Monday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jim \" ) ) ) ) ) ) ) :start ( ?= ( :end ( singleton ( :results ( FindEventWrapperWithDefaults :constraint ( EventOnDate :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :event ( Constraint[Event] :subject ( ?~= # ( String \" lunch \" ) ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=\" Jim \")),starts_at(:end(FindEvents(AND(starts_at(NextDOW(\" MONDAY \")),has_subject(\" lunch \")))))))","qid":"acfab55f-9fa1-4169-8fc9-51da45a600bb.4"}
{"source":"Can you book my check - in with Liara 's boss on Wednesday at 4 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Liara \" ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" WEDNESDAY \" ) ) :time ( NumberPM :number # ( Number 4 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Liara \")),starts_at(NextDOW(\" WEDNESDAY \")),starts_at(NumberPM(4))))","qid":"3ad94ddb-6033-4eaa-ab3f-452d21d535a4.0"}
{"source":"Schedule Jennifer and her team for a volleyball match","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jennifer \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jennifer \" ) ) ) ) ) ) ) ) :subject ( ?= # ( String \" volleyball match \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jennifer \"),with_attendee(FindTeamOf(recipient=\" Jennifer \")),has_subject(\" volleyball match \")))","qid":"d2d5f2bb-a83e-4f6b-88cc-99a9af80b80d.0"}
{"source":"I would like to see Stephanie and her team after the big conference on Monday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Stephanie \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Stephanie \" ) ) ) ) ) ) ) ) :start ( ?= ( :end ( singleton ( :results ( FindEventWrapperWithDefaults :constraint ( EventOnDate :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :event ( Constraint[Event] :subject ( ?~= # ( String \" big conference \" ) ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Stephanie \"),with_attendee(FindTeamOf(recipient=\" Stephanie \")),starts_at(:end(FindEvents(AND(starts_at(NextDOW(\" MONDAY \")),has_subject(\" big conference \")))))))","qid":"34e3d738-a641-43a3-b81b-9e2096450916.4"}
{"source":"Please create a meeting with Julie and her manager at 10 am tomorrow .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Julie \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Julie \" ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberAM :number # ( Number 10.0 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Julie \"),with_attendee(FindManager(\" Julie \")),starts_at(Tomorrow()),starts_at(NumberAM(10))))","qid":"38a4dc4c-db87-44f0-a9a8-830096090303.2"}
{"source":"Schedule a coffee break with Chelsea 's manager tomorrow at 11 am .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Chelsea \" ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberAM :number # ( Number 11 ) ) ) ) :subject ( ?= # ( String \" coffee break \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Chelsea \")),has_subject(\" coffee break \"),starts_at(Tomorrow()),starts_at(NumberAM(11))))","qid":"52acf866-3b72-4b38-bff2-d6650957d548.3"}
{"source":"I need to make a meeting with my boss later today .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( DateTimeConstraint :constraint ( Late ) :date ( Today ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),starts_at(Late()),starts_at(Today())))","qid":"9908adb7-7ac8-48f3-a8c7-aeaae1ad6a6a.1"}
{"source":"Can put my team on a meeting but do nt include abby","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) ( AttendeeListExcludesRecipient :recipient ( ?= ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" abby \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),avoid_attendee(refer(Recipient?(name=LIKE(abby))))))","qid":"de29acdc-f5ad-4e82-a262-d9d343383b8d.1"}
{"source":"Make a meeting for Friday at 3 : 25 pm with Kare and add her supervisor to the event .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kare \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kare \" ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( HourMinutePm :hours # ( Number 3 ) :minutes # ( Number 25 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Kare \"),with_attendee(FindManager(\" Kare \")),starts_at(NextDOW(\" FRIDAY \")),starts_at(HourMinutePm(hours=3,minutes=25))))","qid":"319b73d7-a313-471f-b6ab-9f4e7493a907.4"}
{"source":"Okay , set up a meeting with Tom 's manager for 10 am on Thursday please.e","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Tom \" ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" THURSDAY \" ) ) :time ( NumberAM :number # ( Number 10.0 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Tom \")),starts_at(NextDOW(\" THURSDAY \")),starts_at(NumberAM(10))))","qid":"d474c24d-ed2f-45a2-9788-99d52afc63d0.1"}
{"source":"Make a meeting with all Team members next year","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( FullYearofYear :year ( NextYear ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(FullYearofYear(NextYear()))))","qid":"16f5971e-8058-4c55-8956-761e426323b4.0"}
{"source":"Meeting for dinner tomorrow with my boss , create an event .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) :subject ( ?= # ( String \" dinner \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),has_subject(\" dinner \"),starts_at(Tomorrow())))","qid":"487b639e-ad70-4bb3-9203-45dbcf8edc97.0"}
{"source":"Add meeting with Tiffany 's manager on Thursday at 3 : 30 PM .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Tiffany \" ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" THURSDAY \" ) ) :time ( HourMinutePm :hours # ( Number 3 ) :minutes # ( Number 30.0 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Tiffany \")),starts_at(NextDOW(\" THURSDAY \")),starts_at(HourMinutePm(hours=3,minutes=30))))","qid":"32ad6f41-03ae-4cf4-9205-7560230ceaf2.0"}
{"source":"Create a new meeting with Jacob and his manager this Friday at 6 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jacob \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jacob \" ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( NumberPM :number # ( Number 6 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jacob \"),with_attendee(FindManager(\" Jacob \")),starts_at(NextDOW(\" FRIDAY \")),starts_at(NumberPM(6))))","qid":"3302881b-0d8a-462a-8822-1b78fd3e0f97.0"}
{"source":"Schedule a meeting with my boss , for my next pay raise .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :subject ( ?= # ( String \" my next pay raise \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),has_subject(\" my next pay raise \")))","qid":"af2830ac-aadd-43fb-a3e8-2d40c3bbc726.0"}
{"source":"Make an event with Kim possible 's team","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim possible \" ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindTeamOf(recipient=\" Kim possible \")))","qid":"1431b51e-f566-45f0-ba74-588c5cf6495b.1"}
{"source":"Make another meeting with Elli and her skip on 10 November","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Elli \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Elli \" ) ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( MD :day # ( Number 10.0 ) :month # ( Month \" NOVEMBER \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Elli \"),with_attendee(FindManager(FindManager(\" Elli \"))),starts_at(MD(month=\" NOVEMBER \",day=10))))","qid":"dd636527-5816-4d47-b65c-a01ab8629f50.4"}
{"source":"I 'd like to book a meeting with Maxwell and his manager on April 30 at noon .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Maxwell \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Maxwell \" ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( MD :day # ( Number 30.0 ) :month # ( Month \" APRIL \" ) ) :time ( Noon ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Maxwell \"),with_attendee(FindManager(\" Maxwell \")),starts_at(MD(month=\" APRIL \",day=30)),starts_at(Noon())))","qid":"82059f18-872b-4d83-a774-0a90dadd58ef.0"}
{"source":"Make a meeting with Jill and her manager and reserve a conference room","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jill \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jill \" ) ) ) ) ) ) ) ) :location ( roomRequest ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jill \"),with_attendee(FindManager(\" Jill \")),at_location(roomRequest())))","qid":"35edb411-7adc-40a6-b6c0-0cc7fe42fb8f.3"}
{"source":"On Friday schedule a phone conference with Sam and his supervisor in the evening .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Sam \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Sam \" ) ) ) ) ) ) ) ) :start ( DateTimeConstraint :constraint ( Evening ) :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) ) :subject ( ?= # ( String \" phone conference \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Sam \"),with_attendee(FindManager(\" Sam \")),has_subject(\" phone conference \"),starts_at(Evening()),starts_at(NextDOW(\" FRIDAY \"))))","qid":"6b6489e8-1cb0-4944-b270-c9cce2ce0974.4"}
{"source":"I am meeting with Jane 's manager at 12 pm Monday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jane \" ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :time ( NumberPM :number # ( Number 12 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Jane \")),starts_at(NextDOW(\" MONDAY \")),starts_at(NumberPM(12))))","qid":"da71c434-28d4-45d8-a08b-c970d4bb6b73.0"}
{"source":"Schedule an appointment with Sarah 's team after the awards gala on Tuesday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Sarah \" ) ) ) ) ) ) ) :start ( ?= ( :end ( singleton ( :results ( FindEventWrapperWithDefaults :constraint ( EventOnDate :date ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) :event ( Constraint[Event] :subject ( ?~= # ( String \" awards gala \" ) ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=\" Sarah \")),starts_at(:end(FindEvents(AND(starts_at(NextDOW(\" TUESDAY \")),has_subject(\" awards gala \")))))))","qid":"c4b759e1-dda5-487e-b9e3-f52ea7760a09.2"}
{"source":"I want to schedule a meeting with the team on early April 25 th .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( DateTimeConstraint :constraint ( Early ) :date ( MD :day # ( Number 25 ) :month # ( Month \" APRIL \" ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(Early()),starts_at(MD(month=\" APRIL \",day=25))))","qid":"f2fc1fcf-9535-4c2a-a01c-eb7f6078250c.0"}
{"source":"Put a new appointment with Julissa and John with their supervisors at Mac 's on Wednesday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Julissa \" ) ) ) ) ) ) ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" John \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Julissa \" ) ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" John \" ) ) ) ) ) ) ) ) ) :location ( ?= # ( LocationKeyphrase \" Mac's \" ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" WEDNESDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Julissa \"),with_attendee(FindManager(\" John \")),with_attendee(\" John \"),with_attendee(FindManager(\" Julissa \")),at_location(\" Mac's \"),starts_at(NextDOW(\" WEDNESDAY \"))))","qid":"9f1187ab-fe96-4915-b9c3-08b5ce4afcbe.2"}
{"source":"add meeting for whole group","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindTeamOf(recipient=CurrentUser())))","qid":"96258839-991c-4d47-a6f9-3c2e22e5ba00.6"}
{"source":"I have a meeting tomorrow with Tom 's boss , it 's from 9 am to 9 : 25 am .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Tom \" ) ) ) ) ) ) ) :end ( ?= ( TimeAfterDateTime :dateTime ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberAM :number # ( Number 9 ) ) ) :time ( HourMinuteAm :hours # ( Number 9 ) :minutes # ( Number 25 ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberAM :number # ( Number 9 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(ends_at(AND(GE(DateTime?(date=Tomorrow(),time=NumberAM(9))),HourMinuteAm(hours=9,minutes=25))),with_attendee(FindManager(\" Tom \")),starts_at(Tomorrow()),starts_at(NumberAM(9))))","qid":"a0744d41-e69c-48fa-9957-a687e48ec04c.1"}
{"source":"Schedule weekly catchup on tuesday morning with My whole team and brian .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" brian \" ) ) ) ) ) ) ) :start ( DateTimeConstraint :constraint ( Morning ) :date ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) ) :subject ( ?= # ( String \" weekly catchup \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),with_attendee(\" brian \"),has_subject(\" weekly catchup \"),starts_at(Morning()),starts_at(NextDOW(\" TUESDAY \"))))","qid":"3826365a-8a06-4d79-8fb0-6d984645413c.1"}
{"source":"I have a lunch meeting with team at 12 pm tomorrow .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 12 ) ) ) ) :subject ( ?= # ( String \" lunch meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),has_subject(\" lunch meeting \"),starts_at(Tomorrow()),starts_at(NumberPM(12))))","qid":"e69913b6-8a44-4148-8bc4-57cc4908af5d.1"}
{"source":"add meeting with Jim 's manager to calendar from yesterday at 3 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jim \" ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Yesterday ) :time ( NumberPM :number # ( Number 3 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Jim \")),starts_at(Yesterday()),starts_at(NumberPM(3))))","qid":"f98a208e-4338-448b-b7a2-d75e4d9d8c1a.1"}
{"source":"Can you schedule a meeting to review emails with Mike and Mike 's Manager ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Mike \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Mike \" ) ) ) ) ) ) ) ) :subject ( ?= # ( String \" review emails \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Mike \"),with_attendee(FindManager(\" Mike \")),has_subject(\" review emails \")))","qid":"ce485eec-90f8-4f40-a873-872f51141693.2"}
{"source":"Can I see Mark 's manager ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Mark \" ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindManager(\" Mark \")))","qid":"c6786ca6-9cac-4899-90e1-1452f8f4944d.0"}
{"source":"I also need to meet with June 's manager tomorrow","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" June \" ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" June \")),starts_at(Tomorrow())))","qid":"1a25682f-b82c-4aa9-9837-5edc0f8661f5.3"}
{"source":"I have a Team Marathon Meeting with Savannah and her manager at 1 pm on Thursday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Savannah \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Savannah \" ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" THURSDAY \" ) ) :time ( NumberPM :number # ( Number 1 ) ) ) ) :subject ( ?= # ( String \" Team Marathon Meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Savannah \"),with_attendee(FindManager(\" Savannah \")),has_subject(\" Team Marathon Meeting \"),starts_at(NextDOW(\" THURSDAY \")),starts_at(NumberPM(1))))","qid":"8458e161-ce76-4305-85c9-cabb044750c6.0"}
{"source":"Set up a meeting with co - workers this Wednesday afternoon at the Globe Life park .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :location ( ?= # ( LocationKeyphrase \" Globe Life park \" ) ) :start ( DateTimeConstraint :constraint ( Afternoon ) :date ( NextDOW :dow # ( DayOfWeek \" WEDNESDAY \" ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),at_location(\" Globe Life park \"),starts_at(Afternoon()),starts_at(NextDOW(\" WEDNESDAY \"))))","qid":"25dcb2ca-0010-4f4f-8855-bd49b4e01d3b.0"}
{"source":"Meeting with Jesse Rosenfeld 's team .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jesse Rosenfeld \" ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindTeamOf(recipient=\" Jesse Rosenfeld \")))","qid":"bf4531cc-8881-4d90-8696-348d22a2e50a.1"}
{"source":"After the management meeting , make a meeting with Sarah and her team","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Sarah \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Sarah \" ) ) ) ) ) ) ) ) :start ( ?= ( :end ( singleton ( :results ( FindEventWrapperWithDefaults :constraint ( Constraint[Event] :subject ( ?~= # ( String \" management meeting \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Sarah \"),with_attendee(FindTeamOf(recipient=\" Sarah \")),starts_at(:end(FindEvents(has_subject(\" management meeting \"))))))","qid":"b00b4447-caa8-4316-b715-8ac031de8726.0"}
{"source":"Please create an event for lunch tomorrow with Savannah . Who is her supervisor ?","original_target":"( do ( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Savannah \" ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) :subject ( ?= # ( String \" lunch \" ) ) ) ) ) ) ( Yield :output ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Savannah \" ) ) ) ) ) ) ) )","target":"do(Yield(CreateEvent(AND(with_attendee(\" Savannah \"),has_subject(\" lunch \"),starts_at(Tomorrow())))),FindManager(\" Savannah \"))","qid":"b295cc8f-69d9-497d-a256-827d2225605e.0"}
{"source":"Can you get set a breakfast meeting with my manager for early next Friday ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( DateTimeConstraint :constraint ( Early ) :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) ) :subject ( ?= # ( String \" breakfast meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),has_subject(\" breakfast meeting \"),starts_at(Early()),starts_at(NextDOW(\" FRIDAY \"))))","qid":"0d914c64-3d57-428c-8e9c-ad3ea079263d.0"}
{"source":"Set up a meeting with Abby and her team","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Abby \"),with_attendee(FindTeamOf(recipient=\" Abby \"))))","qid":"b34dbf82-dc9d-4995-a581-2b2b684030f7.0"}
{"source":"i need a meeting with my team and add kim","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" kim \" ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),with_attendee(\" kim \")))","qid":"b3682bfc-9681-41ac-8a58-99b76fd0ed93.1"}
{"source":"I need a meeting today at 3 with my team .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Today ) :time ( NumberPM :number # ( Number 3 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(Today()),starts_at(NumberPM(3))))","qid":"4fb3ed33-2391-4962-8bbe-760e91a3c46d.2"}
{"source":"Can you create a new meeting with the team tomorrow ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(Tomorrow())))","qid":"d94530f7-f652-45fc-9c4d-b57d0e184086.3"}
{"source":"Please set up an appointment with my team for Sunday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" SUNDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(NextDOW(\" SUNDAY \"))))","qid":"b02d56c6-a293-468c-a3a6-02ec530b05b6.0"}
{"source":"Create a meeting with my boss on friday morning","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( DateTimeConstraint :constraint ( Morning ) :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),starts_at(Morning()),starts_at(NextDOW(\" FRIDAY \"))))","qid":"a79f2cd9-ee1d-4456-824e-f8e4930ddc64.1"}
{"source":"put a meeting with ben 's manager tomorrow at 8 . 00 am until the end of the day","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" ben \" ) ) ) ) ) ) ) :end ( ?= ( TimeAfterDateTime :dateTime ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberAM :number # ( Number 8 ) ) ) :time ( EndOfWorkDay ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberAM :number # ( Number 8 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(ends_at(AND(GE(DateTime?(date=Tomorrow(),time=NumberAM(8))),EndOfWorkDay())),with_attendee(FindManager(\" ben \")),starts_at(Tomorrow()),starts_at(NumberAM(8))))","qid":"16161ee3-23fd-47fd-9ed9-4454b535c011.0"}
{"source":"i need Jesse Rosenfeld and his team for dinner tomorrow around 7 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jesse Rosenfeld \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jesse Rosenfeld \" ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 7 ) ) ) ) :subject ( ?= # ( String \" dinner \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jesse Rosenfeld \"),with_attendee(FindTeamOf(recipient=\" Jesse Rosenfeld \")),has_subject(\" dinner \"),starts_at(Tomorrow()),starts_at(NumberPM(7))))","qid":"59f6326a-4d43-4a96-a549-b8fbe7966b4a.0"}
{"source":"New meeting with Aaron 's boss tomorrow","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Aaron \" ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Aaron \")),starts_at(Tomorrow())))","qid":"a3964d34-4d06-4689-bf06-0841939c8d23.2"}
{"source":"schedule a meeting with my team on saturday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" SATURDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(NextDOW(\" SATURDAY \"))))","qid":"b64f4a60-2fcf-4074-94c5-fa728466c946.2"}
{"source":"ok , create an event with david lax and his reports for tomorrow night","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" david lax \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindReports :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" david lax \" ) ) ) ) ) ) ) ) :start ( DateTimeConstraint :constraint ( Night ) :date ( Tomorrow ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" david lax \"),with_attendee(FindReports(recipient=refer(Recipient?(name=LIKE(david lax))))),starts_at(Night()),starts_at(Tomorrow())))","qid":"fbe4dc6d-c35f-4002-82af-9baee17beeff.3"}
{"source":"When the talk is over John 's team is invited for drinks .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" John \" ) ) ) ) ) ) ) :start ( ?= ( :end ( singleton ( :results ( FindEventWrapperWithDefaults :constraint ( Constraint[Event] :subject ( ?~= # ( String \" Talk \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=\" John \")),starts_at(:end(FindEvents(has_subject(\" Talk \"))))))","qid":"50b04838-96f6-4224-8bcb-21fcc828fde8.0"}
{"source":"I meeting with Abby and her Skip later today in Boston","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ) ) ) :location ( ?= # ( LocationKeyphrase \" Boston \" ) ) :start ( DateTimeConstraint :constraint ( Late ) :date ( Today ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Abby \"),with_attendee(FindManager(FindManager(\" Abby \"))),at_location(\" Boston \"),starts_at(Late()),starts_at(Today())))","qid":"afea43f1-0a6e-48aa-8e8c-50854080fa87.1"}
{"source":"Put a meeting with my manager please","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindManager(CurrentUser())))","qid":"276eec4f-7fb5-4a95-af87-52c693c709e6.6"}
{"source":"Thanks . Immediately after the stand - up , I need to meet with Ron 's team .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Ron \" ) ) ) ) ) ) ) :start ( ?= ( :end ( singleton ( :results ( FindEventWrapperWithDefaults :constraint ( Constraint[Event] :subject ( ?~= # ( String \" stand-up \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=\" Ron \")),starts_at(:end(FindEvents(has_subject(\" stand_up \"))))))","qid":"50b04838-96f6-4224-8bcb-21fcc828fde8.2"}
{"source":"Add meeting with boss at 15 : 00 on Tuesday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) :time ( HourMinuteMilitary :hours # ( Number 15 ) :minutes # ( Number 0 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),starts_at(NextDOW(\" TUESDAY \")),starts_at(HourMinuteMilitary(hours=15,minutes=0))))","qid":"a871e3dc-e577-41f9-ba5c-de2504d6c1b9.2"}
{"source":"No . Invite my team to a new event called # TeamMeetingEverybody","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :subject ( ?= # ( String \" #TeamMeetingEverybody \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),has_subject(\" TeamMeetingEverybody \")))","qid":"cd1f9bf8-57d4-4e0d-bbdf-6824a8924f84.1"}
{"source":"put meeting with ben 's manager at tomorrow 10 . 00 am","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Ben \" ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberAM :number # ( Number 10.0 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Ben \")),starts_at(Tomorrow()),starts_at(NumberAM(10))))","qid":"2248ff93-e695-42e0-8c77-8fb12bd5180f.3"}
{"source":"Make an appointment with Emma 's boss at today evening 5 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Emma \" ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Today ) :time ( NumberPM :number # ( Number 5 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Emma \")),starts_at(Today()),starts_at(NumberPM(5))))","qid":"f12cf974-d46e-46d9-a726-0694d129d6bd.4"}
{"source":"SCHEDULE A meeting with Raymond and his manager tomorrow","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Raymond \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Raymond \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Raymond \"),with_attendee(FindManager(\" Raymond \")),starts_at(Tomorrow())))","qid":"51a8507a-5500-4ba2-b335-e003fc7c80ab.4"}
{"source":"Make an event with Jake and his boss","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jake \"),with_attendee(FindManager(\" Jake \"))))","qid":"594fe889-db7f-4295-81bd-0d4716421aa4.0"}
{"source":"i need an event with jennifer , her boss , elli and her boss","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" jennifer \" ) ) ) ) ) ) ( andConstraint ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" jennifer \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" elli \" ) ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" elli \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" elli \")),with_attendee(\" jennifer \"),with_attendee(FindManager(\" jennifer \")),with_attendee(\" elli \")))","qid":"4162a25a-8a60-4ea4-83f0-d9738a00be4d.1"}
{"source":"I need a basketball game set up with Tim and his boss tomorrow .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Tim \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Tim \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) :subject ( ?= # ( String \" basketball game \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Tim \"),with_attendee(FindManager(\" Tim \")),has_subject(\" basketball game \"),starts_at(Tomorrow())))","qid":"a8035314-e354-4fb3-a507-c5b60d56ed91.0"}
{"source":"I have an excursion with my team this Friday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) ) ) :subject ( ?= # ( String \" excursion \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),has_subject(\" excursion \"),starts_at(NextDOW(\" FRIDAY \"))))","qid":"2be6e2cf-b987-4fb7-9758-f7ea30bcc810.2"}
{"source":"I have brunch tomorrow at 11 with Juliette and her boss .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Juliette \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Juliette \" ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberAM :number # ( Number 11 ) ) ) ) :subject ( ?= # ( String \" brunch \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Juliette \"),with_attendee(FindManager(\" Juliette \")),has_subject(\" brunch \"),starts_at(Tomorrow()),starts_at(NumberAM(11))))","qid":"b1b5690e-7f16-4741-abb8-70e562c37cce.0"}
{"source":"Hey make a meeting with Lax 's team but do not invite Kim .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Lax \" ) ) ) ) ) ) ) ( AttendeeListExcludesRecipient :recipient ( ?= ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=\" Lax \")),avoid_attendee(refer(Recipient?(name=LIKE(Kim))))))","qid":"ed25e913-8cc2-4c1a-85cf-9a68ec5c4576.0"}
{"source":"hello , could you set up a meeting with the boss first thing tomorrow at 8 am","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberAM :number # ( Number 8 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),starts_at(Tomorrow()),starts_at(NumberAM(8))))","qid":"40c0f5c9-815b-45c2-b337-4a537b7edc6e.0"}
{"source":"Schedule a check in with my boss today at 4 .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( DateTimeConstraint :constraint ( ?= ( NumberPM :number # ( Number 4 ) ) ) :date ( Today ) ) :subject ( ?= # ( String \" check in \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),has_subject(\" check in \"),starts_at(NumberPM(4)),starts_at(Today())))","qid":"8b7dcff2-0d39-44ed-ae18-96dc191bf170.4"}
{"source":"create work meeting with boss","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :subject ( ?= # ( String \" work meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),has_subject(\" work meeting \")))","qid":"b9186ff4-ede7-4ed1-bc64-fd4f41559498.0"}
{"source":"please make meet with my team","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :subject ( ?= # ( String \" meet with my team \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),has_subject(\" meet with my team \")))","qid":"c11fba81-d78f-4a5f-8c8b-50158aae8eca.0"}
{"source":"Ok Make a meeting with Elli 's team and Abby","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Elli \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=\" Elli \")),with_attendee(\" Abby \")))","qid":"eec1e51c-e1aa-40a3-9246-61e9a40cb346.4"}
{"source":"Add Bake a Cake with Elli , her supervisor , Jake and his manager please","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Elli \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Elli \" ) ) ) ) ) ) ) ) ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) ) ) ) :subject ( ?= # ( String \" Bake a Cake \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Elli \"),with_attendee(FindManager(\" Elli \")),with_attendee(\" Jake \"),with_attendee(FindManager(\" Jake \")),has_subject(\" Bake a Cake \")))","qid":"f8c683da-0d6a-4212-a97f-95e67b0a4bf5.1"}
{"source":"CREATE A PRESENTATION MEETING WITH THE MANAGER","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :subject ( ?= # ( String \" PRESENTATION MEETING \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),has_subject(\" PRESENTATION MEETING \")))","qid":"4d0f1792-ffd5-426e-8600-9e7f7645da39.0"}
{"source":"Meeting with my team tomorrow morning , do it .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( DateTimeConstraint :constraint ( Morning ) :date ( Tomorrow ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(Morning()),starts_at(Tomorrow())))","qid":"5dfee686-5065-432b-8b68-c58ec6e31492.1"}
{"source":"Add a new event monday after lunch to meet with Landon 's boss","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Landon \" ) ) ) ) ) ) ) :start ( OnDateAfterTime :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :time ( Lunch ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Landon \")),starts_at(OnDateAfterTime(date=NextDOW(\" MONDAY \"),time=Lunch()))))","qid":"286c2553-bd57-4981-8505-84bdd5d370e5.5"}
{"source":"Mark off monday for a meeting with Sam and Tom . invite their supervisors too .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Sam \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Tom \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Sam \" ) ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Tom \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Tom \")),with_attendee(FindManager(\" Sam \")),with_attendee(\" Sam \"),with_attendee(\" Tom \"),starts_at(NextDOW(\" MONDAY \"))))","qid":"d5571e65-c4da-45e8-9c07-af0d2c2b6a98.3"}
{"source":"I need a meeting with Abby , Jake and their respective teams .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=\" Jake \")),with_attendee(FindTeamOf(recipient=\" Abby \")),with_attendee(\" Abby \"),with_attendee(\" Jake \")))","qid":"a6dc9c04-140e-4a2f-a10b-95638fd2f1c3.0"}
{"source":"I need an event with my team on November 1","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( MD :day # ( Number 1 ) :month # ( Month \" NOVEMBER \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(MD(month=\" NOVEMBER \",day=1))))","qid":"89a65095-4068-45f7-a463-08de62f44f1d.3"}
{"source":"I desperately need to make a meeting with my supervisor for tomorrow at 2 pm !","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 2 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),starts_at(Tomorrow()),starts_at(NumberPM(2))))","qid":"292dd612-9273-4fe1-9008-6509b54e2353.1"}
{"source":"Add meeting with Jenny 's boss Thursday at 2 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jenny \" ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" THURSDAY \" ) ) :time ( NumberPM :number # ( Number 2 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Jenny \")),starts_at(NextDOW(\" THURSDAY \")),starts_at(NumberPM(2))))","qid":"402315e1-6c3c-4b46-bf46-020915834aa5.0"}
{"source":"Make a meeting with Abby 's team","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindTeamOf(recipient=\" Abby \")))","qid":"c7295642-73e4-48a1-bc70-6b37509bf9c4.0"}
{"source":"Can you set up an event called Gentlemen 's fun night for next friday and invite Sandro and his supervisor ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Sandro \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Sandro \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) ) ) :subject ( ?= # ( String \" Gentlemen's fun night \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Sandro \"),with_attendee(FindManager(\" Sandro \")),has_subject(\" Gentlemen's fun night \"),starts_at(NextDOW(\" FRIDAY \"))))","qid":"e10548e5-271f-48c5-b8e6-ac68528abf87.3"}
{"source":"Create a new meeting with Kim and her skip on Friday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim \" ) ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Kim \"),with_attendee(FindManager(FindManager(\" Kim \"))),starts_at(NextDOW(\" FRIDAY \"))))","qid":"6e0dce24-e928-4460-8280-d8f771e064c2.3"}
{"source":"I 'm going to meet with Jake and his team tomorrow around brunch","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) ) ) :start ( DateTimeConstraint :constraint ( TimeAround :time ( Brunch ) ) :date ( Tomorrow ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jake \"),with_attendee(FindTeamOf(recipient=\" Jake \")),starts_at(TimeAround(Brunch())),starts_at(Tomorrow())))","qid":"e6ca8f16-0785-4624-86cc-3542ac1d5d14.1"}
{"source":"Invite my team to lunch and add Abby .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ) :subject ( ?= # ( String \" lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),with_attendee(\" Abby \"),has_subject(\" lunch \")))","qid":"956f7851-b321-4a30-afd2-2a99b380b884.0"}
{"source":"Ok , let 's set up lunch with Katie 's manager at 12 on saturday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Katie \" ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" SATURDAY \" ) ) :time ( NumberPM :number # ( Number 12 ) ) ) ) :subject ( ?= # ( String \" lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Katie \")),has_subject(\" lunch \"),starts_at(NextDOW(\" SATURDAY \")),starts_at(NumberPM(12))))","qid":"132c3283-e6ff-463f-b2e0-14cda4c57a40.3"}
{"source":"i need to have all of jake 's team except jennifer at my staff meeting this friday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" jake \" ) ) ) ) ) ) ) ( AttendeeListExcludesRecipient :recipient ( ?= ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" jennifer \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) ) ) :subject ( ?= # ( String \" staff meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=\" jake \")),avoid_attendee(refer(Recipient?(name=LIKE(jennifer)))),has_subject(\" staff meeting \"),starts_at(NextDOW(\" FRIDAY \"))))","qid":"29f73c28-787a-4c91-9b31-d948e7229087.0"}
{"source":"Thanks please book a room with John 's team","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" John \" ) ) ) ) ) ) ) :location ( roomRequest ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=\" John \")),at_location(roomRequest())))","qid":"2bf907bd-e47b-4830-b33b-86f09cfa0cb0.2"}
{"source":"Add Dan Marton 's boss and his skip to the meeting on December 2 nd .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Dan Marton \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( FindManager :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Dan Marton \" ) ) ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( MD :day # ( Number 2 ) :month # ( Month \" DECEMBER \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Dan Marton \")),with_attendee(FindManager(FindManager(FindManager(\" Dan Marton \")))),starts_at(MD(month=\" DECEMBER \",day=2))))","qid":"d4ba7f27-6e1a-4720-a2b0-a7910be09880.3"}
{"source":"Please note my meeting with my manager for the day after tomorrow at 10 AM .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( adjustByPeriod ( Tomorrow ) ( toDays # ( Number 1 ) ) ) :time ( NumberAM :number # ( Number 10.0 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),starts_at(adjustByPeriod(Tomorrow(),toDays(1))),starts_at(NumberAM(10))))","qid":"c823fbd6-f164-445b-a316-ea350c1438ea.0"}
{"source":"I have a docket meeting with Mitchell and his boss on the 14 th of next month .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Mitchell \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Mitchell \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( MD :day # ( Number 14 ) :month ( NextMonth ) ) ) ) :subject ( ?= # ( String \" docket meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Mitchell \"),with_attendee(FindManager(\" Mitchell \")),has_subject(\" docket meeting \"),starts_at(MD(month=NextMonth(),day=14))))","qid":"9f03add2-234d-4c63-a36f-d4b30a29eefa.2"}
{"source":"Make a Turkey Day Party with Kims team and remove Abby from it","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kims \" ) ) ) ) ) ) ) ( AttendeeListExcludesRecipient :recipient ( ?= ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ) ) :subject ( ?= # ( String \" Turkey Day Party \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=\" Kims \")),avoid_attendee(refer(Recipient?(name=LIKE(Abby)))),has_subject(\" Turkey Day Party \")))","qid":"5b06f1af-8ad1-4f20-b080-908c612eabc0.0"}
{"source":"Book a lunch for next wednesday with sarah and her boss","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Sarah \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Sarah \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" WEDNESDAY \" ) ) ) ) :subject ( ?= # ( String \" lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Sarah \"),with_attendee(FindManager(\" Sarah \")),has_subject(\" lunch \"),starts_at(NextDOW(\" WEDNESDAY \"))))","qid":"98853f7b-f787-42a7-92ff-eaa84a7a5f45.5"}
{"source":"I 'm going to be with Abby and her manager tomorrow","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Abby \"),with_attendee(FindManager(\" Abby \")),starts_at(Tomorrow())))","qid":"6ecf313f-a647-45b3-bd5b-5905c05f9f8d.2"}
{"source":"ok add dinner with sam 's maanager","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" sam \" ) ) ) ) ) ) ) :subject ( ?= # ( String \" dinner \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" sam \")),has_subject(\" dinner \")))","qid":"1f572536-bec0-45fc-a8e5-d0c4cb055c12.2"}
{"source":"Can you make me a visit with my team tomorrow earlier than 3","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( OnDateBeforeTime :date ( Tomorrow ) :time ( NumberPM :number # ( Number 3 ) ) ) :subject ( ?= # ( String \" visit \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),has_subject(\" visit \"),starts_at(OnDateBeforeTime(date=Tomorrow(),time=NumberPM(3)))))","qid":"a2835cd6-74ee-4ac2-b700-8408e9f5d9b7.0"}
{"source":"Add a compare notes for my boss , alex , her boss and meg and her boss tomorrow after 10 am","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" alex \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" alex \" ) ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" meg \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" meg \" ) ) ) ) ) ) ) ) :start ( OnDateAfterTime :date ( Tomorrow ) :time ( NumberAM :number # ( Number 10.0 ) ) ) :subject ( ?= # ( String \" compare notes \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" meg \")),with_attendee(\" meg \"),with_attendee(FindManager(\" alex \")),with_attendee(FindManager(CurrentUser())),with_attendee(\" alex \"),has_subject(\" compare notes \"),starts_at(OnDateAfterTime(date=Tomorrow(),time=NumberAM(10)))))","qid":"a29f2d6c-62cb-45e9-9de0-3f7032515623.3"}
{"source":"create drink night on tuesday with coworkers","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) ) ) :subject ( ?= # ( String \" drink night \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),has_subject(\" drink night \"),starts_at(NextDOW(\" TUESDAY \"))))","qid":"1d4931cf-e63e-4091-9066-062e75bd7023.0"}
{"source":"Set a meeting for after lunch tomorrow around 1 : 30 pm with the boss as well as Merriam Bryant and Thomas Jones to discuss our upcoming budget deadlines","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Merriam Bryant \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Thomas Jones \" ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( HourMinutePm :hours # ( Number 1 ) :minutes # ( Number 30.0 ) ) ) ) :subject ( ?= # ( String \" discuss our upcoming budget deadlines \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Thomas Jones \"),with_attendee(FindManager(CurrentUser())),with_attendee(\" Merriam Bryant \"),has_subject(\" discuss our upcoming budget deadlines \"),starts_at(Tomorrow()),starts_at(HourMinutePm(hours=1,minutes=30))))","qid":"3f37d6cd-2bdf-429f-8a90-74a011bd8332.0"}
{"source":"ok thanks . I need an event with my team tonight .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( DateTimeConstraint :constraint ( Night ) :date ( Today ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(Night()),starts_at(Today())))","qid":"8881db21-1df5-4ff6-92b6-f368caeb2e32.3"}
{"source":"I need to meet with Sarah and her supervisor next thursday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Sarah \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Sarah \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" THURSDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Sarah \"),with_attendee(FindManager(\" Sarah \")),starts_at(NextDOW(\" THURSDAY \"))))","qid":"7dd998b2-d1c4-4a26-a498-2f1f6383b21b.0"}
{"source":"create work meeting with boss at Pacific Place","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :location ( ?= # ( LocationKeyphrase \" Pacific Place \" ) ) :subject ( ?= # ( String \" work meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),at_location(\" Pacific Place \"),has_subject(\" work meeting \")))","qid":"56716f00-03e7-4b67-9be3-8cd79dc3a67a.0"}
{"source":"then schedule a meeting with Jake and his boss and David Lax and his boss","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) ) ) ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" David Lax \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" David Lax \" ) ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jake \"),with_attendee(FindManager(\" Jake \")),with_attendee(\" David Lax \"),with_attendee(FindManager(\" David Lax \"))))","qid":"26d1bbd5-ec8e-4c44-a3ff-b801de8df8df.2"}
{"source":"Please create a lunch date next Tuesday with Anna and her manager .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Anna \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Anna \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) ) ) :subject ( ?= # ( String \" lunch date \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Anna \"),with_attendee(FindManager(\" Anna \")),has_subject(\" lunch date \"),starts_at(NextDOW(\" TUESDAY \"))))","qid":"6143dc7f-cef9-412b-80e4-f861c0aff686.1"}
{"source":"I need a meeting with Kim 's reports","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindReports :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim \" ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindReports(recipient=refer(Recipient?(name=LIKE(Kim))))))","qid":"6def668c-a065-45f6-9854-ce72ddc9bb66.0"}
{"source":"Book a 45 minute Steak Lunch with my Manager .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :duration ( ?= ( toMinutes # ( Number 45 ) ) ) :subject ( ?= # ( String \" Steak Lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),has_subject(\" Steak Lunch \"),has_duration(toMinutes(45))))","qid":"4f15c8a4-2123-4f7f-b6ed-f8f38d293029.3"}
{"source":"Can you set up an appointment to meet with Dan Schoffel and his reports ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Dan Schoffel \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindReports :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Dan Schoffel \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Dan Schoffel \"),with_attendee(FindReports(recipient=refer(Recipient?(name=LIKE(Dan Schoffel)))))))","qid":"75ae27e0-2028-4925-a4e5-c0a06827b4fd.3"}
{"source":"I 'm going to a convention on wednesday with bruce banner and his team","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" bruce banner \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" bruce banner \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" WEDNESDAY \" ) ) ) ) :subject ( ?= # ( String \" convention \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" bruce banner \"),with_attendee(FindTeamOf(recipient=\" bruce banner \")),has_subject(\" convention \"),starts_at(NextDOW(\" WEDNESDAY \"))))","qid":"510f242b-bc8a-457a-8aed-6cf7aa3c48e9.0"}
{"source":"Please book a meeting with Daniel 's manager .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Daniel \" ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindManager(\" Daniel \")))","qid":"611781ed-22c2-4452-8e4d-e834f1ebca59.1"}
{"source":"Can you make a meeting with David Lax 's reports ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindReports :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" David Lax \" ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindReports(recipient=refer(Recipient?(name=LIKE(David Lax))))))","qid":"08007585-cdea-44f0-a65d-e3e26cba292a.0"}
{"source":"Me and my team are going to have to meet on Saturday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" SATURDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(NextDOW(\" SATURDAY \"))))","qid":"b64f4a60-2fcf-4074-94c5-fa728466c946.3"}
{"source":"I 'm meeting with Ben and his manager on Saturday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Ben \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Ben \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" SATURDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Ben \"),with_attendee(FindManager(\" Ben \")),starts_at(NextDOW(\" SATURDAY \"))))","qid":"6be5a542-5ece-49e8-9b0c-268f52ed19c7.2"}
{"source":"Schedule a meeting with the whole team tomorrow at 3 : 00 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 3 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(Tomorrow()),starts_at(NumberPM(3))))","qid":"fef2f8a3-9157-4eb7-a83d-bda8bc373ae2.0"}
{"source":"I need a picnic on sep 20 with John and his manager .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" John \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" John \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( MD :day # ( Number 20.0 ) :month # ( Month \" SEPTEMBER \" ) ) ) ) :subject ( ?= # ( String \" picnic \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" John \"),with_attendee(FindManager(\" John \")),has_subject(\" picnic \"),starts_at(MD(month=\" SEPTEMBER \",day=20))))","qid":"ed978520-80e4-48d5-8e72-6f32a9c1b582.6"}
{"source":"Need to setup something tomorrow at noon with Jan and her skip .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jan \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jan \" ) ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( Noon ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jan \"),with_attendee(FindManager(FindManager(\" Jan \"))),starts_at(Tomorrow()),starts_at(Noon())))","qid":"8d313e2f-0757-4a24-ab5f-60a4ec7d3bf4.2"}
{"source":"I would like to set up a meeting with David Lax and his team for Wednesday at 3 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" David Lax \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" David Lax \" ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" WEDNESDAY \" ) ) :time ( NumberPM :number # ( Number 3 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" David Lax \"),with_attendee(FindTeamOf(recipient=\" David Lax \")),starts_at(NextDOW(\" WEDNESDAY \")),starts_at(NumberPM(3))))","qid":"52ed29f6-6ed2-43e6-890a-57b7302d3220.0"}
{"source":"I need to meet with the manager Justin Bieber tomorrow sometime for 2 hours","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Justin Bieber \" ) ) ) ) ) ) ) :duration ( ?= ( toHours # ( Number 2 ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Justin Bieber \")),starts_at(Tomorrow()),has_duration(toHours(2))))","qid":"aebae3b6-be97-4797-8685-a996ebfb04bf.2"}
{"source":"Make a meeting with bo 's manager .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" bo \" ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindManager(\" bo \")))","qid":"65f06313-57ea-43c7-96cb-c607d6d2ba0b.4"}
{"source":"Please schedule a lunch with the team","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :subject ( ?= # ( String \" lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),has_subject(\" lunch \")))","qid":"9ccc6f17-7031-4c32-926c-9e68bddd3fec.0"}
{"source":"Schedule a conference with James ' manager and James and Mary on Jan 16","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" James \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" James \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Mary \" ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( MD :day # ( Number 16 ) :month # ( Month \" JANUARY \" ) ) ) ) :subject ( ?= # ( String \" conference \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Mary \"),with_attendee(FindManager(\" James \")),with_attendee(\" James \"),has_subject(\" conference \"),starts_at(MD(month=\" JANUARY \",day=16))))","qid":"33276341-e760-4fb9-acc6-dfa73f49d65a.2"}
{"source":"Set up a meeting with my reports","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindReports :recipient ( toRecipient ( CurrentUser ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindReports(recipient=CurrentUser())))","qid":"4d0fee8b-3ed8-442d-ac9d-67a32dcf3fa7.2"}
{"source":"I need to schedule a new meeting with my boss .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindManager(CurrentUser())))","qid":"130d0cac-7465-4aea-82b1-46732e68e357.0"}
{"source":"Let 's do a dinner with Carmen and her supervisor for tomorrow at 7 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Carmen \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Carmen \" ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 7 ) ) ) ) :subject ( ?= # ( String \" dinner \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Carmen \"),with_attendee(FindManager(\" Carmen \")),has_subject(\" dinner \"),starts_at(Tomorrow()),starts_at(NumberPM(7))))","qid":"bdab22e2-1bc8-447c-9170-ad67df19d1b5.0"}
{"source":"I have to put aside some time for my team next week .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( NextWeekList ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(NextWeekList())))","qid":"b77d37fa-b038-46b1-b890-db734dc71dab.4"}
{"source":"Can I set up a meeting for Monday with Rebecca 's manager ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Rebecca \" ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Rebecca \")),starts_at(NextDOW(\" MONDAY \"))))","qid":"6be5a542-5ece-49e8-9b0c-268f52ed19c7.0"}
{"source":"Can you also add a follow up with Jake an dhis manager and Eli and hers ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Eli \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Eli \" ) ) ) ) ) ) ) ) :subject ( ?= # ( String \" follow up \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Eli \")),with_attendee(\" Eli \"),with_attendee(\" Jake \"),with_attendee(FindManager(\" Jake \")),has_subject(\" follow up \")))","qid":"06735308-e932-4767-8d0d-76e50f5cd440.1"}
{"source":"I want to meet with LIlly 's manager for 30 minutes on July 22 nd .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" LIlly \" ) ) ) ) ) ) ) :duration ( ?= ( toMinutes # ( Number 30.0 ) ) ) :start ( Constraint[DateTime] :date ( ?= ( MD :day # ( Number 22 ) :month # ( Month \" JULY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" LIlly \")),starts_at(MD(month=\" JULY \",day=22)),has_duration(toMinutes(30))))","qid":"a2f2b680-c77d-4fc1-8a02-31b8b280a1e4.2"}
{"source":"schedule a meeting with the team of david crim","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" david crim \" ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindTeamOf(recipient=\" david crim \")))","qid":"7e8df665-05c9-4238-a79d-74ba80570fe0.0"}
{"source":"Make a Workshop Planning with Jennifer , her supervisor , Elli and her boss","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jennifer \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jennifer \" ) ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Elli \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Elli \" ) ) ) ) ) ) ) ) :subject ( ?= # ( String \" Workshop Planning \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Elli \")),with_attendee(\" Elli \"),with_attendee(\" Jennifer \"),with_attendee(FindManager(\" Jennifer \")),has_subject(\" Workshop Planning \")))","qid":"fb675d59-15af-4ddf-a4b4-e7291e685515.2"}
{"source":"Ok set up a team meeting with Jennifer Watts and her team for tomorrow","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jennifer Watts \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jennifer Watts \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) :subject ( ?= # ( String \" team meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jennifer Watts \"),with_attendee(FindTeamOf(recipient=\" Jennifer Watts \")),has_subject(\" team meeting \"),starts_at(Tomorrow())))","qid":"ca5c3ac1-b192-492d-b9ec-89f70c4689ab.4"}
{"source":"Add a meeting with Bill and his boss day after tomorrow .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Bill \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Bill \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( adjustByPeriod ( Tomorrow ) ( toDays # ( Number 1 ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Bill \"),with_attendee(FindManager(\" Bill \")),starts_at(adjustByPeriod(Tomorrow(),toDays(1)))))","qid":"decb2e6b-9603-4c33-8b90-d871f9cabf7c.4"}
{"source":"I have lunch with my boss at 1 pm on Thursday but there is not an end time for that , it 's not a meeting .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" THURSDAY \" ) ) :time ( NumberPM :number # ( Number 1 ) ) ) ) :subject ( ?= # ( String \" lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),has_subject(\" lunch \"),starts_at(NextDOW(\" THURSDAY \")),starts_at(NumberPM(1))))","qid":"25e0009f-3b3c-4b75-8f4c-5b398f3c0a80.2"}
{"source":"create drinks with boss on tuesday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) ) ) :subject ( ?= # ( String \" drinks \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),has_subject(\" drinks \"),starts_at(NextDOW(\" TUESDAY \"))))","qid":"131711fb-d9a5-4438-8f3d-304e8c686555.0"}
{"source":"Make an event with Watts and her team","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Watts \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Watts \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Watts \"),with_attendee(FindTeamOf(recipient=\" Watts \"))))","qid":"4bd9fe4b-f0a7-4093-9135-150dc019fe57.2"}
{"source":"Make a meeting with Matt and Mary and ensure you invite both their bosses","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Matt \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Matt \" ) ) ) ) ) ) ) ) ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Mary \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Mary \" ) ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Matt \"),with_attendee(FindManager(\" Matt \")),with_attendee(\" Mary \"),with_attendee(FindManager(\" Mary \"))))","qid":"151c8744-6698-4b55-a7da-a2c868fc8ecc.2"}
{"source":"Add a meeting with my boss for Monday of next week .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( DowOfWeekNew :dow # ( DayOfWeek \" MONDAY \" ) :week ( NextWeekList ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),starts_at(DowOfWeekNew(dow=DayOfWeek(\" MONDAY \"),week=NextWeekList()))))","qid":"f9000bcb-1d52-4621-b005-758447b2554c.0"}
{"source":"Schedule a meeting with Cheryl 's manager today .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Cheryl \" ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Today ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Cheryl \")),starts_at(Today())))","qid":"4cfd0514-2e11-49ad-94e2-f57894e95d48.3"}
{"source":"I am meeting Jane and her manager on Friday noon","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jane \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jane \" ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( Noon ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jane \"),with_attendee(FindManager(\" Jane \")),starts_at(NextDOW(\" FRIDAY \")),starts_at(Noon())))","qid":"f2d554f7-df59-411f-ab17-762ca92bdd3e.0"}
{"source":"can you please add a meeting with the boss tomorrow at 2 pm ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 2 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),starts_at(Tomorrow()),starts_at(NumberPM(2))))","qid":"265e16b4-f95d-43b0-85db-f1c366f9720e.0"}
{"source":"Thanks now add meeting on the 2 nd with my team","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( nextDayOfMonth ( Today ) # ( Number 2 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(nextDayOfMonth(Today(),2))))","qid":"d0802159-4fb7-4fc5-b219-b7cc3de8e8e7.2"}
{"source":"I need an appointment with Tony and his team tomorrow at 3 .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Tony \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Tony \" ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 3 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Tony \"),with_attendee(FindTeamOf(recipient=\" Tony \")),starts_at(Tomorrow()),starts_at(NumberPM(3))))","qid":"c29d36ce-d427-42c6-b3ad-c673daf78463.4"}
{"source":"Create a meeting with Charles and his team tonight","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Charles \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Charles \" ) ) ) ) ) ) ) ) :start ( DateTimeConstraint :constraint ( Night ) :date ( Today ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Charles \"),with_attendee(FindTeamOf(recipient=\" Charles \")),starts_at(Night()),starts_at(Today())))","qid":"30c878ac-2ef7-4906-8911-2d8c75a8037a.0"}
{"source":"I will be meeting with Abby and her boss tomorrow","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Abby \"),with_attendee(FindManager(\" Abby \")),starts_at(Tomorrow())))","qid":"42dd4b6d-573c-4e6c-af9c-9da3ec0a04d0.3"}
{"source":"Can you put a meeting with my team next week ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( NextWeekList ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(NextWeekList())))","qid":"982bca97-6d7b-4a6f-9682-3ba637a2c919.4"}
{"source":"I 'm going to go over the bills with my boss this morning .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( DateTimeConstraint :constraint ( Morning ) :date ( Today ) ) :subject ( ?= # ( String \" go over the bills \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),has_subject(\" go over the bills \"),starts_at(Morning()),starts_at(Today())))","qid":"9336540c-5ac2-4f05-ad92-f3b7ce796cb2.0"}
{"source":"I 'll be meeting with the team on Friday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(NextDOW(\" FRIDAY \"))))","qid":"ef822b59-4c82-4794-8922-92db6bbd90c8.4"}
{"source":"Okay , then schedule a meeting with Jake and his boss for 2 pm tomorrow .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 2 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jake \"),with_attendee(FindManager(\" Jake \")),starts_at(Tomorrow()),starts_at(NumberPM(2))))","qid":"812c244d-7162-4f2d-b94d-8b12c080898d.3"}
{"source":"I am going to be with Abby and her Skip tomorrow","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Abby \"),with_attendee(FindManager(FindManager(\" Abby \"))),starts_at(Tomorrow())))","qid":"8161c7bc-78dd-416c-b902-8ae0e4e042c0.2"}
{"source":"Make an event with Abby 's team","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindTeamOf(recipient=\" Abby \")))","qid":"e18e1011-1398-470f-af42-b2eeab617aae.3"}
{"source":"Create a staff meeting with my boss on Friday at 8 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( NumberPM :number # ( Number 8 ) ) ) ) :subject ( ?= # ( String \" staff meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),has_subject(\" staff meeting \"),starts_at(NextDOW(\" FRIDAY \")),starts_at(NumberPM(8))))","qid":"3f8e59bc-72c6-4bb6-956f-7076776d72fb.3"}
{"source":"Book a time to talk with Jill and my supervisor on Friday morning .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jill \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) ) :start ( DateTimeConstraint :constraint ( Morning ) :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) ) :subject ( ?= # ( String \" talk \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jill \"),with_attendee(FindManager(CurrentUser())),has_subject(\" talk \"),starts_at(Morning()),starts_at(NextDOW(\" FRIDAY \"))))","qid":"fcf74537-8fab-47ad-8b89-0b37330df162.0"}
{"source":"I 'd like for a quick talk with Frank 's manager to be scheduled for tomorrow","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( EventOnDate :date ( Tomorrow ) :event ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Frank \" ) ) ) ) ) ) ) :subject ( ?= # ( String \" quick talk \" ) ) ) ) ) ) )","target":"CreateEvent(AND(starts_at(Tomorrow()),with_attendee(FindManager(\" Frank \")),has_subject(\" quick talk \")))","qid":"7125bbb0-3664-492d-acff-0105cd40151c.0"}
{"source":"Find the appointment time on Friday with the my branch manager .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),starts_at(NextDOW(\" FRIDAY \"))))","qid":"560739ff-71f8-43d4-94ea-727eeef21092.0"}
{"source":"put meet with my boos tomorrow morning 8 am","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberAM :number # ( Number 8 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),starts_at(Tomorrow()),starts_at(NumberAM(8))))","qid":"2ef4518f-6a04-489f-8833-8a55d9af4bc7.3"}
{"source":"Put Abby Gonano 's team for a meeting","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby Gonano \" ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindTeamOf(recipient=\" Abby Gonano \")))","qid":"d5a823b0-a1e2-480b-bf09-11e5051bd926.0"}
{"source":"Ok , create a meeting with Jim and his manager please","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jim \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jim \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jim \"),with_attendee(FindManager(\" Jim \"))))","qid":"6b4ee39c-7e64-4491-bc4f-6ebc6d6c3ad1.1"}
{"source":"I need an event at 3 pm tomorrow with Abby and her Skip","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 3 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Abby \"),with_attendee(FindManager(FindManager(\" Abby \"))),starts_at(Tomorrow()),starts_at(NumberPM(3))))","qid":"72c99e2c-c34c-42df-8f8d-236493e2ad2f.1"}
{"source":"Make a lunch appointment with my boss today .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Today ) ) ) :subject ( ?= # ( String \" lunch appointment \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),has_subject(\" lunch appointment \"),starts_at(Today())))","qid":"4cc14dd7-40a3-40f2-ac70-f3d42d6fabe3.4"}
{"source":"I need to schedule an appointment with my team for tomorrow","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(Tomorrow())))","qid":"b64f4a60-2fcf-4074-94c5-fa728466c946.0"}
{"source":"I need a meeting with Jake and his skip ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jake \"),with_attendee(FindManager(FindManager(\" Jake \")))))","qid":"3568c0cb-42b8-4042-8d28-aa5e02534610.3"}
{"source":"make a meeting with Dan 's team","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Dan \" ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindTeamOf(recipient=\" Dan \")))","qid":"a1df7ca6-e4a1-4725-bab2-8fb8d2af6e95.1"}
{"source":"make a meeting with david lax 's reports damon strater","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindReports :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" david lax \" ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindReports(recipient=refer(Recipient?(name=LIKE(david lax))))))","qid":"3b2f1887-52ee-405a-8508-3b8b980260b0.1"}
{"source":"I need a meeting with Abby Gonano and her team","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby Gonano \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby Gonano \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Abby Gonano \"),with_attendee(FindTeamOf(recipient=\" Abby Gonano \"))))","qid":"bd4566a2-abde-4668-87f0-eee05ae13cb9.0"}
{"source":"Schedule a strategy meeting with Kim 's report on Thursday at 3 : 00 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindReports :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim \" ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" THURSDAY \" ) ) :time ( NumberPM :number # ( Number 3 ) ) ) ) :subject ( ?= # ( String \" strategy meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindReports(recipient=refer(Recipient?(name=LIKE(Kim))))),has_subject(\" strategy meeting \"),starts_at(NextDOW(\" THURSDAY \")),starts_at(NumberPM(3))))","qid":"2906a47a-bec4-4963-8e1a-80fe12f56676.3"}
{"source":"Set up a meeting with Jesse and his skip this afternoon .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jesse \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jesse \" ) ) ) ) ) ) ) ) ) :start ( DateTimeConstraint :constraint ( Afternoon ) :date ( Today ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jesse \"),with_attendee(FindManager(FindManager(\" Jesse \"))),starts_at(Afternoon()),starts_at(Today())))","qid":"4f8631ff-52ad-4812-a9fa-b04ba2d67314.0"}
{"source":"schedule meeting with team on Saturday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" SATURDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(NextDOW(\" SATURDAY \"))))","qid":"4343bb57-7be1-4e02-b3fd-5779619c41ac.5"}
{"source":"I 'm meeting with Bill and his manager tomorrow at 10 AM . Add that to my calandar , please .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Bill \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Bill \" ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberAM :number # ( Number 10.0 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Bill \"),with_attendee(FindManager(\" Bill \")),starts_at(Tomorrow()),starts_at(NumberAM(10))))","qid":"03aaa06f-0452-4190-8123-88a66f06bc0a.0"}
{"source":"I need an appointment with Cheese 's boss at the office for tomorrow at 5 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Cheese \" ) ) ) ) ) ) ) :location ( ?= # ( LocationKeyphrase \" the office \" ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 5 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Cheese \")),at_location(\" the office \"),starts_at(Tomorrow()),starts_at(NumberPM(5))))","qid":"4ae1a4fc-5084-4bd2-b5f7-3982ce17fbdd.0"}
{"source":"Add Smash Game Night with Elli , her manager , Kim and her surpervisor","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Elli \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Elli \" ) ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim \" ) ) ) ) ) ) ) ) :subject ( ?= # ( String \" Smash Game Night \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Kim \")),with_attendee(\" Kim \"),with_attendee(\" Elli \"),with_attendee(FindManager(\" Elli \")),has_subject(\" Smash Game Night \")))","qid":"52c1c401-9bcc-45ee-b5c8-a2f785013271.0"}
{"source":"Make a meeting with my manager for tomorrow please","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),starts_at(Tomorrow())))","qid":"854b3311-e06c-45f7-a4fb-b28d3067886c.0"}
{"source":"i need a meeting with lax , his boss , jennifer and her boss","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" lax \" ) ) ) ) ) ) ( andConstraint ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" lax \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" jennifer \" ) ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" jennifer \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" jennifer \")),with_attendee(\" lax \"),with_attendee(FindManager(\" lax \")),with_attendee(\" jennifer \")))","qid":"b529fa53-8baf-4543-ba9d-698ca8cd1947.1"}
{"source":"Thanks . Please invite my manager to a meeting today .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Today ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),starts_at(Today())))","qid":"685ba868-30da-4588-a1d8-97609b7995f7.1"}
{"source":"Put lunch with Jane 's boss in her office down for next Wednesday at noon .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jane \" ) ) ) ) ) ) ) :location ( ?= # ( LocationKeyphrase \" her office \" ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" WEDNESDAY \" ) ) :time ( Noon ) ) ) :subject ( ?= # ( String \" lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Jane \")),at_location(\" her office \"),has_subject(\" lunch \"),starts_at(NextDOW(\" WEDNESDAY \")),starts_at(Noon())))","qid":"c113860e-491b-4e5e-8917-96e57a48b3a1.0"}
{"source":"Add dinner with my boss to my calendar for tonight","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( DateTimeConstraint :constraint ( Night ) :date ( Today ) ) :subject ( ?= # ( String \" dinner \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),has_subject(\" dinner \"),starts_at(Night()),starts_at(Today())))","qid":"f112a74d-6a98-4d2e-a34a-faa68f58eef3.0"}
{"source":"Can you make me a appointment with Robby , Rob and Ray and her manager","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Robby \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Robby \" ) ) ) ) ) ) ) ) ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Rob \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Rob \" ) ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Robby \"),with_attendee(FindManager(\" Robby \")),with_attendee(\" Rob \"),with_attendee(FindManager(\" Rob \"))))","qid":"68346318-e301-4c96-b0f7-5a92db92fdf9.2"}
{"source":"Make a new meeting for June 1 with Julie 's manager at noon .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Julie \" ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( MD :day # ( Number 1 ) :month # ( Month \" JUNE \" ) ) :time ( Noon ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Julie \")),starts_at(MD(month=\" JUNE \",day=1)),starts_at(Noon())))","qid":"864d7fc2-c1f0-4557-9f49-c7a572953c1b.3"}
{"source":"I 've got to put aside time for my team today .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Today ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(Today())))","qid":"ba18d738-d475-4383-8bac-ac5dfdf4b293.2"}
{"source":"Make a Training Video event with my team but without Abby","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) ( AttendeeListExcludesRecipient :recipient ( ?= ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ) ) :subject ( ?= # ( String \" Training Video \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),avoid_attendee(refer(Recipient?(name=LIKE(Abby)))),has_subject(\" Training Video \")))","qid":"f5ce36fc-ddba-4320-bcda-a48e62ae502b.0"}
{"source":"I need a meeting with my team tomorrow in Bellevue with a room","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :location ( andConstraint ( ?= # ( LocationKeyphrase \" Bellevue \" ) ) ( roomRequest ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),at_location(\" Bellevue \"),at_location(roomRequest()),starts_at(Tomorrow())))","qid":"79330aab-defe-459c-98e2-de9d4dd0f69d.2"}
{"source":"Make an event with Abby and her boss","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Abby \"),with_attendee(FindManager(\" Abby \"))))","qid":"50dc093a-d6cf-4eea-9afa-f21840e41b23.0"}
{"source":"Never mind that , arrange a meet up with John Stark and his team .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" John Stark \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" John Stark \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" John Stark \"),with_attendee(FindTeamOf(recipient=\" John Stark \"))))","qid":"ca22ef76-5078-4a7e-852e-83b74187442c.1"}
{"source":"Now schedule an ice cream party for my team tonight , but do n't include that jerk Dan Marton","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) ( AttendeeListExcludesRecipient :recipient ( ?= ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Dan Marton \" ) ) ) ) ) ) ) ) :start ( DateTimeConstraint :constraint ( Night ) :date ( Today ) ) :subject ( ?= # ( String \" ice cream party \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),avoid_attendee(refer(Recipient?(name=LIKE(Dan Marton)))),has_subject(\" ice cream party \"),starts_at(Night()),starts_at(Today())))","qid":"01b2b214-06b0-4bd6-b58c-386599125d0d.3"}
{"source":"Schedule a meeting with my manager on Friday afternoon .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( DateTimeConstraint :constraint ( Afternoon ) :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),starts_at(Afternoon()),starts_at(NextDOW(\" FRIDAY \"))))","qid":"c6c6a3ac-9ce6-40db-99fd-53aaba291708.0"}
{"source":"I need to schedule a coffee date with Jake 's skip","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) ) ) :subject ( ?= # ( String \" coffee date \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(FindManager(\" Jake \"))),has_subject(\" coffee date \")))","qid":"2270f5a8-4155-441a-b8d5-725f741479d7.0"}
{"source":"I want to schedule a party with my team that is not on the weekend","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( Constraint[Date] :dayOfWeek ( negate ( Weekend ) ) ) ) :subject ( ?= # ( String \" party \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),has_subject(\" party \"),avoid_start(Date?(dayOfWeek=Weekend()))))","qid":"8051fde2-4379-4f5f-87ea-9bae57798c72.0"}
{"source":"My manager will be in the office for 4 days starting monday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :location ( ?= # ( LocationKeyphrase \" the office \" ) ) :nonEmptyBase ( EventAllDayStartingDateForPeriod :event ( Constraint[Event] ) :period ( toDays # ( Number 4 ) ) :startDate ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) ) ) ) ) )","target":"CreateEvent(AND(has_duration(toDays(4)),starts_at(NextDOW(\" MONDAY \")),starts_at(Time(hour=0,minute=0)),with_attendee(FindManager(CurrentUser())),at_location(\" the office \")))","qid":"3cf71447-f18c-4d0b-9d71-bb91f4acaff5.0"}
{"source":"make a rapid eating event with mirela and her supervisor at 4 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" mirela \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" mirela \" ) ) ) ) ) ) ) ) :start ( ?= ( NextTime :time ( NumberPM :number # ( Number 4 ) ) ) ) :subject ( ?= # ( String \" rapid eating event \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" mirela \"),with_attendee(FindManager(\" mirela \")),has_subject(\" rapid eating event \"),starts_at(NextTime(time=NumberPM(4)))))","qid":"005cf941-4ef4-4aeb-93e5-7be335ebbb23.0"}
{"source":"Create a I 'm gon na quit soon meeting with my boss","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :subject ( ?= # ( String \" I'm gonna quit soon meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),has_subject(\" I'm gonna quit soon meeting \")))","qid":"72509af9-68c8-496a-b018-812a677fe250.0"}
{"source":"Can you schedule a meeting with Kim 's team for me ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim \" ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindTeamOf(recipient=\" Kim \")))","qid":"465b99a9-1ad6-44d1-97ee-93adeb2f9354.0"}
{"source":"Set up a meeting on Friday at noon with Robert , Amelia , and Frank with their bosses .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( andConstraint ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Robert \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Robert \" ) ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Amelia \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Amelia \" ) ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Frank \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Frank \" ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( Noon ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Frank \")),with_attendee(\" Frank \"),with_attendee(FindManager(\" Amelia \")),with_attendee(\" Amelia \"),with_attendee(\" Robert \"),with_attendee(FindManager(\" Robert \")),starts_at(NextDOW(\" FRIDAY \")),starts_at(Noon())))","qid":"13e4a770-f68f-4b62-a65f-9de9f869e49e.2"}
{"source":"I need to have a meeting with my team on Saturday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" SATURDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(NextDOW(\" SATURDAY \"))))","qid":"024aeda4-5354-4b20-8344-9c6614862a73.0"}
{"source":"make me an event with abby and her manager next week","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" abby \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" abby \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( NextWeekList ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" abby \"),with_attendee(FindManager(\" abby \")),starts_at(NextWeekList())))","qid":"d356fb34-a95c-49e4-9df3-159f72475878.0"}
{"source":"Set up a meeting with the team today .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Today ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(Today())))","qid":"4fb3ed33-2391-4962-8bbe-760e91a3c46d.4"}
{"source":"I 'm meeting with Sally 's team when my interview is over .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Sally \" ) ) ) ) ) ) ) :start ( ?= ( :end ( singleton ( :results ( FindEventWrapperWithDefaults :constraint ( Constraint[Event] :subject ( ?~= # ( String \" interview \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=\" Sally \")),starts_at(:end(FindEvents(has_subject(\" interview \"))))))","qid":"3dc93931-ecc4-4d70-9d7f-c89858779d8f.0"}
{"source":"Make an event with sam and his manager tomorrow .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" sam \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" sam \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" sam \"),with_attendee(FindManager(\" sam \")),starts_at(Tomorrow())))","qid":"23208329-0227-48fc-bbfb-994a617b220a.4"}
{"source":"I will be with Jake and her manager tomorrow","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jake \"),with_attendee(FindManager(\" Jake \")),starts_at(Tomorrow())))","qid":"594fe889-db7f-4295-81bd-0d4716421aa4.2"}
{"source":"Please make an appointment for tomorrow at 9 am with Steve and his boss .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Steve \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Steve \" ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberAM :number # ( Number 9 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Steve \"),with_attendee(FindManager(\" Steve \")),starts_at(Tomorrow()),starts_at(NumberAM(9))))","qid":"6a10bbf9-b9bb-48cd-88c1-ef827d9b72b4.1"}
{"source":"I need a review meeting with Josh and his supervisor for Friday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Josh \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Josh \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) ) ) :subject ( ?= # ( String \" review meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Josh \"),with_attendee(FindManager(\" Josh \")),has_subject(\" review meeting \"),starts_at(NextDOW(\" FRIDAY \"))))","qid":"661cdeb6-32aa-4f3d-ac8e-ca041b65a2f0.0"}
{"source":"Add to schedule a sales pitch lunch with John and his manager on Friday at 12 : 00 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" John \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" John \" ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( NumberPM :number # ( Number 12 ) ) ) ) :subject ( ?= # ( String \" sales pitch lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" John \"),with_attendee(FindManager(\" John \")),has_subject(\" sales pitch lunch \"),starts_at(NextDOW(\" FRIDAY \")),starts_at(NumberPM(12))))","qid":"e6899171-6ae0-40e1-bd61-1d5485e04879.0"}
{"source":"Make golf with Jake and his Manager an event for next weekend please .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( NextWeekend ) ) :subject ( ?= # ( String \" golf \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jake \"),with_attendee(FindManager(\" Jake \")),has_subject(\" golf \"),starts_at(NextWeekend())))","qid":"e71e3656-a30c-4ff3-b7a4-3e2d57be27e8.3"}
{"source":"Schedule rehearsal with the group on 15 at 8 .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( nextDayOfMonth ( Today ) # ( Number 15 ) ) :time ( NumberAM :number # ( Number 8 ) ) ) ) :subject ( ?= # ( String \" rehearsal \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),has_subject(\" rehearsal \"),starts_at(nextDayOfMonth(Today(),15)),starts_at(NumberAM(8))))","qid":"b955b7d0-29e4-48fc-ae63-9185379b2dc6.0"}
{"source":"schedule a 9 am meeting with Simon 's manager","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Simon \" ) ) ) ) ) ) ) :start ( ?= ( NextTime :time ( NumberAM :number # ( Number 9 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Simon \")),starts_at(NextTime(time=NumberAM(9)))))","qid":"7ec87bac-ace8-47c9-9fd2-f618a8ee071a.4"}
{"source":"create a meeting with David Crim 's team on Monday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" David Crim \" ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=\" David Crim \")),starts_at(NextDOW(\" MONDAY \"))))","qid":"430a52d3-382b-4df6-a73f-6a04cafa1780.1"}
{"source":"Can you add anna to a dinner meeting and also add her boss","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" anna \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" anna \" ) ) ) ) ) ) ) ) :subject ( ?= # ( String \" dinner meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" anna \"),with_attendee(FindManager(\" anna \")),has_subject(\" dinner meeting \")))","qid":"202c69ff-ea5f-4cb3-a3c5-2f1e463a6431.2"}
{"source":"Abby and his supervisor need to be here tomorrow at 3 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 3 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Abby \"),with_attendee(FindManager(\" Abby \")),starts_at(Tomorrow()),starts_at(NumberPM(3))))","qid":"07e9d682-a490-46f4-ab26-2f0b561d3031.4"}
{"source":"Please add a meeting with Jake and his boss and Kim and their boss for the 15 th also .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) ) ) ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim \" ) ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( nextDayOfMonth ( Today ) # ( Number 15 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jake \"),with_attendee(FindManager(\" Jake \")),with_attendee(\" Kim \"),with_attendee(FindManager(\" Kim \")),starts_at(nextDayOfMonth(Today(),15))))","qid":"06735308-e932-4767-8d0d-76e50f5cd440.2"}
{"source":"Thanks . I also have a meeting on the 30 th that involves Elli , Fred and their supervisors .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Elli \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Elli \" ) ) ) ) ) ) ) ) ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Fred \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Fred \" ) ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( nextDayOfMonth ( Today ) # ( Number 30.0 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Elli \"),with_attendee(FindManager(\" Elli \")),with_attendee(\" Fred \"),with_attendee(FindManager(\" Fred \")),starts_at(nextDayOfMonth(Today(),30))))","qid":"4162a25a-8a60-4ea4-83f0-d9738a00be4d.3"}
{"source":"Create an event for dinner with co - worker between 7 - 9 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :end ( ?= ( TimeAfterDateTime :dateTime ( NextTime :time ( NumberPM :number # ( Number 7 ) ) ) :time ( NumberPM :number # ( Number 9 ) ) ) ) :start ( ?= ( NextTime :time ( NumberPM :number # ( Number 7 ) ) ) ) :subject ( ?= # ( String \" dinner \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),has_subject(\" dinner \"),starts_at(NextTime(time=NumberPM(7))),ends_at(AND(GE(NextTime(time=NumberPM(7))),NumberPM(9)))))","qid":"8730a10c-0c9e-4520-bc2c-d5ef29c0f6a3.2"}
{"source":"Set up a dinner with Patricio and his supervisor","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Patricio \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Patricio \" ) ) ) ) ) ) ) ) :subject ( ?= # ( String \" dinner \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Patricio \"),with_attendee(FindManager(\" Patricio \")),has_subject(\" dinner \")))","qid":"4fe55504-3228-49d1-9f9a-68fff4d8beef.3"}
{"source":"The final financial statements are processed and I need to speak to the plan managers . Would you scedule an in person meeting with both Doug and Jan and their immediate supervisors ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Doug \" ) ) ) ) ) ) ( andConstraint ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Doug \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jan \" ) ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jan \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Jan \")),with_attendee(\" Doug \"),with_attendee(FindManager(\" Doug \")),with_attendee(\" Jan \")))","qid":"f7008642-4ff7-4728-8157-1743166685b3.0"}
{"source":"I will be with my Team for Marketing all of next week","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :nonEmptyBase ( EventAllDayForDateRange :dateRange ( NextWeekList ) :event ( Constraint[Event] :subject ( ?= # ( String \" Marketing \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),has_subject(\" Marketing \"),spans_time(NextWeekList())))","qid":"4ffa4f3c-8f49-47b1-b07a-b881670b4baf.3"}
{"source":"Set up an appointment to see my team on Monday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(NextDOW(\" MONDAY \"))))","qid":"b53069ea-0155-480f-a291-363ef4d9d21f.2"}
{"source":"Set up a training session for tomorrow at 2 pm through the end of the day and invite my team","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :end ( ?= ( TimeAfterDateTime :dateTime ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 2 ) ) ) :time ( EndOfWorkDay ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 2 ) ) ) ) :subject ( ?= # ( String \" training session \" ) ) ) ) ) )","target":"CreateEvent(AND(ends_at(AND(GE(DateTime?(date=Tomorrow(),time=NumberPM(2))),EndOfWorkDay())),with_attendee(FindTeamOf(recipient=CurrentUser())),has_subject(\" training session \"),starts_at(Tomorrow()),starts_at(NumberPM(2))))","qid":"b98921d0-6073-45a6-9259-cf3e5e841b78.0"}
{"source":"I have amanda and her boss coming in on Friday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" amanda \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" amanda \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" amanda \"),with_attendee(FindManager(\" amanda \")),starts_at(NextDOW(\" FRIDAY \"))))","qid":"8161c7bc-78dd-416c-b902-8ae0e4e042c0.4"}
{"source":"Make a meeting with my team","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindTeamOf(recipient=CurrentUser())))","qid":"b5646ed4-0711-4517-bb74-71c409e57c8d.3"}
{"source":"Mark the calendar for lunch with Faith , Yvette and their bosses this Sunday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Faith \" ) ) ) ) ) ) ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Yvette \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Faith \" ) ) ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Yvette \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" SUNDAY \" ) ) ) ) :subject ( ?= # ( String \" lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Yvette \")),with_attendee(\" Faith \"),with_attendee(\" Yvette \"),with_attendee(FindManager(\" Faith \")),has_subject(\" lunch \"),starts_at(NextDOW(\" SUNDAY \"))))","qid":"d5571e65-c4da-45e8-9c07-af0d2c2b6a98.2"}
{"source":"Great . After the lunch on Monday please set up a meeting with Dave 's team .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Dave \" ) ) ) ) ) ) ) :start ( ?= ( :end ( singleton ( :results ( FindEventWrapperWithDefaults :constraint ( EventOnDate :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :event ( Constraint[Event] :subject ( ?~= # ( String \" lunch \" ) ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=\" Dave \")),starts_at(:end(FindEvents(AND(starts_at(NextDOW(\" MONDAY \")),has_subject(\" lunch \")))))))","qid":"6bc65b4c-c99c-424b-86fd-9cc38e4efec1.2"}
{"source":"Can you make a meeting with Tony and his team ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Tony \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Tony \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Tony \"),with_attendee(FindTeamOf(recipient=\" Tony \"))))","qid":"abd6f1fa-306a-4fd6-97c9-d1a7902232ba.3"}
{"source":"Create an event with mary and her team","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" mary \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" mary \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" mary \"),with_attendee(FindTeamOf(recipient=\" mary \"))))","qid":"f1922c66-3bc2-4a6a-a374-9c89d428093d.0"}
{"source":"After the budget meeting I would like to see Alice and her team .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Alice \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Alice \" ) ) ) ) ) ) ) ) :start ( ?= ( :end ( singleton ( :results ( FindEventWrapperWithDefaults :constraint ( Constraint[Event] :subject ( ?~= # ( String \" budget meeting \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Alice \"),with_attendee(FindTeamOf(recipient=\" Alice \")),starts_at(:end(FindEvents(has_subject(\" budget meeting \"))))))","qid":"c1beb46c-c44b-4515-8afd-b98bda1a668f.3"}
{"source":"Put in lunch tomorrow at 12 pm with Gary 's boss .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Gary \" ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 12 ) ) ) ) :subject ( ?= # ( String \" lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Gary \")),has_subject(\" lunch \"),starts_at(Tomorrow()),starts_at(NumberPM(12))))","qid":"08243634-1162-4140-b28e-6bfe4e44292e.0"}
{"source":"please make a meeting with jesse and team","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" jesse \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" jesse \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" jesse \"),with_attendee(FindTeamOf(recipient=\" jesse \"))))","qid":"8ea4d433-1a04-4e8f-ac8d-da2ea175b06c.4"}
{"source":"i need an emergency meeting today at 2 pm with my manager","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Today ) :time ( NumberPM :number # ( Number 2 ) ) ) ) :subject ( ?= # ( String \" emergency meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),has_subject(\" emergency meeting \"),starts_at(Today()),starts_at(NumberPM(2))))","qid":"4465d2f3-c389-4625-8730-07596fac55d8.0"}
{"source":"Add Catfish Fish Fry to the schedule on Friday at 5 pm with Joy and her boss .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Joy \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Joy \" ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( NumberPM :number # ( Number 5 ) ) ) ) :subject ( ?= # ( String \" Catfish Fish Fry \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Joy \"),with_attendee(FindManager(\" Joy \")),has_subject(\" Catfish Fish Fry \"),starts_at(NextDOW(\" FRIDAY \")),starts_at(NumberPM(5))))","qid":"935daec2-6c07-4c61-bb7f-8f621cc2d572.3"}
{"source":"Put on schedule meeting with team on Saturday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" SATURDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(NextDOW(\" SATURDAY \"))))","qid":"0cc663a4-65cb-4e3d-8c31-41d5d6d4366e.0"}
{"source":"Make a meeting with Abby and her Skip","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Abby \"),with_attendee(FindManager(FindManager(\" Abby \")))))","qid":"c165287b-98fb-4ac5-bb93-8e271f6ef471.2"}
{"source":"Please add an event with Matt 's team after the meeting with my team .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Matt \" ) ) ) ) ) ) ) :start ( ?= ( :end ( singleton ( :results ( FindEventWrapperWithDefaults :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=\" Matt \")),starts_at(:end(FindEvents(with_attendee(FindTeamOf(recipient=CurrentUser())))))))","qid":"3b5285df-2bae-4ae0-b3d9-4707e06ac49d.0"}
{"source":"Create a meeting with Robert and his boss this Friday at 6 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Robert \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Robert \" ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( NumberPM :number # ( Number 6 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Robert \"),with_attendee(FindManager(\" Robert \")),starts_at(NextDOW(\" FRIDAY \")),starts_at(NumberPM(6))))","qid":"52f81aae-9486-4a98-b6b1-454e25602e40.0"}
{"source":"Schedule a movie party with my team , but do n't include Jesse .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) ( AttendeeListExcludesRecipient :recipient ( ?= ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jesse \" ) ) ) ) ) ) ) ) :subject ( ?= # ( String \" movie party \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),avoid_attendee(refer(Recipient?(name=LIKE(Jesse)))),has_subject(\" movie party \")))","qid":"1dc47a18-9fd7-4532-946e-ea1588f94420.2"}
{"source":"I need to make a prep meeting with Tom and his boss and my boss tomorrow .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Tom \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Tom \" ) ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) :subject ( ?= # ( String \" prep meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),with_attendee(\" Tom \"),with_attendee(FindManager(\" Tom \")),has_subject(\" prep meeting \"),starts_at(Tomorrow())))","qid":"e2cac88d-2438-4879-84e3-5b6db0acec16.3"}
{"source":"fix a purchase time in this weekend with Jennifer 's team .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jennifer \" ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ThisWeekend ) ) :subject ( ?= # ( String \" purchase time \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=\" Jennifer \")),has_subject(\" purchase time \"),starts_at(ThisWeekend())))","qid":"f7920359-a020-43bc-975a-62ab582741f0.0"}
{"source":"Yes , schedule me for lunch with my boss Friday at 1 p.m. and show me as busy during that time .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :showAs ( ?= # ( ShowAsStatus \" Busy \" ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( NumberPM :number # ( Number 1 ) ) ) ) :subject ( ?= # ( String \" lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(has_status(ShowAsStatus(\" Busy \")),with_attendee(FindManager(CurrentUser())),has_subject(\" lunch \"),starts_at(NextDOW(\" FRIDAY \")),starts_at(NumberPM(1))))","qid":"ff0458a6-db31-4a62-aad5-77adde602e3a.0"}
{"source":"Hi , I need you to create an event for my team but do n't invite Jesse","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) ( AttendeeListExcludesRecipient :recipient ( ?= ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jesse \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),avoid_attendee(refer(Recipient?(name=LIKE(Jesse))))))","qid":"3826365a-8a06-4d79-8fb0-6d984645413c.0"}
{"source":"After the budget meeting , I need to meet with Laura 's team .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Laura \" ) ) ) ) ) ) ) :start ( ?= ( :end ( singleton ( :results ( FindEventWrapperWithDefaults :constraint ( Constraint[Event] :subject ( ?~= # ( String \" budget meeting \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=\" Laura \")),starts_at(:end(FindEvents(has_subject(\" budget meeting \"))))))","qid":"9964335c-3309-42dc-bc0a-8e92fbd9aa42.2"}
{"source":"Can you schedule a sales meeting with Carlos and his team tomorrow ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Carlos \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Carlos \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) :subject ( ?= # ( String \" sales meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Carlos \"),with_attendee(FindTeamOf(recipient=\" Carlos \")),has_subject(\" sales meeting \"),starts_at(Tomorrow())))","qid":"1b0d4bd7-4efc-4666-81ac-d6686ddbe484.1"}
{"source":"I need a room . Jake 's team will be there","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) ) :location ( roomRequest ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=\" Jake \")),at_location(roomRequest())))","qid":"1932b26b-5502-4be1-9b06-bdb105342566.0"}
{"source":"I am having lunch with Allen 's manager at 12 tomorrow","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Allen \" ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 12 ) ) ) ) :subject ( ?= # ( String \" lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Allen \")),has_subject(\" lunch \"),starts_at(Tomorrow()),starts_at(NumberPM(12))))","qid":"1dedc32f-3604-4432-b203-ecb2a07f91d8.0"}
{"source":"Create a meeting next week with my boss and Joan .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Joan \" ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( NextWeekList ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),with_attendee(\" Joan \"),starts_at(NextWeekList())))","qid":"71342a95-18fb-48bf-ab0d-ee1dcf0ecf46.0"}
{"source":"Schedule a meeting with Ryan and Ryan 's manager .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Ryan \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Ryan \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Ryan \"),with_attendee(FindManager(\" Ryan \"))))","qid":"3c427d4e-5e40-4d19-a4f9-d9813a74956a.4"}
{"source":"Set up a meeting with Bob 's team right after our regular staff meeting .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Bob \" ) ) ) ) ) ) ) :start ( ?= ( :end ( singleton ( :results ( FindEventWrapperWithDefaults :constraint ( Constraint[Event] :subject ( ?~= # ( String \" regular staff meeting \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=\" Bob \")),starts_at(:end(FindEvents(has_subject(\" regular staff meeting \"))))))","qid":"c1beb46c-c44b-4515-8afd-b98bda1a668f.0"}
{"source":"That looks good , and can you schedule a meeting with Tony 's team after the meeting on the 30 th ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Tony \" ) ) ) ) ) ) ) :start ( ?= ( :end ( singleton ( :results ( FindEventWrapperWithDefaults :constraint ( EventOnDate :date ( nextDayOfMonth ( Today ) # ( Number 30.0 ) ) :event ( Constraint[Event] ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=\" Tony \")),starts_at(:end(FindEvents(starts_at(nextDayOfMonth(Today(),30)))))))","qid":"e1876e30-6602-4b69-b644-ae4ca951b50e.4"}
{"source":"Create a meeting with my manager","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindManager(CurrentUser())))","qid":"886ee853-1d16-4efa-9104-e3f53f78e2d9.0"}
{"source":"I have a meeting with John 's team after breakfast .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" John \" ) ) ) ) ) ) ) :start ( GreaterThanFromStructDateTime :dateTimeConstraint ( ?= ( NextTime :time ( Breakfast ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=\" John \")),starts_at(GT(NextTime(time=Breakfast())))))","qid":"f353e951-600c-497a-894c-44947306950a.0"}
{"source":"Schedule lunch with Jennifer Watts and her team for tomorrow at noon .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jennifer Watts \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jennifer Watts \" ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( Noon ) ) ) :subject ( ?= # ( String \" lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jennifer Watts \"),with_attendee(FindTeamOf(recipient=\" Jennifer Watts \")),has_subject(\" lunch \"),starts_at(Tomorrow()),starts_at(Noon())))","qid":"89083db9-94bd-4601-969f-1fb7211d8e9b.3"}
{"source":"I have a Streamer Interview with Zack and his boss at 1 pm tomorrow .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Zack \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Zack \" ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 1 ) ) ) ) :subject ( ?= # ( String \" Streamer Interview \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Zack \"),with_attendee(FindManager(\" Zack \")),has_subject(\" Streamer Interview \"),starts_at(Tomorrow()),starts_at(NumberPM(1))))","qid":"770af899-2e79-4637-953a-c1b01f9dfa80.3"}
{"source":"Place a meeting with my team on my schedule tomorrow .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(Tomorrow())))","qid":"d3726776-4f51-4eb9-89bd-91cd7e7a683d.4"}
{"source":"After the staff meeting , schedule a meeting with Allan 's team .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Allan \" ) ) ) ) ) ) ) :start ( ?= ( :end ( singleton ( :results ( FindEventWrapperWithDefaults :constraint ( Constraint[Event] :subject ( ?~= # ( String \" staff meeting \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=\" Allan \")),starts_at(:end(FindEvents(has_subject(\" staff meeting \"))))))","qid":"b1ec5c8a-13de-4ea7-a783-e58f4c8f80c3.0"}
{"source":"After my drinks event I need to see Doug 's team .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Doug \" ) ) ) ) ) ) ) :start ( ?= ( :end ( singleton ( :results ( FindEventWrapperWithDefaults :constraint ( Constraint[Event] :subject ( ?~= # ( String \" drinks \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=\" Doug \")),starts_at(:end(FindEvents(has_subject(\" drinks \"))))))","qid":"f353e951-600c-497a-894c-44947306950a.2"}
{"source":"Arrange the schedule for team meeting on friday with my team","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) ) ) :subject ( ?= # ( String \" team meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),has_subject(\" team meeting \"),starts_at(NextDOW(\" FRIDAY \"))))","qid":"b578365f-3640-40a2-b22b-9f84cc26631b.0"}
{"source":"Set up a dinner with Dan Marton 's skip on Tuesday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Dan Marton \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) ) ) :subject ( ?= # ( String \" dinner \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(FindManager(\" Dan Marton \"))),has_subject(\" dinner \"),starts_at(NextDOW(\" TUESDAY \"))))","qid":"eeaa2a16-4d38-4745-b086-c43329ace5bb.4"}
{"source":"Create an event add Johnny , Mary , her Boss , James , and his boss to the meeting on Wednesday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Johnny \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Johnny \" ) ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Mary \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Mary \" ) ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" James \" ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" WEDNESDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" James \"),with_attendee(FindManager(\" Mary \")),with_attendee(\" Mary \"),with_attendee(\" Johnny \"),with_attendee(FindManager(\" Johnny \")),starts_at(NextDOW(\" WEDNESDAY \"))))","qid":"33276341-e760-4fb9-acc6-dfa73f49d65a.1"}
{"source":"I need to schedule a meeting with Angel 's boss 's boss","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Angel \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindManager(FindManager(\" Angel \"))))","qid":"99d53e50-6efa-4a6b-8846-c7307e477c9f.0"}
{"source":"Alright establish a time to talk with my team this afternoon .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( DateTimeConstraint :constraint ( Afternoon ) :date ( Today ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(Afternoon()),starts_at(Today())))","qid":"f5babaeb-16e5-4706-b6f6-ddadfb564ed8.1"}
{"source":"I need a meeting with David Crim and his team .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" David Crim \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" David Crim \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" David Crim \"),with_attendee(FindTeamOf(recipient=\" David Crim \"))))","qid":"c051eb97-70be-4701-af3f-a4518839b6ae.0"}
{"source":"Add lunch with Omar 's boss for 1 PM tomorrow","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Omar \" ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 1 ) ) ) ) :subject ( ?= # ( String \" lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Omar \")),has_subject(\" lunch \"),starts_at(Tomorrow()),starts_at(NumberPM(1))))","qid":"673255d7-b2b3-4fe9-bf63-27811f266a3a.0"}
{"source":"Thanks , can you set up a time to meet with Kim and her Team on Friday ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Kim \"),with_attendee(FindTeamOf(recipient=\" Kim \")),starts_at(NextDOW(\" FRIDAY \"))))","qid":"5bcde706-63c0-4e99-8573-16dda88f105a.4"}
{"source":"I want to set up a team meeting with Danny Phantom 's manager at 4 on the 1 st .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Danny Phantom \" ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( nextDayOfMonth ( Today ) # ( Number 1 ) ) :time ( NumberPM :number # ( Number 4 ) ) ) ) :subject ( ?= # ( String \" team meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Danny Phantom \")),has_subject(\" team meeting \"),starts_at(nextDayOfMonth(Today(),1)),starts_at(NumberPM(4))))","qid":"94afca2f-5787-44ef-94c1-3db4a1086052.0"}
{"source":"schedule a meeting with Billy and his boss .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Billy \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Billy \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Billy \"),with_attendee(FindManager(\" Billy \"))))","qid":"e0ff6e54-d8e4-4942-bab2-f635c4a0a5a6.2"}
{"source":"Make a meeting with my manager","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindManager(CurrentUser())))","qid":"08460561-3271-4e50-911e-33947f3d2093.0"}
{"source":"I 'm meeting with Steven and his team on monday for lunch","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Steven \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Steven \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) ) ) :subject ( ?= # ( String \" lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Steven \"),with_attendee(FindTeamOf(recipient=\" Steven \")),has_subject(\" lunch \"),starts_at(NextDOW(\" MONDAY \"))))","qid":"ad735b05-f1bd-4300-b94c-d59ff146927c.0"}
{"source":"Thanks . Then put a dinner next month with Jesse Rosenfeld and his team .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jesse Rosenfeld \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jesse Rosenfeld \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( FullMonthofMonth :month ( NextMonth ) ) ) :subject ( ?= # ( String \" dinner \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jesse Rosenfeld \"),with_attendee(FindTeamOf(recipient=\" Jesse Rosenfeld \")),has_subject(\" dinner \"),starts_at(FullMonthofMonth(NextMonth()))))","qid":"d20f0b55-a025-4534-9828-bfde0501e7d7.4"}
{"source":"Add my team to a event tomorrow at 3 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 3 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(Tomorrow()),starts_at(NumberPM(3))))","qid":"8f26cdb6-5d5c-4829-bbfd-d8e41bc18e48.0"}
{"source":"schedule a meeting with Jared 's manager asap","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jared \" ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindManager(\" Jared \")))","qid":"f1aabaa5-7018-4f30-bc18-694edb7b0c84.3"}
{"source":"I want you to add a meeting I have with my boss Monday at 1 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( DateTimeConstraint :constraint ( ?= ( NumberPM :number # ( Number 1 ) ) ) :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),starts_at(NumberPM(1)),starts_at(NextDOW(\" MONDAY \"))))","qid":"759919de-71fd-4029-b8a6-c71ea3559026.0"}
{"source":"Hi ! Can you create an event to meet with my manager for next Wednesday at 2 : 00 pm ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" WEDNESDAY \" ) ) :time ( NumberPM :number # ( Number 2 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),starts_at(NextDOW(\" WEDNESDAY \")),starts_at(NumberPM(2))))","qid":"78092e01-b2fe-43da-b432-e01d3bf29f4b.0"}
{"source":"i need to set up an appointment with my team .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindTeamOf(recipient=CurrentUser())))","qid":"a187dce7-faf4-4003-8cd1-0c61126de3d3.0"}
{"source":"Schedule a block of 45 minutes tomorrow and invite my manager .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :duration ( ?= ( toMinutes # ( Number 45 ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),starts_at(Tomorrow()),has_duration(toMinutes(45))))","qid":"50c87dbe-53f9-4ee4-a774-61623c35111c.4"}
{"source":"Set up a meeting with Abby 's team","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindTeamOf(recipient=\" Abby \")))","qid":"20600435-3437-4aad-bd83-be2ed7f6456b.4"}
{"source":"book an appointment with Carlos 's manager today","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Carlos \" ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Today ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Carlos \")),starts_at(Today())))","qid":"b4c621eb-02b9-4de3-87b3-21820f1346ac.0"}
{"source":"Create an event to meet with Joy 's manager on Monday at 10 : 30 AM .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Joy \" ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :time ( HourMinuteAm :hours # ( Number 10.0 ) :minutes # ( Number 30.0 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Joy \")),starts_at(NextDOW(\" MONDAY \")),starts_at(HourMinuteAm(hours=10,minutes=30))))","qid":"e2cf35e7-8550-4191-859c-900794de1d14.0"}
{"source":"Schedule a dinner meeting with my team tomorrow at 7 .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 7 ) ) ) ) :subject ( ?= # ( String \" dinner meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),has_subject(\" dinner meeting \"),starts_at(Tomorrow()),starts_at(NumberPM(7))))","qid":"51080229-4823-4c45-abbf-61ee83d49c8b.3"}
{"source":"put meeting with Elli and her team on Oct 10","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Elli \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Elli \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( MD :day # ( Number 10.0 ) :month # ( Month \" OCTOBER \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Elli \"),with_attendee(FindTeamOf(recipient=\" Elli \")),starts_at(MD(month=\" OCTOBER \",day=10))))","qid":"078696ba-e595-49b5-bcd9-88c50ff49a7a.3"}
{"source":"Book me a room at NERD for tomorrow with my team","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :location ( andConstraint ( ?= # ( LocationKeyphrase \" NERD \" ) ) ( roomRequest ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),at_location(\" NERD \"),at_location(roomRequest()),starts_at(Tomorrow())))","qid":"16426fd9-d92e-4aab-90df-8741c631a828.0"}
{"source":"I 'd like to schedule a 30 minute meeting with my Manager tomorrow at 12 : 30 pm , and set the status as Busy .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :duration ( ?= ( toMinutes # ( Number 30.0 ) ) ) :showAs ( ?= # ( ShowAsStatus \" Busy \" ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( HourMinutePm :hours # ( Number 12 ) :minutes # ( Number 30.0 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(has_duration(toMinutes(30)),has_status(ShowAsStatus(\" Busy \")),with_attendee(FindManager(CurrentUser())),starts_at(Tomorrow()),starts_at(HourMinutePm(hours=12,minutes=30))))","qid":"886f074c-49f7-4cc0-ab70-7057f71cc306.0"}
{"source":"I want to set up time with the team next Wednesday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" WEDNESDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(NextDOW(\" WEDNESDAY \"))))","qid":"b02d56c6-a293-468c-a3a6-02ec530b05b6.4"}
{"source":"Schedule lunchmeeting with Davis ' manager at noon .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Davis \" ) ) ) ) ) ) ) :start ( ?= ( NextTime :time ( Noon ) ) ) :subject ( ?= # ( String \" lunchmeeting \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Davis \")),has_subject(\" lunchmeeting \"),starts_at(NextTime(time=Noon()))))","qid":"1dedc32f-3604-4432-b203-ecb2a07f91d8.2"}
{"source":"Can you set up a meeting with my team on Monday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(NextDOW(\" MONDAY \"))))","qid":"76e500ca-e4e8-4842-b9d3-6743b5cf4352.0"}
{"source":"Hi ! The team is getting together for an impromptu group birthday party in about 3 hours","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( adjustByPeriodDuration ( Now ) ( PeriodDuration :duration ( toHours # ( Number 3 ) ) ) ) ) :subject ( ?= # ( String \" impromptu group birthday party \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),has_subject(\" impromptu group birthday party \"),starts_at(adjustByPeriodDuration(Now(),PeriodDuration(duration=toHours(3))))))","qid":"7a2916d6-5712-4edf-8e89-b4027827a702.0"}
{"source":"Make a dinner with Abby and her boss","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ) ) :subject ( ?= # ( String \" dinner \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Abby \"),with_attendee(FindManager(\" Abby \")),has_subject(\" dinner \")))","qid":"4fe55504-3228-49d1-9f9a-68fff4d8beef.0"}
{"source":"I also have a third meeting at 3 PM with Bill , Jack and their supervisor .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Bill \" ) ) ) ) ) ) ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jack \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Bill \" ) ) ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jack \" ) ) ) ) ) ) ) ) :start ( ?= ( NextTime :time ( NumberPM :number # ( Number 3 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Jack \")),with_attendee(\" Bill \"),with_attendee(\" Jack \"),with_attendee(FindManager(\" Bill \")),starts_at(NextTime(time=NumberPM(3)))))","qid":"c567ef17-01c4-4eef-bad4-9cc0446da9ae.3"}
{"source":"Meeting with Jim 's boss on wednesday at 3","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jim \" ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" WEDNESDAY \" ) ) :time ( NumberPM :number # ( Number 3 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Jim \")),starts_at(NextDOW(\" WEDNESDAY \")),starts_at(NumberPM(3))))","qid":"d8fc57f1-527e-4c77-a028-89eff71a8ac7.2"}
{"source":"can you please add a meeting with the boss tomorrow at 2 pm ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 2 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),starts_at(Tomorrow()),starts_at(NumberPM(2))))","qid":"93a9e445-ff20-4e31-b29c-712c5bbac78e.0"}
{"source":"Will you add meeting with the boss for Wednesday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" WEDNESDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),starts_at(NextDOW(\" WEDNESDAY \"))))","qid":"af133976-a183-4e4a-93a9-440d2ece8915.1"}
{"source":"I need to see Abby and her boss tomorrow for a snack run","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) :subject ( ?= # ( String \" snack run \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Abby \"),with_attendee(FindManager(\" Abby \")),has_subject(\" snack run \"),starts_at(Tomorrow())))","qid":"005cf941-4ef4-4aeb-93e5-7be335ebbb23.4"}
{"source":"Add a one on one with Kimmy 's boss tomorrow","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kimmy \" ) ) ) ) ) ) ) :isOneOnOne ( ?= # ( Boolean true ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Kimmy \")),starts_at(Tomorrow()),is_oneOnOne()))","qid":"aa6c2e09-3998-459c-b249-ec0bdf7ad2f6.1"}
{"source":"Add an event called presentation with Jamal and his supervisor for Friday at 11 .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jamal \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jamal \" ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( NumberAM :number # ( Number 11 ) ) ) ) :subject ( ?= # ( String \" presentation \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jamal \"),with_attendee(FindManager(\" Jamal \")),has_subject(\" presentation \"),starts_at(NextDOW(\" FRIDAY \")),starts_at(NumberAM(11))))","qid":"e0122c6d-d7d0-4ea8-9749-bfa44be42dad.0"}
{"source":"I need to meet with my team","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindTeamOf(recipient=CurrentUser())))","qid":"8c8ef946-6259-467f-bdde-bc1a7ae1b993.0"}
{"source":"Schedule a football game with Jeff and his team tomorrow at 3 .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jeff \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jeff \" ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 3 ) ) ) ) :subject ( ?= # ( String \" football game \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jeff \"),with_attendee(FindTeamOf(recipient=\" Jeff \")),has_subject(\" football game \"),starts_at(Tomorrow()),starts_at(NumberPM(3))))","qid":"8eeac725-07e9-4297-b21e-56869ebc77c6.3"}
{"source":"Make a meeting with Kathy and Kathy 's manager tomorrow morning .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kathy \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kathy \" ) ) ) ) ) ) ) ) :start ( DateTimeConstraint :constraint ( Morning ) :date ( Tomorrow ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Kathy \"),with_attendee(FindManager(\" Kathy \")),starts_at(Morning()),starts_at(Tomorrow())))","qid":"b7e90a9c-01d0-4a40-95e1-486f4cf9f49d.1"}
{"source":"Hi , please invite Chris 's manager and Chris to my weekly trivia party","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Chris \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Chris \" ) ) ) ) ) ) ) :subject ( ?= # ( String \" weekly trivia party \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Chris \")),with_attendee(\" Chris \"),has_subject(\" weekly trivia party \")))","qid":"e3a94fb3-e6a6-43b0-ab85-0630d8d6cc4e.0"}
{"source":"Please add an appointment with Jack and his boss , and Mary and her boss .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jack \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jack \" ) ) ) ) ) ) ) ) ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Mary \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Mary \" ) ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jack \"),with_attendee(FindManager(\" Jack \")),with_attendee(\" Mary \"),with_attendee(FindManager(\" Mary \"))))","qid":"aa3dcd87-6917-4768-af00-c531c95ea2f0.3"}
{"source":"Set up a meeting with Jessa and her Boss for tomorrow at 1 PM .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jessa \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jessa \" ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 1 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jessa \"),with_attendee(FindManager(\" Jessa \")),starts_at(Tomorrow()),starts_at(NumberPM(1))))","qid":"4171f5c5-f88d-4fe8-9655-53136f15ffd0.1"}
{"source":"Can you set up another lunhc with Jennifer Watts 's team ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jennifer Watts \" ) ) ) ) ) ) ) :subject ( ?= # ( String \" another lunhc \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=\" Jennifer Watts \")),has_subject(\" another lunhc \")))","qid":"c20a6725-5fc4-4a5e-9b6b-74d8befb41b6.2"}
{"source":"After the staff meeting , I 'll meet with Laura 's team .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Laura \" ) ) ) ) ) ) ) :start ( ?= ( :end ( singleton ( :results ( FindEventWrapperWithDefaults :constraint ( Constraint[Event] :subject ( ?~= # ( String \" staff meeting \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=\" Laura \")),starts_at(:end(FindEvents(has_subject(\" staff meeting \"))))))","qid":"b5d7bdba-eb54-4a1a-86b8-ac233fc07c0a.0"}
{"source":"So lets make a meeting with Jake and his manager and Elli with his manager for Wednesday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) ( andConstraint ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Elli \" ) ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Elli \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" WEDNESDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Elli \")),with_attendee(\" Jake \"),with_attendee(FindManager(\" Jake \")),with_attendee(\" Elli \"),starts_at(NextDOW(\" WEDNESDAY \"))))","qid":"153990a5-5c76-4561-9881-47b177e27303.0"}
{"source":"make a meeting with the team for tomorrow","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(Tomorrow())))","qid":"ef822b59-4c82-4794-8922-92db6bbd90c8.0"}
{"source":"Abby and Abby 's boss will be coming to the office on Friday around 1 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ) ) :showAs ( ?= # ( ShowAsStatus \" OutOfOffice \" ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( NumberPM :number # ( Number 1 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(has_status(ShowAsStatus(\" OutOfOffice \")),with_attendee(\" Abby \"),with_attendee(FindManager(\" Abby \")),starts_at(NextDOW(\" FRIDAY \")),starts_at(NumberPM(1))))","qid":"0c4164eb-870b-4809-94a1-adf83ca39cf4.4"}
{"source":"Please create a meeting for myself , Sarah , and her manager .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Sarah \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Sarah \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Sarah \"),with_attendee(FindManager(\" Sarah \"))))","qid":"ea953d47-e040-4223-b284-bfe9bc0062c0.0"}
{"source":"I am going to see the HIT BROADWAY PLAY WICKED with Abby and her boss","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ) ) :subject ( ?= # ( String \" HIT BROADWAY PLAY WICKED \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Abby \"),with_attendee(FindManager(\" Abby \")),has_subject(\" HIT BROADWAY PLAY WICKED \")))","qid":"afea43f1-0a6e-48aa-8e8c-50854080fa87.4"}
{"source":"Pencil in a talk with James and his team .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" James \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" James \" ) ) ) ) ) ) ) ) :subject ( ?= # ( String \" talk \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" James \"),with_attendee(FindTeamOf(recipient=\" James \")),has_subject(\" talk \")))","qid":"c09b7959-a7d3-44b3-a15a-7fa0d1063419.0"}
{"source":"I need a meeting with my team , obviously ca n't be on the weekend since we wo n't be at work .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( Constraint[Date] :dayOfWeek ( negate ( Weekend ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),avoid_start(Date?(dayOfWeek=Weekend()))))","qid":"44010c16-b9f4-4af1-83f2-0205caf93953.2"}
{"source":"After the budget meeting , pencil in a meeting with Shawn 's team .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Shawn \" ) ) ) ) ) ) ) :start ( ?= ( :end ( singleton ( :results ( FindEventWrapperWithDefaults :constraint ( Constraint[Event] :subject ( ?~= # ( String \" budget meeting \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=\" Shawn \")),starts_at(:end(FindEvents(has_subject(\" budget meeting \"))))))","qid":"9964335c-3309-42dc-bc0a-8e92fbd9aa42.0"}
{"source":"Add to calendar meeting with supervisor to go over goals on Friday at 10 : 00 am .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( NumberAM :number # ( Number 10.0 ) ) ) ) :subject ( ?= # ( String \" go over goals \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),has_subject(\" go over goals \"),starts_at(NextDOW(\" FRIDAY \")),starts_at(NumberAM(10))))","qid":"68926bee-616d-4c2b-8d2e-b1818e697203.1"}
{"source":"I need to see Abby and her manager for tomorrow","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Abby \"),with_attendee(FindManager(\" Abby \")),starts_at(Tomorrow())))","qid":"0c06bcf6-a040-4478-a951-082d292dc7bd.0"}
{"source":"I need time with Toby and his team on Friday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Toby \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Toby \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Toby \"),with_attendee(FindTeamOf(recipient=\" Toby \")),starts_at(NextDOW(\" FRIDAY \"))))","qid":"96244c1d-75bf-4f72-91db-91498cdc4500.0"}
{"source":"Make a birthday event with my team but remove Abby and Jesse","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) ( AttendeeListExcludesRecipient :recipient ( ?= ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ) ) ( AttendeeListExcludesRecipient :recipient ( ?= ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jesse \" ) ) ) ) ) ) ) ) :subject ( ?= # ( String \" birthday \" ) ) ) ) ) )","target":"CreateEvent(AND(avoid_attendee(refer(Recipient?(name=LIKE(Jesse)))),with_attendee(FindTeamOf(recipient=CurrentUser())),avoid_attendee(refer(Recipient?(name=LIKE(Abby)))),has_subject(\" birthday \")))","qid":"60eefc2d-7e76-42f7-ac4f-b4c7437c5f78.0"}
{"source":"Schedule a video call with Tom and his supervisor Friday at 2 .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Tom \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Tom \" ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( NumberPM :number # ( Number 2 ) ) ) ) :subject ( ?= # ( String \" video call \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Tom \"),with_attendee(FindManager(\" Tom \")),has_subject(\" video call \"),starts_at(NextDOW(\" FRIDAY \")),starts_at(NumberPM(2))))","qid":"7d28a8fc-dff1-412d-a3d7-14a7ecf60426.3"}
{"source":"schedule a meeting with Jennifer , Elli , Kim and her manager","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jennifer \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Elli \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Elli \" ) ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim \" ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Kim \"),with_attendee(FindManager(\" Elli \")),with_attendee(\" Jennifer \"),with_attendee(\" Elli \")))","qid":"4162a25a-8a60-4ea4-83f0-d9738a00be4d.0"}
{"source":"I need to go meet with Denise 's team right after that Thursday rally .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Denise \" ) ) ) ) ) ) ) :start ( ?= ( :end ( singleton ( :results ( FindEventWrapperWithDefaults :constraint ( EventOnDate :date ( NextDOW :dow # ( DayOfWeek \" THURSDAY \" ) ) :event ( Constraint[Event] :subject ( ?~= # ( String \" rally \" ) ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=\" Denise \")),starts_at(:end(FindEvents(AND(starts_at(NextDOW(\" THURSDAY \")),has_subject(\" rally \")))))))","qid":"7c619c9a-61fd-42b5-8ae8-7c655a45d39d.0"}
{"source":"Set an event on Feb 19 th at 2 PM with Mary , Susan , and their bosses .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Mary \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Mary \" ) ) ) ) ) ) ) ) ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Susan \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Susan \" ) ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( MD :day # ( Number 19 ) :month # ( Month \" FEBRUARY \" ) ) :time ( NumberPM :number # ( Number 2 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Mary \"),with_attendee(FindManager(\" Mary \")),with_attendee(\" Susan \"),with_attendee(FindManager(\" Susan \")),starts_at(MD(month=\" FEBRUARY \",day=19)),starts_at(NumberPM(2))))","qid":"53a1d409-b78f-41b3-b0b7-c914edbf44c6.3"}
{"source":"I would like to meet with Abby and his immediate supervisor on Friday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Abby \"),with_attendee(FindManager(\" Abby \")),starts_at(NextDOW(\" FRIDAY \"))))","qid":"6f6d2d19-900e-4ff7-8c11-534c7e8091fc.2"}
{"source":"I want to set up a Jog in the Park with Sue and her manager for tomorrow at 4 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Sue \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Sue \" ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 4 ) ) ) ) :subject ( ?= # ( String \" Jog in the Park \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Sue \"),with_attendee(FindManager(\" Sue \")),has_subject(\" Jog in the Park \"),starts_at(Tomorrow()),starts_at(NumberPM(4))))","qid":"64d6b671-b527-494f-b1e4-d957e0cf70da.3"}
{"source":"Schedule a meeting with my team on November 3 rd at 11 am as well .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( MD :day # ( Number 3 ) :month # ( Month \" NOVEMBER \" ) ) :time ( NumberAM :number # ( Number 11 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(MD(month=\" NOVEMBER \",day=3)),starts_at(NumberAM(11))))","qid":"c878fcd7-6572-4b11-a5a3-91738fddf59f.2"}
{"source":"Please add a meeting with Dan Schoffel 's Team .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Dan Schoffel \" ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindTeamOf(recipient=\" Dan Schoffel \")))","qid":"1fdf3942-0ca0-4297-b9f9-9f582cd81fbb.4"}
{"source":"Set up a meeting with my reports .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindReports :recipient ( toRecipient ( CurrentUser ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindReports(recipient=CurrentUser())))","qid":"b59dc6e7-b4c8-4acb-8b57-ea9376f33ea8.1"}
{"source":"I have a Concert in the City with Josie and her supervisor at 10 pm on Friday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Josie \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Josie \" ) ) ) ) ) ) ) ) :location ( ?= # ( LocationKeyphrase \" City \" ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( NumberPM :number # ( Number 10.0 ) ) ) ) :subject ( ?= # ( String \" Concert \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Josie \"),with_attendee(FindManager(\" Josie \")),at_location(\" City \"),has_subject(\" Concert \"),starts_at(NextDOW(\" FRIDAY \")),starts_at(NumberPM(10))))","qid":"c29d88e0-23ac-4081-a84c-a7a363273ada.2"}
{"source":"make another event called staff meeting with my manager","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :subject ( ?= # ( String \" staff meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),has_subject(\" staff meeting \")))","qid":"d6e41a72-e4d8-4c2b-99ca-04a2d899ff1b.2"}
{"source":"Schedule Save the World with Anduin and his manager tomorrow at 11 am .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Anduin \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Anduin \" ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberAM :number # ( Number 11 ) ) ) ) :subject ( ?= # ( String \" Save the World \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Anduin \"),with_attendee(FindManager(\" Anduin \")),has_subject(\" Save the World \"),starts_at(Tomorrow()),starts_at(NumberAM(11))))","qid":"2eab80ec-8345-4aa5-bb86-7a78d9af597c.4"}
{"source":"I want to make a meeting with my boss to discuss the project updates at 2 pm on Monday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :time ( NumberPM :number # ( Number 2 ) ) ) ) :subject ( ?= # ( String \" discuss the project updates \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),has_subject(\" discuss the project updates \"),starts_at(NextDOW(\" MONDAY \")),starts_at(NumberPM(2))))","qid":"56ebe77f-2a4e-4a56-bd1c-b90c33c12640.2"}
{"source":"I need a meeting tomorrow with my boss","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),starts_at(Tomorrow())))","qid":"2d440e35-371f-4712-a454-a61cec3650b1.4"}
{"source":"My meeting with Tim is at 5 : 30 tomorrow and his boss is going to be there too .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Tim \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Tim \" ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( HourMinutePm :hours # ( Number 5 ) :minutes # ( Number 30.0 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Tim \"),with_attendee(FindManager(\" Tim \")),starts_at(Tomorrow()),starts_at(HourMinutePm(hours=5,minutes=30))))","qid":"16e33434-39ac-4834-ba70-18e52ffec39c.2"}
{"source":"Hi there ! Can you add a meeting in the conference room today at noon with Susie and her team for me ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Susie \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Susie \" ) ) ) ) ) ) ) ) :location ( andConstraint ( ?= # ( LocationKeyphrase \" conference room \" ) ) ( roomRequest ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Today ) :time ( Noon ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Susie \"),with_attendee(FindTeamOf(recipient=\" Susie \")),at_location(\" conference room \"),at_location(roomRequest()),starts_at(Today()),starts_at(Noon())))","qid":"8440029d-2709-4c19-8ff3-1dd2b06252b9.0"}
{"source":"After the dinner , schedule a movie date also on Friday night with Manny 's team .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Manny \" ) ) ) ) ) ) ) :start ( ?= ( :end ( singleton ( :results ( FindEventWrapperWithDefaults :constraint ( EventOnDate :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :event ( Constraint[Event] :subject ( ?~= # ( String \" dinner \" ) ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=\" Manny \")),starts_at(:end(FindEvents(AND(starts_at(NextDOW(\" FRIDAY \")),has_subject(\" dinner \")))))))","qid":"7f0f280c-dddf-4757-bde5-cbe43ccc8214.0"}
{"source":"Our team will need a conference room next week from Monday to Thursday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( EventAllDayForDateRange :dateRange ( DateAndConstraint :date1 ( DowOfWeekNew :dow # ( DayOfWeek \" MONDAY \" ) :week ( NextWeekList ) ) :date2 ( nextDayOfWeek ( DowOfWeekNew :dow # ( DayOfWeek \" MONDAY \" ) :week ( NextWeekList ) ) # ( DayOfWeek \" THURSDAY \" ) ) ) :event ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :location ( roomRequest ) ) ) ) ) )","target":"CreateEvent(AND(spans_time(DateAndConstraint(date1=DowOfWeekNew(dow=DayOfWeek(\" MONDAY \"),week=NextWeekList()),date2=nextDayOfWeek(DowOfWeekNew(dow=DayOfWeek(\" MONDAY \"),week=NextWeekList()),DayOfWeek(\" THURSDAY \")))),with_attendee(FindTeamOf(recipient=CurrentUser())),at_location(roomRequest())))","qid":"f214d7df-a99b-49ce-bd70-0ab9fa594c9b.0"}
{"source":"I have a budget meeting with Karen and her manager tomorrow morning .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Karen \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Karen \" ) ) ) ) ) ) ) ) :start ( DateTimeConstraint :constraint ( Morning ) :date ( Tomorrow ) ) :subject ( ?= # ( String \" budget meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Karen \"),with_attendee(FindManager(\" Karen \")),has_subject(\" budget meeting \"),starts_at(Morning()),starts_at(Tomorrow())))","qid":"058dfd96-8d66-456a-a96e-b4d8f99ee022.0"}
{"source":"I 'll be meeting with Cristine 's team right after my interview .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Cristine \" ) ) ) ) ) ) ) :start ( ?= ( :end ( singleton ( :results ( FindEventWrapperWithDefaults :constraint ( Constraint[Event] :subject ( ?~= # ( String \" interview \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=\" Cristine \")),starts_at(:end(FindEvents(has_subject(\" interview \"))))))","qid":"34e3d738-a641-43a3-b81b-9e2096450916.2"}
{"source":"Make a meeting with my reports","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindReports :recipient ( toRecipient ( CurrentUser ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindReports(recipient=CurrentUser())))","qid":"d9ee126b-df0e-492f-af33-4d02834a3ada.4"}
{"source":"Ok , add a one - on - one with Liz 's boss please","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Liz \" ) ) ) ) ) ) ) :subject ( ?= # ( String \" one-on-one \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Liz \")),has_subject(\" one_on_one \")))","qid":"bbf1c30d-597a-4fd8-be9c-aac9a969fd19.3"}
{"source":"Make a breakfast appointment with my boss next Thursday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" THURSDAY \" ) ) ) ) :subject ( ?= # ( String \" breakfast appointment \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),has_subject(\" breakfast appointment \"),starts_at(NextDOW(\" THURSDAY \"))))","qid":"20616f20-e7c3-4203-8276-7b9b02e578dc.3"}
{"source":"Ok then I need an event with abby and her manager in the summer instead !","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" abby \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" abby \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( SeasonSummer ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" abby \"),with_attendee(FindManager(\" abby \")),starts_at(SeasonSummer())))","qid":"0ef909a1-4a6c-4ab3-ade4-3d3c107058d4.1"}
{"source":"Schedule a meeting with Ali and her boss on Friday at 9 : 30 AM .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Ali \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Ali \" ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( HourMinuteAm :hours # ( Number 9 ) :minutes # ( Number 30.0 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Ali \"),with_attendee(FindManager(\" Ali \")),starts_at(NextDOW(\" FRIDAY \")),starts_at(HourMinuteAm(hours=9,minutes=30))))","qid":"35a623a6-a37a-4479-967b-f0c837133cd2.4"}
{"source":"I have a Pool Cleaning scheduled with Joshua and his supervisor at 1 pm on Friday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Joshua \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Joshua \" ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( NumberPM :number # ( Number 1 ) ) ) ) :subject ( ?= # ( String \" Pool Cleaning \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Joshua \"),with_attendee(FindManager(\" Joshua \")),has_subject(\" Pool Cleaning \"),starts_at(NextDOW(\" FRIDAY \")),starts_at(NumberPM(1))))","qid":"9d021440-8704-4ca2-befb-aae8daec57c9.3"}
{"source":"Create an appointment with Carlos 's manager for tomorrow at 3 PM .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Carlos \" ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 3 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Carlos \")),starts_at(Tomorrow()),starts_at(NumberPM(3))))","qid":"b4c621eb-02b9-4de3-87b3-21820f1346ac.2"}
{"source":"Please make a meeting David Lax 's reports on monday morning at 9 am","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindReports :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" David Lax \" ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :time ( NumberAM :number # ( Number 9 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindReports(recipient=refer(Recipient?(name=LIKE(David Lax))))),starts_at(NextDOW(\" MONDAY \")),starts_at(NumberAM(9))))","qid":"be2b933e-79e8-42cd-ba00-f49fcad5b077.3"}
{"source":"Make me a meeting with Elli , her manager , Kim , and her manager","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Elli \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Elli \" ) ) ) ) ) ) ) ) ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim \" ) ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Elli \"),with_attendee(FindManager(\" Elli \")),with_attendee(\" Kim \"),with_attendee(FindManager(\" Kim \"))))","qid":"3ca249d3-c784-43e6-a217-b1577f7c8166.0"}
{"source":"When the party ends Jim 's team can come for pizza .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jim \" ) ) ) ) ) ) ) :start ( ?= ( :end ( singleton ( :results ( FindEventWrapperWithDefaults :constraint ( Constraint[Event] :subject ( ?~= # ( String \" party \" ) ) ) ) ) ) ) ) :subject ( ?= # ( String \" pizza \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=\" Jim \")),has_subject(\" pizza \"),starts_at(:end(FindEvents(has_subject(\" party \"))))))","qid":"a9d61173-76fa-45e5-8a0a-ea4aa814c519.0"}
{"source":"make a meeting with my team","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindTeamOf(recipient=CurrentUser())))","qid":"e566ee53-b40c-4cf1-b210-5285faf1ff50.1"}
{"source":"Schedule a meeting with Ben 's manager for Friday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Ben \" ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Ben \")),starts_at(NextDOW(\" FRIDAY \"))))","qid":"90bb6fab-a790-40f8-8ca6-a89f33f1d99b.0"}
{"source":"put meeting with alex and his team at Oct 10","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" alex \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" alex \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( MD :day # ( Number 10.0 ) :month # ( Month \" OCTOBER \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" alex \"),with_attendee(FindTeamOf(recipient=\" alex \")),starts_at(MD(month=\" OCTOBER \",day=10))))","qid":"abd6f1fa-306a-4fd6-97c9-d1a7902232ba.1"}
{"source":"Schedule a round table with Bradley and his team for the afternoon .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Bradley \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Bradley \" ) ) ) ) ) ) ) ) :start ( DateTimeConstraint :constraint ( Afternoon ) :date ( Today ) ) :subject ( ?= # ( String \" round table \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Bradley \"),with_attendee(FindTeamOf(recipient=\" Bradley \")),has_subject(\" round table \"),starts_at(Afternoon()),starts_at(Today())))","qid":"f1922c66-3bc2-4a6a-a374-9c89d428093d.2"}
{"source":"I need a meeting with Dan Schoffel and all of his reports on Tuesday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Dan Schoffel \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindReports :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Dan Schoffel \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Dan Schoffel \"),with_attendee(FindReports(recipient=refer(Recipient?(name=LIKE(Dan Schoffel))))),starts_at(NextDOW(\" TUESDAY \"))))","qid":"044bc844-b084-4216-bd7d-50fe3d01b843.0"}
{"source":"Set up a meeting with Eric 's manager Dan Schoffel to go over design plans on Friday at 4 : 00 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Eric \" ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( NumberPM :number # ( Number 4 ) ) ) ) :subject ( ?= # ( String \" go over design plans \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Eric \")),has_subject(\" go over design plans \"),starts_at(NextDOW(\" FRIDAY \")),starts_at(NumberPM(4))))","qid":"379d48fe-aa13-4ec0-b749-f3d7447041dd.1"}
{"source":"On Monday at 5 pm , make a meeting with my boss .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :time ( NumberPM :number # ( Number 5 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),starts_at(NextDOW(\" MONDAY \")),starts_at(NumberPM(5))))","qid":"ffd98db0-2d9f-4495-bf3c-750b601bfa6d.0"}
{"source":"Schedule a meeting with Monica 's boss tomorrow at 8 am .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( RecipientFromRecipientConstraint :constraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Monica \" ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberAM :number # ( Number 8 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Monica \")),starts_at(Tomorrow()),starts_at(NumberAM(8))))","qid":"9fb2203b-191f-4b15-a526-a81a2e1cad6a.0"}
{"source":"Add Beach Day with Sora and his boss on July 29 th at 10 am .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Sora \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Sora \" ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( MD :day # ( Number 29 ) :month # ( Month \" JULY \" ) ) :time ( NumberAM :number # ( Number 10.0 ) ) ) ) :subject ( ?= # ( String \" Beach Day \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Sora \"),with_attendee(FindManager(\" Sora \")),has_subject(\" Beach Day \"),starts_at(MD(month=\" JULY \",day=29)),starts_at(NumberAM(10))))","qid":"b227ebff-7ba0-434c-9abd-2b4a91b8a6ca.3"}
{"source":"I will be with my Team in Wichitaiiaiai for all of next week","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :nonEmptyBase ( EventAllDayForDateRange :dateRange ( NextWeekList ) :event ( Constraint[Event] :location ( ?= # ( LocationKeyphrase \" Wichitaiiaiai \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),at_location(\" Wichitaiiaiai \"),spans_time(NextWeekList())))","qid":"26946cac-81bc-42ee-af02-41498b5f8465.2"}
{"source":"Schedule a meeting with Jake 's Manager 's boss next Friday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(FindManager(\" Jake \"))),starts_at(NextDOW(\" FRIDAY \"))))","qid":"2189618f-56ac-4538-80c4-f41c453ffcd5.1"}
{"source":"I need an event with Abby and her boss","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Abby \"),with_attendee(FindManager(\" Abby \"))))","qid":"e0122c6d-d7d0-4ea8-9749-bfa44be42dad.3"}
{"source":"Now create a luncheon with Abby and Abby 's team tomorrow at 2 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 2 ) ) ) ) :subject ( ?= # ( String \" luncheon \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Abby \"),with_attendee(FindTeamOf(recipient=\" Abby \")),has_subject(\" luncheon \"),starts_at(Tomorrow()),starts_at(NumberPM(2))))","qid":"c09b7959-a7d3-44b3-a15a-7fa0d1063419.2"}
{"source":"Set up a lunch with Beth and her manager for Saturday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Beth \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Beth \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" SATURDAY \" ) ) ) ) :subject ( ?= # ( String \" lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Beth \"),with_attendee(FindManager(\" Beth \")),has_subject(\" lunch \"),starts_at(NextDOW(\" SATURDAY \"))))","qid":"555a5775-5fe3-4eae-a7da-be05bd666c99.0"}
{"source":"Set up an appointment with the team for Nov 2 at 10 am .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( MD :day # ( Number 2 ) :month # ( Month \" NOVEMBER \" ) ) :time ( NumberAM :number # ( Number 10.0 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(MD(month=\" NOVEMBER \",day=2)),starts_at(NumberAM(10))))","qid":"79a9a1be-c713-46bd-91d1-b3e8cfee5b1e.0"}
{"source":"set an event for meeting with Jim 's boss tomorrow at 11 am .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jim \" ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberAM :number # ( Number 11 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Jim \")),starts_at(Tomorrow()),starts_at(NumberAM(11))))","qid":"1e77358b-0f92-4cc2-bcad-96737f46766e.0"}
{"source":"Create a party and invite everyone on Abby 's team but Crim","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ) ( AttendeeListExcludesRecipient :recipient ( ?= ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Crim \" ) ) ) ) ) ) ) ) :subject ( ?= # ( String \" party \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=\" Abby \")),avoid_attendee(refer(Recipient?(name=LIKE(Crim)))),has_subject(\" party \")))","qid":"01b2b214-06b0-4bd6-b58c-386599125d0d.1"}
{"source":"create jack and coke night with coworkers","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :subject ( ?= # ( String \" jack and coke night \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),has_subject(\" jack and coke night \")))","qid":"0a03c92b-e9c7-4c11-a959-20ce58fd5675.0"}
{"source":"Create an event with Roland and my supervisor on Wednesday at 4 .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Roland \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" WEDNESDAY \" ) ) :time ( NumberPM :number # ( Number 4 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Roland \"),with_attendee(FindManager(CurrentUser())),starts_at(NextDOW(\" WEDNESDAY \")),starts_at(NumberPM(4))))","qid":"a9c51991-c8f9-4937-8742-808cc3439df0.0"}
{"source":"i need an early meeting with the boss next monday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( DateTimeConstraint :constraint ( Early ) :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),starts_at(Early()),starts_at(NextDOW(\" MONDAY \"))))","qid":"8a2d597f-2177-4eac-af99-0df27eb5c98c.0"}
{"source":"As soon as the formal dinner is over Jacob 's team needs to come have talk with me .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jacob \" ) ) ) ) ) ) ) :start ( ?= ( :end ( singleton ( :results ( FindEventWrapperWithDefaults :constraint ( Constraint[Event] :subject ( ?~= # ( String \" formal dinner \" ) ) ) ) ) ) ) ) :subject ( ?= # ( String \" talk \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=\" Jacob \")),has_subject(\" talk \"),starts_at(:end(FindEvents(has_subject(\" formal dinner \"))))))","qid":"6bfaf6b1-65fe-465b-9cb9-5b70b11d6139.0"}
{"source":"Set up a meeting with Jim and his boss and Katie and her boss for next Tuesday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jim \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jim \" ) ) ) ) ) ) ) ) ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Katie \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Katie \" ) ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jim \"),with_attendee(FindManager(\" Jim \")),with_attendee(\" Katie \"),with_attendee(FindManager(\" Katie \")),starts_at(NextDOW(\" TUESDAY \"))))","qid":"c567ef17-01c4-4eef-bad4-9cc0446da9ae.0"}
{"source":"I want to make a meeting with my whole team to discuss new hires on Friday at 1 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( NumberPM :number # ( Number 1 ) ) ) ) :subject ( ?= # ( String \" discuss new hires \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),has_subject(\" discuss new hires \"),starts_at(NextDOW(\" FRIDAY \")),starts_at(NumberPM(1))))","qid":"e261c43a-7ea5-44f9-9f49-a434de4ba47f.0"}
{"source":"Update my calendar to show a meeting with Frank and his supervisor , Wednesday at 1 : 00 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Frank \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Frank \" ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" WEDNESDAY \" ) ) :time ( NumberPM :number # ( Number 1 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Frank \"),with_attendee(FindManager(\" Frank \")),starts_at(NextDOW(\" WEDNESDAY \")),starts_at(NumberPM(1))))","qid":"d011e214-4016-46ae-86e9-ff05d772a826.0"}
{"source":"I wanna meet Lisa 's boss at today 7 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Lisa \" ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Today ) :time ( NumberPM :number # ( Number 7 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Lisa \")),starts_at(Today()),starts_at(NumberPM(7))))","qid":"82bcf6e4-b9e9-4a7b-b1c4-a577c8738e88.0"}
{"source":"I need a meeting with Alex and his boss to discuss the next steps of the business plan for later this afternoon","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Alex \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Alex \" ) ) ) ) ) ) ) ) :start ( DateTimeConstraint :constraint ( LateAfternoon ) :date ( Today ) ) :subject ( ?= # ( String \" discuss the next steps of the business plan \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Alex \"),with_attendee(FindManager(\" Alex \")),has_subject(\" discuss the next steps of the business plan \"),starts_at(LateAfternoon()),starts_at(Today())))","qid":"e2955b63-60f6-49a7-93d5-059ca23af788.0"}
{"source":"Set up a conference meeting with Gloria and her boss on Tuesday morning","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Gloria \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Gloria \" ) ) ) ) ) ) ) ) :start ( DateTimeConstraint :constraint ( Morning ) :date ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) ) :subject ( ?= # ( String \" conference meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Gloria \"),with_attendee(FindManager(\" Gloria \")),has_subject(\" conference meeting \"),starts_at(Morning()),starts_at(NextDOW(\" TUESDAY \"))))","qid":"a1683b7f-1e04-460d-afdf-eda0c87445dd.0"}
{"source":"Book a meeting with stephs manager to talk about lewd bathroom behavior","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" steph \" ) ) ) ) ) ) ) :subject ( ?= # ( String \" talk about lewd bathroom behavior \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" steph \")),has_subject(\" talk about lewd bathroom behavior \")))","qid":"af2830ac-aadd-43fb-a3e8-2d40c3bbc726.3"}
{"source":"I need a meeting with my team for this weekend","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ThisWeekend ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(ThisWeekend())))","qid":"a41896e4-90f2-489e-9368-812735d9e9e8.0"}
{"source":"Add a team kickball game with my team and Crim","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Crim \" ) ) ) ) ) ) ) :subject ( ?= # ( String \" team kickball game \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),with_attendee(\" Crim \"),has_subject(\" team kickball game \")))","qid":"97cd902a-f13b-48d6-bb84-990fdf4d8194.2"}
{"source":"Schedule a meeting with Abby and her team for 9 : 30 AM on Tuesday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) :time ( HourMinuteAm :hours # ( Number 9 ) :minutes # ( Number 30.0 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Abby \"),with_attendee(FindTeamOf(recipient=\" Abby \")),starts_at(NextDOW(\" TUESDAY \")),starts_at(HourMinuteAm(hours=9,minutes=30))))","qid":"f8b38303-735a-47f9-a866-0224a90b5e42.0"}
{"source":"Please book a meeting for this Friday with Jake and his manager with Elli and his manager .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) ( andConstraint ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Elli \" ) ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Elli \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Elli \")),with_attendee(\" Jake \"),with_attendee(FindManager(\" Jake \")),with_attendee(\" Elli \"),starts_at(NextDOW(\" FRIDAY \"))))","qid":"49219cb1-923f-4643-8af6-e051aeadd100.0"}
{"source":"put meeting with bob 's manager at aug 14","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" bob \" ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( MD :day # ( Number 14 ) :month # ( Month \" AUGUST \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" bob \")),starts_at(MD(month=\" AUGUST \",day=14))))","qid":"e37ea477-41fe-4677-9d87-59b992a807ae.1"}
{"source":"Make a quick session with Jamie and his boss .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jamie \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jamie \" ) ) ) ) ) ) ) ) :subject ( ?= # ( String \" quick session \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jamie \"),with_attendee(FindManager(\" Jamie \")),has_subject(\" quick session \")))","qid":"62d7e67b-c397-414f-bdfc-2d41bcba4fba.0"}
{"source":"add a lunch with Kim Possible , her boss , Elli Parker and her boss","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim Possible \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim Possible \" ) ) ) ) ) ) ) ) ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Elli Parker \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Elli Parker \" ) ) ) ) ) ) ) ) ) :subject ( ?= # ( String \" lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Kim Possible \"),with_attendee(FindManager(\" Kim Possible \")),with_attendee(\" Elli Parker \"),with_attendee(FindManager(\" Elli Parker \")),has_subject(\" lunch \")))","qid":"153990a5-5c76-4561-9881-47b177e27303.3"}
{"source":"Hey could make a meeting with Kim and her manager along with Jesse and her manager for next Friday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim \" ) ) ) ) ) ) ( andConstraint ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jesse \" ) ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jesse \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Jesse \")),with_attendee(\" Kim \"),with_attendee(FindManager(\" Kim \")),with_attendee(\" Jesse \"),starts_at(NextDOW(\" FRIDAY \"))))","qid":"cc994e8f-7508-479f-8422-9620dd662969.0"}
{"source":"FIX APPOINTMENT WITH LISA AND HER MANAGER","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" LISA \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" LISA \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" LISA \"),with_attendee(FindManager(\" LISA \"))))","qid":"2845dff0-3ef6-48c8-923a-f4a18cd84b4f.0"}
{"source":"Add an meeting with Kim 's skip next week .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( NextWeekList ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(FindManager(\" Kim \"))),starts_at(NextWeekList())))","qid":"abbfa798-953b-431d-b529-5847c4a331eb.4"}
{"source":"ok now i need an appointment with chris and his manager","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" chris \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" chris \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" chris \"),with_attendee(FindManager(\" chris \"))))","qid":"f2e36429-c94e-4ae1-9986-63ddd628ddd8.3"}
{"source":"I 'm going to be with Kim and her boss tomorrow","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Kim \"),with_attendee(FindManager(\" Kim \")),starts_at(Tomorrow())))","qid":"661cdeb6-32aa-4f3d-ac8e-ca041b65a2f0.3"}
{"source":"Find 45 minutes on Monday for a Brainstorming Ideas Meeting with Susan and her supervisor .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Susan \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Susan \" ) ) ) ) ) ) ) ) :duration ( ?= ( toMinutes # ( Number 45 ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) ) ) :subject ( ?= # ( String \" Brainstorming Ideas Meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Susan \"),with_attendee(FindManager(\" Susan \")),has_subject(\" Brainstorming Ideas Meeting \"),starts_at(NextDOW(\" MONDAY \")),has_duration(toMinutes(45))))","qid":"f1315944-1aee-4754-874d-b906c24e80f7.4"}
{"source":"Let 's get something to do with my team at Arbys","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :location ( ?= # ( LocationKeyphrase \" Arbys \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),at_location(\" Arbys \")))","qid":"ef4b6c89-aa28-4fb8-8f5d-03afd4b102d0.0"}
{"source":"Great , and after the marketing presentation please schedule a meeting with Roger 's Team .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Roger \" ) ) ) ) ) ) ) :start ( ?= ( :end ( singleton ( :results ( FindEventWrapperWithDefaults :constraint ( Constraint[Event] :subject ( ?~= # ( String \" marketing presentation \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=\" Roger \")),starts_at(:end(FindEvents(has_subject(\" marketing presentation \"))))))","qid":"b1ec5c8a-13de-4ea7-a783-e58f4c8f80c3.2"}
{"source":"Add a team building event with my team for Next Wednesday at 5 .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" WEDNESDAY \" ) ) :time ( NumberPM :number # ( Number 5 ) ) ) ) :subject ( ?= # ( String \" team building \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),has_subject(\" team building \"),starts_at(NextDOW(\" WEDNESDAY \")),starts_at(NumberPM(5))))","qid":"024aeda4-5354-4b20-8344-9c6614862a73.3"}
{"source":"Please schedule me to meet with my manager next Tuesday at 2 PM for my performance review .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) :time ( NumberPM :number # ( Number 2 ) ) ) ) :subject ( ?= # ( String \" performance review \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),has_subject(\" performance review \"),starts_at(NextDOW(\" TUESDAY \")),starts_at(NumberPM(2))))","qid":"fc7c3a04-d485-4de5-83c7-943315a43ecc.0"}
{"source":"Please schedule a meeting with my boss tomorrow .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),starts_at(Tomorrow())))","qid":"f1f74b83-d48c-4ac1-bda3-9eb37a938175.4"}
{"source":"Set up dinner with Carl and his boss Friday at 7 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Carl \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Carl \" ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( NumberPM :number # ( Number 7 ) ) ) ) :subject ( ?= # ( String \" dinner \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Carl \"),with_attendee(FindManager(\" Carl \")),has_subject(\" dinner \"),starts_at(NextDOW(\" FRIDAY \")),starts_at(NumberPM(7))))","qid":"d25df751-b8f7-4ac2-90de-319323085d4f.0"}
{"source":"Schedule a meeting with Sandra 's manager today .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Sandra \" ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Today ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Sandra \")),starts_at(Today())))","qid":"7e5f4ec6-6fd9-4c76-ac38-6745702c6481.1"}
{"source":"Thanks . And I need to schedule Monday - Thursday next week with my team","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :nonEmptyBase ( EventAllDayForDateRange :dateRange ( DateAndConstraint :date1 ( DowOfWeekNew :dow # ( DayOfWeek \" MONDAY \" ) :week ( NextWeekList ) ) :date2 ( nextDayOfWeek ( DowOfWeekNew :dow # ( DayOfWeek \" MONDAY \" ) :week ( NextWeekList ) ) # ( DayOfWeek \" THURSDAY \" ) ) ) :event ( Constraint[Event] ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),spans_time(DateAndConstraint(date1=DowOfWeekNew(dow=DayOfWeek(\" MONDAY \"),week=NextWeekList()),date2=nextDayOfWeek(DowOfWeekNew(dow=DayOfWeek(\" MONDAY \"),week=NextWeekList()),DayOfWeek(\" THURSDAY \"))))))","qid":"f214d7df-a99b-49ce-bd70-0ab9fa594c9b.2"}
{"source":"put meet with my boss","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindManager(CurrentUser())))","qid":"06f3f14f-0c23-472f-8b08-54069c0853bd.2"}
{"source":"make a meeting with Abby 's team","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindTeamOf(recipient=\" Abby \")))","qid":"a1bdc66a-c719-453c-973f-95403fb81f94.1"}
{"source":"I need to see Crim 's team but not Abby","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Crim \" ) ) ) ) ) ) ) ( AttendeeListExcludesRecipient :recipient ( ?= ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=\" Crim \")),avoid_attendee(refer(Recipient?(name=LIKE(Abby))))))","qid":"97cd902a-f13b-48d6-bb84-990fdf4d8194.0"}
{"source":"Create a meeting in the afternoon on Monday with my team","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( DateTimeConstraint :constraint ( Afternoon ) :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(Afternoon()),starts_at(NextDOW(\" MONDAY \"))))","qid":"ad7b2926-df37-4f7f-8070-5483e73412da.3"}
{"source":"Who is Kim 's Skip , and can you schedule a meeting with him next week ?","original_target":"( do ( Yield :output ( FindManager :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim \" ) ) ) ) ) ) ) ) ( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( NextWeekList ) ) ) ) ) ) )","target":"do(Yield(FindManager(FindManager(\" Kim \"))),CreateEvent(AND(with_attendee(FindManager(FindManager(\" Kim \"))),starts_at(NextWeekList()))))","qid":"48f87c27-d4e2-45d9-b87a-56999dac9431.2"}
{"source":"Make a meeting with my team at NERD . We need a room","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :location ( andConstraint ( ?= # ( LocationKeyphrase \" NERD \" ) ) ( roomRequest ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),at_location(\" NERD \"),at_location(roomRequest())))","qid":"60bf1d15-bd89-4ed3-a337-84378841033b.0"}
{"source":"Make a 2 PM meeting with Josh and his manager .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Josh \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Josh \" ) ) ) ) ) ) ) ) :start ( ?= ( NextTime :time ( NumberPM :number # ( Number 2 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Josh \"),with_attendee(FindManager(\" Josh \")),starts_at(NextTime(time=NumberPM(2)))))","qid":"e2c84477-3747-41d8-9905-c45ad6499a27.0"}
{"source":"Create an meeting on Monday 10 AM with the whole Team .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :time ( NumberAM :number # ( Number 10.0 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(NextDOW(\" MONDAY \")),starts_at(NumberAM(10))))","qid":"b39b11ce-04e0-4c73-8d0f-d77668da699a.0"}
{"source":"Add a meeting on Thursday with my team .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" THURSDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(NextDOW(\" THURSDAY \"))))","qid":"563fde35-1fac-41e7-ada3-b69b17911d93.0"}
{"source":"Do i have any time to meet with Jessica and her manager today ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jessica \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jessica \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Today ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jessica \"),with_attendee(FindManager(\" Jessica \")),starts_at(Today())))","qid":"6b6489e8-1cb0-4944-b270-c9cce2ce0974.0"}
{"source":"Let 's schedule a meeting with Dan 's reports for Thursday afternoon .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindReports :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Dan \" ) ) ) ) ) ) ) :start ( DateTimeConstraint :constraint ( Afternoon ) :date ( NextDOW :dow # ( DayOfWeek \" THURSDAY \" ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindReports(recipient=refer(Recipient?(name=LIKE(Dan))))),starts_at(Afternoon()),starts_at(NextDOW(\" THURSDAY \"))))","qid":"d2e269e9-d96c-4cc7-8d99-730822b867e0.1"}
{"source":"Schedule marketing Session with ron and ron 's team today at 4 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" ron \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" ron \" ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Today ) :time ( NumberPM :number # ( Number 4 ) ) ) ) :subject ( ?= # ( String \" marketing Session \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" ron \"),with_attendee(FindTeamOf(recipient=\" ron \")),has_subject(\" marketing Session \"),starts_at(Today()),starts_at(NumberPM(4))))","qid":"c29d36ce-d427-42c6-b3ad-c673daf78463.0"}
{"source":"Schedule the appointment with the boss for Monday at 2 : 00 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :time ( NumberPM :number # ( Number 2 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),starts_at(NextDOW(\" MONDAY \")),starts_at(NumberPM(2))))","qid":"1c973fcd-c47b-4be0-90d8-b97c66871ea2.2"}
{"source":"Please make a meeting with Abby and her skip at 3 pm today","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Today ) :time ( NumberPM :number # ( Number 3 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Abby \"),with_attendee(FindManager(FindManager(\" Abby \"))),starts_at(Today()),starts_at(NumberPM(3))))","qid":"f3a29cc2-d842-4678-94a5-038d63285466.3"}
{"source":"Make a meeting with Jake 's team","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindTeamOf(recipient=\" Jake \")))","qid":"33e8fb3a-03d9-4046-a99d-41522b12ead9.0"}
{"source":"I need to make an appointment with boss at 10 am next Wednesday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" WEDNESDAY \" ) ) :time ( NumberAM :number # ( Number 10.0 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),starts_at(NextDOW(\" WEDNESDAY \")),starts_at(NumberAM(10))))","qid":"f5bd497c-ea24-45d8-b18f-a232885c7879.0"}
{"source":"make a coffee time Abby 's team","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ) :subject ( ?= # ( String \" coffee \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=\" Abby \")),has_subject(\" coffee \")))","qid":"c9de5458-e969-409f-97f5-c5bc19e59463.0"}
{"source":"make an event with my team on friday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(NextDOW(\" FRIDAY \"))))","qid":"e8fcc6c4-ad7f-4a0b-83b0-ad776b88c968.3"}
{"source":"I want to meet James , his supervisor Matt and his supervisor for coffee this week .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" James \" ) ) ) ) ) ) ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Matt \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Matt \" ) ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ThisWeek ) ) :subject ( ?= # ( String \" coffee \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" James \"),with_attendee(\" Matt \"),with_attendee(FindManager(\" Matt \")),has_subject(\" coffee \"),starts_at(ThisWeek())))","qid":"bd667849-51f1-438f-94b4-d68b7a7eada7.1"}
{"source":"Schedule another meeting for next week with my team , but do n't include Abby .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) ( AttendeeListExcludesRecipient :recipient ( ?= ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( NextWeekList ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),avoid_attendee(refer(Recipient?(name=LIKE(Abby)))),starts_at(NextWeekList())))","qid":"561d6b4a-7a91-4a60-8688-9f5230c21aef.1"}
{"source":"Please schedule a meeting with kim , her boss , elli and her boss","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" kim \" ) ) ) ) ) ) ( andConstraint ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" kim \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" elli \" ) ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" elli \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" elli \")),with_attendee(\" kim \"),with_attendee(FindManager(\" kim \")),with_attendee(\" elli \")))","qid":"d64b9bb5-2a71-4eb4-8f3c-5d2be35dda1e.0"}
{"source":"I will be with my team in Bellevue for the next 3 days . We need a room","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :location ( andConstraint ( ?= # ( LocationKeyphrase \" Bellevue \" ) ) ( roomRequest ) ) :nonEmptyBase ( EventAllDayStartingDateForPeriod :event ( Constraint[Event] ) :period ( toDays # ( Number 3 ) ) :startDate ( Today ) ) ) ) ) )","target":"CreateEvent(AND(has_duration(toDays(3)),starts_at(Today()),starts_at(Time(hour=0,minute=0)),with_attendee(FindTeamOf(recipient=CurrentUser())),at_location(\" Bellevue \"),at_location(roomRequest())))","qid":"99889134-1d06-4a5d-ae79-d76d108f71ab.2"}
{"source":"put meeting with manager gracy","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" gracy \" ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindManager(\" gracy \")))","qid":"9b24c1ad-2a2b-41af-a4e8-45f3c2e089ad.7"}
{"source":"I need to setup a meeting with my whole team for Tuesday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(NextDOW(\" TUESDAY \"))))","qid":"5f4b447f-3d4b-4e58-bae2-a3fbbbdef0d7.0"}
{"source":"create work conference with boss","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :subject ( ?= # ( String \" work conference \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),has_subject(\" work conference \")))","qid":"4adf51d8-9d47-42ac-a38f-c1d09ff7fc2f.0"}
{"source":"Schedule a with my boss on Friday at 2 : 30 to discuss quotas .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( HourMinutePm :hours # ( Number 2 ) :minutes # ( Number 30.0 ) ) ) ) :subject ( ?= # ( String \" discuss quotas \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),has_subject(\" discuss quotas \"),starts_at(NextDOW(\" FRIDAY \")),starts_at(HourMinutePm(hours=2,minutes=30))))","qid":"36350e17-8f38-462f-bcd9-d21933da51cc.1"}
{"source":"add to my calendar a meeting with my team for next week","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( NextWeekList ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(NextWeekList())))","qid":"4fb3ed33-2391-4962-8bbe-760e91a3c46d.0"}
{"source":"Make a meeting with Jesse Rosenfeld and his team","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jesse Rosenfeld \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jesse Rosenfeld \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jesse Rosenfeld \"),with_attendee(FindTeamOf(recipient=\" Jesse Rosenfeld \"))))","qid":"f1b95a5e-986c-456e-9521-2ff552de9e3c.1"}
{"source":"Schedule an event with my team for tomorrow at noon .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( Noon ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(Tomorrow()),starts_at(Noon())))","qid":"79a9a1be-c713-46bd-91d1-b3e8cfee5b1e.3"}
{"source":"I need to meet with Kim Possible and her team next week .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim Possible \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim Possible \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( NextWeekList ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Kim Possible \"),with_attendee(FindTeamOf(recipient=\" Kim Possible \")),starts_at(NextWeekList())))","qid":"078696ba-e595-49b5-bcd9-88c50ff49a7a.0"}
{"source":"i need a coffe break with my manager early on the 25 th","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( DateTimeConstraint :constraint ( Early ) :date ( nextDayOfMonth ( Today ) # ( Number 25 ) ) ) :subject ( ?= # ( String \" coffe break \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),has_subject(\" coffe break \"),starts_at(Early()),starts_at(nextDayOfMonth(Today(),25))))","qid":"6c6cf450-7ac4-47a4-9e42-a7a10408235f.0"}
{"source":"Schedule a new event with Anderson Daws and his team","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Anderson Daws \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Anderson Daws \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Anderson Daws \"),with_attendee(FindTeamOf(recipient=\" Anderson Daws \"))))","qid":"72e4aa03-7ebf-40b3-85f3-9f4d896c97b6.0"}
{"source":"Tuesday at 5 i have need an event with Mark and his boss","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Mark \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Mark \" ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) :time ( NumberPM :number # ( Number 5 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Mark \"),with_attendee(FindManager(\" Mark \")),starts_at(NextDOW(\" TUESDAY \")),starts_at(NumberPM(5))))","qid":"7d28a8fc-dff1-412d-a3d7-14a7ecf60426.0"}
{"source":"I need to schedule a meeting Thursday at noon with my supervisor .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" THURSDAY \" ) ) :time ( Noon ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),starts_at(NextDOW(\" THURSDAY \")),starts_at(Noon())))","qid":"affc6802-8fbb-4bb2-90e8-920815c09e28.0"}
{"source":"Make a meeting at NERD with my team . we need a room","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :location ( andConstraint ( ?= # ( LocationKeyphrase \" NERD \" ) ) ( roomRequest ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),at_location(\" NERD \"),at_location(roomRequest())))","qid":"49d53d3a-0306-4588-a38e-8cb84543074f.2"}
{"source":"make a date for my team for a meeting on Friday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(NextDOW(\" FRIDAY \"))))","qid":"2751fb60-c342-4edb-b12a-25c709c2b61f.0"}
{"source":"I have a meeting on Tuesday with my team","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(NextDOW(\" TUESDAY \"))))","qid":"93f3050a-18da-4c3b-9975-79d7d4863a22.0"}
{"source":"Add a lunch conference with David Lax 's direct reports this Sunday at 3 .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindReports :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" David Lax \" ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" SUNDAY \" ) ) :time ( NumberPM :number # ( Number 3 ) ) ) ) :subject ( ?= # ( String \" lunch conference \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindReports(recipient=refer(Recipient?(name=LIKE(David Lax))))),has_subject(\" lunch conference \"),starts_at(NextDOW(\" SUNDAY \")),starts_at(NumberPM(3))))","qid":"fbcd4218-8a8f-421d-a9a9-f4b58fb781bd.4"}
{"source":"I 'll need to meet with my team on Monday morning .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( DateTimeConstraint :constraint ( Morning ) :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(Morning()),starts_at(NextDOW(\" MONDAY \"))))","qid":"b6d97830-1b96-44ca-91f7-412c89aeed44.4"}
{"source":"Please set meting with Nicole 's Boss tomorrow after pick up the kids","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Nicole \" ) ) ) ) ) ) ) :start ( ?= ( :end ( singleton ( :results ( FindEventWrapperWithDefaults :constraint ( Constraint[Event] :subject ( ?~= # ( String \" pick up the kids \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Nicole \")),starts_at(:end(FindEvents(has_subject(\" pick up the kids \"))))))","qid":"1783008e-cc52-441f-8b52-4b9a80270d5a.5"}
{"source":"Create a meeting with Hector 's manager today","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Hector \" ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Today ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Hector \")),starts_at(Today())))","qid":"53849ed1-3127-457c-97fe-15a0251484b3.2"}
{"source":"Schedule meeting with Space Ghost 's boss , today .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Space Ghost \" ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Today ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Space Ghost \")),starts_at(Today())))","qid":"f5dc3939-64a8-4a94-be69-93c81256c2c0.0"}
{"source":"I 'd like to meet with Brit 's team after my email meeting .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Brit \" ) ) ) ) ) ) ) :start ( ?= ( :end ( singleton ( :results ( FindEventWrapperWithDefaults :constraint ( Constraint[Event] :subject ( ?~= # ( String \" email meeting \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=\" Brit \")),starts_at(:end(FindEvents(has_subject(\" email meeting \"))))))","qid":"e1876e30-6602-4b69-b644-ae4ca951b50e.0"}
{"source":"I need to book a meeting with Carlos and his boss Monday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Carlos \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Carlos \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Carlos \"),with_attendee(FindManager(\" Carlos \")),starts_at(NextDOW(\" MONDAY \"))))","qid":"bb9699ef-7439-401a-91b7-42ca7f082960.3"}
{"source":"Jake and his manager are coming over for a dinner party on Thursday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" THURSDAY \" ) ) ) ) :subject ( ?= # ( String \" dinner party \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jake \"),with_attendee(FindManager(\" Jake \")),has_subject(\" dinner party \"),starts_at(NextDOW(\" THURSDAY \"))))","qid":"fd23bc97-5af9-478a-b1bc-3fdb18420d59.3"}
{"source":"Set up Dress Code Violation with Jessie and her manager on Monday at 9 am .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jessie \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jessie \" ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :time ( NumberAM :number # ( Number 9 ) ) ) ) :subject ( ?= # ( String \" Dress Code Violation \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jessie \"),with_attendee(FindManager(\" Jessie \")),has_subject(\" Dress Code Violation \"),starts_at(NextDOW(\" MONDAY \")),starts_at(NumberAM(9))))","qid":"64e899dc-9dcf-4c22-b0fc-031d8bbf690a.2"}
{"source":"Can you make a meeting with Rory this afternoon with the manager ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Rory \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Rory \" ) ) ) ) ) ) ) :start ( DateTimeConstraint :constraint ( Afternoon ) :date ( Today ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Rory \")),with_attendee(\" Rory \"),starts_at(Afternoon()),starts_at(Today())))","qid":"776ed93f-4552-49be-88ab-793cbcb54cd3.3"}
{"source":"I need a year end review scheduled with my supervisor sometime next week in the morning","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( andConstraint ( Constraint[DateTime] :date ( NextWeekList ) ) ( Constraint[DateTime] :time ( Morning ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),starts_at(NextWeekList()),starts_at(Morning())))","qid":"e2055b05-016e-466d-aa80-b13c06a9634a.1"}
{"source":"Can you set a meeting for my team for Friday afternoon ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( DateTimeConstraint :constraint ( Afternoon ) :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(Afternoon()),starts_at(NextDOW(\" FRIDAY \"))))","qid":"e2a2de77-6c1c-4e80-b6a1-0fe72402e2d7.0"}
{"source":"Schedule with my manager about a very important matter .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :subject ( ?= # ( String \" a very important matter \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),has_subject(\" a very important matter \")))","qid":"1c29d5dc-2d2d-4fe4-b6a7-24879dde74c2.0"}
{"source":"add go out for drinks with Rory 's boss to my calendar","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Rory \" ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindManager(\" Rory \")))","qid":"27d797f7-ab9d-42be-bdbf-02915f68d828.4"}
{"source":"Schedule a meeting with Elli and her team tomorrow at the end of the work day .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Elli \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Elli \" ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( EndOfWorkDay ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Elli \"),with_attendee(FindTeamOf(recipient=\" Elli \")),starts_at(Tomorrow()),starts_at(EndOfWorkDay())))","qid":"37969f3a-72b5-45a1-a331-0d2b8a69c30d.0"}
{"source":"schedule a meeting at two with the staff","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( NextTime :time ( NumberPM :number # ( Number 2 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),starts_at(NextTime(time=NumberPM(2)))))","qid":"aaf8d097-2820-4c82-b21e-659ff59a91d5.0"}
{"source":"Create a meeting with Kim 's team","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim \" ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindTeamOf(recipient=\" Kim \")))","qid":"00e77679-ad06-4080-bfc1-83110762be8d.0"}
{"source":"Arrange a conference call with Joe and his supervisor in five minutes .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Joe \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Joe \" ) ) ) ) ) ) ) ) :start ( ?= ( adjustByPeriodDuration ( Now ) ( PeriodDuration :duration ( toMinutes # ( Number 5 ) ) ) ) ) :subject ( ?= # ( String \" conference call \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Joe \"),with_attendee(FindManager(\" Joe \")),has_subject(\" conference call \"),starts_at(adjustByPeriodDuration(Now(),PeriodDuration(duration=toMinutes(5))))))","qid":"de07d70e-574c-4632-b256-06c342e52dc6.1"}
{"source":"create volleyball game on monday with coworkers","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) ) ) :subject ( ?= # ( String \" volleyball game \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=CurrentUser())),has_subject(\" volleyball game \"),starts_at(NextDOW(\" MONDAY \"))))","qid":"0af2ea52-c8ca-4029-945f-523184e8ade2.0"}
{"source":"Make a new event with Watts team and remove Jesse","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Watts \" ) ) ) ) ) ) ) ( AttendeeListExcludesRecipient :recipient ( ?= ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jesse \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindTeamOf(recipient=\" Watts \")),avoid_attendee(refer(Recipient?(name=LIKE(Jesse))))))","qid":"f5ce36fc-ddba-4320-bcda-a48e62ae502b.1"}
{"source":"Make an event with kim 's team","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" kim \" ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindTeamOf(recipient=\" kim \")))","qid":"43269567-4a27-4912-9b06-16d9dc5ebcdc.3"}
{"source":"Schedule a meeting with Dan Schoffel and his reports tomorrow at noon .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Dan Schoffel \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindReports :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Dan Schoffel \" ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( Noon ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Dan Schoffel \"),with_attendee(FindReports(recipient=refer(Recipient?(name=LIKE(Dan Schoffel))))),starts_at(Tomorrow()),starts_at(Noon())))","qid":"5b2e8b31-9d53-4508-8162-55c136c59f39.0"}
{"source":"Make a meeting with the Manager on Thursday 10 AM","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" THURSDAY \" ) ) :time ( NumberAM :number # ( Number 10.0 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),starts_at(NextDOW(\" THURSDAY \")),starts_at(NumberAM(10))))","qid":"4d961722-9dfa-4a2a-b76e-d1bb54fbd407.0"}
{"source":"Can you schedule a meeting with my manager tomorrow night ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( DateTimeConstraint :constraint ( Night ) :date ( Tomorrow ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),starts_at(Night()),starts_at(Tomorrow())))","qid":"7b5ec15c-54f1-458e-a105-55761bea93b6.2"}
{"source":"Make a meeting with Kim and her team for Monday at 2 pm . Wanna call it \" Farewell Party \" and should last about 3 hours .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim \" ) ) ) ) ) ) ) ) :duration ( ?= ( toHours # ( Number 3 ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :time ( NumberPM :number # ( Number 2 ) ) ) ) :subject ( ?= # ( String \" Farewell Party \" ) ) ) ) ) )","target":"CreateEvent(AND(has_duration(toHours(3)),with_attendee(\" Kim \"),with_attendee(FindTeamOf(recipient=\" Kim \")),has_subject(\" Farewell Party \"),starts_at(NextDOW(\" MONDAY \")),starts_at(NumberPM(2))))","qid":"183d420d-c489-46d1-a6aa-497c4dd50250.1"}
{"source":"Schedule a call to my manager for today at 1 : 00 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Today ) :time ( NumberPM :number # ( Number 1 ) ) ) ) :subject ( ?= # ( String \" call \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(CurrentUser())),has_subject(\" call \"),starts_at(Today()),starts_at(NumberPM(1))))","qid":"ea997bb1-30fb-4558-ba27-632ddf193ad2.4"}
{"source":"Make a meeting with Dan Marton and his skip","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Dan Marton \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Dan Marton \" ) ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Dan Marton \"),with_attendee(FindManager(FindManager(\" Dan Marton \")))))","qid":"eb27c3f7-903d-4b6b-aead-81266ad92c4e.3"}
{"source":"Put a luncheon down with Isla and her team Friday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Isla \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Isla \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) ) ) :subject ( ?= # ( String \" luncheon \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Isla \"),with_attendee(FindTeamOf(recipient=\" Isla \")),has_subject(\" luncheon \"),starts_at(NextDOW(\" FRIDAY \"))))","qid":"c71106a9-a082-4999-bffb-89b1db1c2087.4"}
{"source":"Set up Rodeo Outing with Samuel and his boss on August 1 st at 2 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Samuel \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Samuel \" ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( MD :day # ( Number 1 ) :month # ( Month \" AUGUST \" ) ) :time ( NumberPM :number # ( Number 2 ) ) ) ) :subject ( ?= # ( String \" Rodeo Outing \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Samuel \"),with_attendee(FindManager(\" Samuel \")),has_subject(\" Rodeo Outing \"),starts_at(MD(month=\" AUGUST \",day=1)),starts_at(NumberPM(2))))","qid":"a30325b7-63af-4781-a073-8e946592df68.4"}
{"source":"Is julie 's supervisior availible tomorrow ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" julie \" ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" julie \")),starts_at(Tomorrow())))","qid":"01428b37-21c9-4661-a598-2edd90d04425.0"}
{"source":"add have brunch with Tim 's boss tuesday morning at 8 o'clock to my calendar","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Tim \" ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) :time ( NumberAM :number # ( Number 8 ) ) ) ) :subject ( ?= # ( String \" brunch \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(FindManager(\" Tim \")),has_subject(\" brunch \"),starts_at(NextDOW(\" TUESDAY \")),starts_at(NumberAM(8))))","qid":"5d63bb5c-52c3-4a0a-9d98-f36243d5037e.0"}
{"source":"I want to make a meeting with Abby and his manager .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Abby \"),with_attendee(FindManager(\" Abby \"))))","qid":"6e6c09f2-72ca-41c5-ab33-b2bc22bb96e0.1"}
{"source":"make an appointment with my boss .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(FindManager(CurrentUser())))","qid":"8e8e6989-9f88-4cc6-b812-329e8c19b0a3.0"}
{"source":"Can you add a meeting with Jennifer and her team for Thursday ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jennifer \" ) ) ) ) ) ) ( AttendeeListHasPeople :people ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jennifer \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" THURSDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jennifer \"),with_attendee(FindTeamOf(recipient=\" Jennifer \")),starts_at(NextDOW(\" THURSDAY \"))))","qid":"cdadbb96-14ea-4e94-a9ae-c2552cb139f5.3"}
{"source":"Frank and his manager need to meet with me on Thursday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Frank \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Frank \" ) ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" THURSDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Frank \"),with_attendee(FindManager(\" Frank \")),starts_at(NextDOW(\" THURSDAY \"))))","qid":"c0b288b7-01f4-4cf1-86a6-8b246d998f77.4"}
{"source":"Starting tomorrow put the next 3 days of me being at the convention","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( EventAllDayForDateRange :dateRange ( DateAndConstraint :date1 ( Tomorrow ) :date2 ( adjustByPeriod ( Tomorrow ) ( toDays # ( Number 3 ) ) ) ) :event ( Constraint[Event] :subject ( ?= # ( String \" convention \" ) ) ) ) ) ) )","target":"CreateEvent(AND(spans_time(DateAndConstraint(date1=Tomorrow(),date2=adjustByPeriod(Tomorrow(),toDays(3)))),has_subject(\" convention \")))","qid":"de44f4f6-b15a-4a86-a00f-4b1953a8afbf.0"}
{"source":"schedule a meeting with johnson and gary next friday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" johnson \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" gary \" ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" johnson \"),with_attendee(\" gary \"),starts_at(NextDOW(\" FRIDAY \"))))","qid":"615b27f7-428f-448b-b9b4-94e911681bbf.0"}
{"source":"I saw a late night movie with Emmy last night . Put that on the calendar .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Emmy \" ) ) ) ) ) ) :start ( DateTimeConstraint :constraint ( Night ) :date ( Yesterday ) ) :subject ( ?= # ( String \" late night movie \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Emmy \"),has_subject(\" late night movie \"),starts_at(Night()),starts_at(Yesterday())))","qid":"b72b234d-cf23-45be-9265-33b415ada122.4"}
{"source":"Wait , I also have a doctor 's appointment tomorrow at 6 : 45 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( HourMinutePm :hours # ( Number 6 ) :minutes # ( Number 45 ) ) ) ) :subject ( ?= # ( String \" doctor's appointment \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" doctor's appointment \"),starts_at(Tomorrow()),starts_at(HourMinutePm(hours=6,minutes=45))))","qid":"24e27c5d-b0ed-41e0-af5c-15509ccbee22.3"}
{"source":"Put Family time from 1 to 4 pm on Sunday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :end ( ?= ( TimeAfterDateTime :dateTime ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" SUNDAY \" ) ) :time ( NumberPM :number # ( Number 1 ) ) ) :time ( NumberPM :number # ( Number 4 ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" SUNDAY \" ) ) :time ( NumberPM :number # ( Number 1 ) ) ) ) :subject ( ?= # ( String \" Family time \" ) ) ) ) ) )","target":"CreateEvent(AND(ends_at(AND(GE(DateTime?(date=NextDOW(\" SUNDAY \"),time=NumberPM(1))),NumberPM(4))),has_subject(\" Family time \"),starts_at(NextDOW(\" SUNDAY \")),starts_at(NumberPM(1))))","qid":"d1f5d9b9-d09f-408f-a3cc-7c60b1b1a3c9.3"}
{"source":"Schedule vet appointment on April 12 .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( MD :day # ( Number 12 ) :month # ( Month \" APRIL \" ) ) ) ) :subject ( ?= # ( String \" vet appointment \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" vet appointment \"),starts_at(MD(month=\" APRIL \",day=12))))","qid":"71e58e47-b22e-4b63-8757-10c241873add.0"}
{"source":"Can you book my spa appointment after my dentist appointment ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( :end ( singleton ( :results ( FindEventWrapperWithDefaults :constraint ( Constraint[Event] :subject ( ?~= # ( String \" dentist appointment \" ) ) ) ) ) ) ) ) :subject ( ?= # ( String \" spa appointment \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" spa appointment \"),starts_at(:end(FindEvents(has_subject(\" dentist appointment \"))))))","qid":"9229bc33-aefe-4427-97ac-33d0517e1c77.4"}
{"source":"Can you set up an all day event from this Friday to next Friday called Vacation ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( EventAllDayForDateRange :dateRange ( DateAndConstraint :date1 ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :date2 ( nextDayOfWeek ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) # ( DayOfWeek \" FRIDAY \" ) ) ) :event ( Constraint[Event] :subject ( ?= # ( String \" Vacation \" ) ) ) ) ) ) )","target":"CreateEvent(AND(spans_time(DateAndConstraint(date1=NextDOW(\" FRIDAY \"),date2=nextDayOfWeek(NextDOW(\" FRIDAY \"),DayOfWeek(\" FRIDAY \")))),has_subject(\" Vacation \")))","qid":"14f33b47-f5a6-44e4-810c-f7462a27a9d4.4"}
{"source":"Thank you ! Can we also set a Webinar for wednesday at 12 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" WEDNESDAY \" ) ) :time ( NumberPM :number # ( Number 12 ) ) ) ) :subject ( ?= # ( String \" Webinar \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" Webinar \"),starts_at(NextDOW(\" WEDNESDAY \")),starts_at(NumberPM(12))))","qid":"33701e88-7116-4df2-bdfa-2ebd8012075d.1"}
{"source":"Create event called doggies 1 st bday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :subject ( ?= # ( String \" doggies 1st bday \" ) ) ) ) ) )","target":"CreateEvent(has_subject(\" doggies 1st bday \"))","qid":"85b7220d-6a7e-4827-ade2-de1d8c7f33be.0"}
{"source":"Get a room in Cambridge at 3 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :location ( andConstraint ( ?= # ( LocationKeyphrase \" Cambridge \" ) ) ( roomRequest ) ) :start ( ?= ( NextTime :time ( NumberPM :number # ( Number 3 ) ) ) ) :subject ( ?= # ( String \" Get a room in Cambridge \" ) ) ) ) ) )","target":"CreateEvent(AND(at_location(\" Cambridge \"),at_location(roomRequest()),has_subject(\" Get a room in Cambridge \"),starts_at(NextTime(time=NumberPM(3)))))","qid":"677232a0-7868-4434-945b-27535c402073.0"}
{"source":"I have to go through paperwork from 9 to 10 am .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :end ( ?= ( TimeAfterDateTime :dateTime ( NextTime :time ( NumberAM :number # ( Number 9 ) ) ) :time ( NumberAM :number # ( Number 10.0 ) ) ) ) :start ( ?= ( NextTime :time ( NumberAM :number # ( Number 9 ) ) ) ) :subject ( ?= # ( String \" go through paperwork \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" go through paperwork \"),starts_at(NextTime(time=NumberAM(9))),ends_at(AND(GE(NextTime(time=NumberAM(9))),NumberAM(10)))))","qid":"e8a3ecb9-ec94-4aa6-b96b-8afbf639f40a.2"}
{"source":"Make me a new meeting tomorrow at 10 am","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberAM :number # ( Number 10.0 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(starts_at(Tomorrow()),starts_at(NumberAM(10))))","qid":"ed0c533d-610e-4164-8bd2-c1447337fbf3.4"}
{"source":"I need to make an appointment at 5 pm called \" Dinner \" .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( NextTime :time ( NumberPM :number # ( Number 5 ) ) ) ) :subject ( ?= # ( String \" Dinner \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" Dinner \"),starts_at(NextTime(time=NumberPM(5)))))","qid":"a3a6749f-30b8-4f78-9dca-751435c7752a.1"}
{"source":"make the meeting sync on Thursday with Barak Obama","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Barak Obama \" ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" THURSDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Barak Obama \"),starts_at(NextDOW(\" THURSDAY \"))))","qid":"6c54a450-bd3f-4ae0-a522-5e0fcdee69be.9"}
{"source":"Can you make one for 9 am for breakfast","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( NextTime :time ( NumberAM :number # ( Number 9 ) ) ) ) :subject ( ?= # ( String \" breakfast \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" breakfast \"),starts_at(NextTime(time=NumberAM(9)))))","qid":"75d4de6d-2809-49c7-a8f4-dac899d47dfd.2"}
{"source":"Can you add that I had a Sales Meeting last Wednesday at 2 : 30 pm ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( previousDayOfWeek ( Today ) # ( DayOfWeek \" WEDNESDAY \" ) ) :time ( HourMinutePm :hours # ( Number 2 ) :minutes # ( Number 30.0 ) ) ) ) :subject ( ?= # ( String \" Sales Meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" Sales Meeting \"),starts_at(previousDayOfWeek(Today(),DayOfWeek(\" WEDNESDAY \"))),starts_at(HourMinutePm(hours=2,minutes=30))))","qid":"1c3f1471-16a5-4fe7-9531-537ed5e74c90.1"}
{"source":"make a meeting with Abby","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(\" Abby \"))","qid":"0241dd90-eb12-4505-bb0f-2d4bfdc92058.7"}
{"source":"I have a tee time for 11 am sunday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" SUNDAY \" ) ) :time ( NumberAM :number # ( Number 11 ) ) ) ) :subject ( ?= # ( String \" tee time \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" tee time \"),starts_at(NextDOW(\" SUNDAY \")),starts_at(NumberAM(11))))","qid":"a436ff8f-df51-4476-8ae2-2f70206918d1.0"}
{"source":"Local presentation for the children tomorrow at 3 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 3 ) ) ) ) :subject ( ?= # ( String \" Local presentation for the children \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" Local presentation for the children \"),starts_at(Tomorrow()),starts_at(NumberPM(3))))","qid":"026c7b1d-f819-4e13-9c65-ee39b84f8509.0"}
{"source":"Set up Disney Trip for 10 am on July 31 st at Disney 's Hollywood Studios .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :location ( ?= # ( LocationKeyphrase \" Disney's Hollywood Studios \" ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( MD :day # ( Number 31 ) :month # ( Month \" JULY \" ) ) :time ( NumberAM :number # ( Number 10.0 ) ) ) ) :subject ( ?= # ( String \" Disney Trip \" ) ) ) ) ) )","target":"CreateEvent(AND(at_location(\" Disney's Hollywood Studios \"),has_subject(\" Disney Trip \"),starts_at(MD(month=\" JULY \",day=31)),starts_at(NumberAM(10))))","qid":"5283536c-1f5e-4e4c-8a4c-d52907078eac.4"}
{"source":"add Mohave Mental Health to my address book","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :subject ( ?= # ( String \" Mohave Mental \" ) ) ) ) ) )","target":"CreateEvent(has_subject(\" Mohave Mental \"))","qid":"fb14eb4c-18b1-4c5f-a5fb-442105f94781.7"}
{"source":"Now make Marketing meeting on Thursday at 2 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" THURSDAY \" ) ) :time ( NumberPM :number # ( Number 2 ) ) ) ) :subject ( ?= # ( String \" Marketing meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" Marketing meeting \"),starts_at(NextDOW(\" THURSDAY \")),starts_at(NumberPM(2))))","qid":"dfd58bdd-572c-4d60-b249-b0b5c9bfe936.3"}
{"source":"Schedule sports meeting for 1 pm Friday with John .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" John \" ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( NumberPM :number # ( Number 1 ) ) ) ) :subject ( ?= # ( String \" sports meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" John \"),has_subject(\" sports meeting \"),starts_at(NextDOW(\" FRIDAY \")),starts_at(NumberPM(1))))","qid":"f50a4563-08ce-447d-9710-5bf010a23be0.3"}
{"source":"Thank you . Can you add in book club this saturday at 7 pm with Abby , Jesse , and Jake ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jesse \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" SATURDAY \" ) ) :time ( NumberPM :number # ( Number 7 ) ) ) ) :subject ( ?= # ( String \" book club \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jake \"),with_attendee(\" Abby \"),with_attendee(\" Jesse \"),has_subject(\" book club \"),starts_at(NextDOW(\" SATURDAY \")),starts_at(NumberPM(7))))","qid":"8add24f4-acba-41c4-91c8-91e5911bd378.3"}
{"source":"I had a team exercise this morning with Jim , can you add that to my calendar","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jim \" ) ) ) ) ) ) :start ( DateTimeConstraint :constraint ( Morning ) :date ( Today ) ) :subject ( ?= # ( String \" team exercise \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jim \"),has_subject(\" team exercise \"),starts_at(Morning()),starts_at(Today())))","qid":"051a2ba6-615f-40e2-8c6a-97babac1ce57.2"}
{"source":"Create an event in 2022 called RCRA Cert","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( FullYearofYear :year # ( Number 2022 ) ) ) :subject ( ?= # ( String \" RCRA Cert \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" RCRA Cert \"),starts_at(FullYearofYear(2022))))","qid":"36d3eaf6-6c60-46a9-81ff-2b8e8ab6be56.0"}
{"source":"Who is Bobby 's manager ?","original_target":"( Yield :output ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Bobby \" ) ) ) ) ) ) )","target":"FindManager(\" Bobby \")","qid":"239fe291-6c74-41b8-9233-03d295d320e1.0"}
{"source":"Ok , schedule a room for the tech meeting for 4 pm tomorrow","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :location ( roomRequest ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 4 ) ) ) ) :subject ( ?= # ( String \" tech meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(at_location(roomRequest()),has_subject(\" tech meeting \"),starts_at(Tomorrow()),starts_at(NumberPM(4))))","qid":"eeb454db-d362-48cd-b203-82ee3a2638c5.2"}
{"source":"I need to create an event for sales meeting at 11 am tomorrow for a couple hours","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :duration ( ?= ( toHours ( Acouple ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberAM :number # ( Number 11 ) ) ) ) :subject ( ?= # ( String \" sales meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(has_duration(toHours(Acouple())),has_subject(\" sales meeting \"),starts_at(Tomorrow()),starts_at(NumberAM(11))))","qid":"e4c51034-c0e2-480c-af21-55014fb65ba4.2"}
{"source":"Set up a meeting at 4 pm on saturday and invite Sarah .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Sarah \" ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" SATURDAY \" ) ) :time ( NumberPM :number # ( Number 4 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Sarah \"),starts_at(NextDOW(\" SATURDAY \")),starts_at(NumberPM(4))))","qid":"36eeea69-1ef1-4b82-a13d-3aa7fb077a65.0"}
{"source":"Add coffee with Sam for tomorrow at 11 am .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Sam \" ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberAM :number # ( Number 11 ) ) ) ) :subject ( ?= # ( String \" coffee \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Sam \"),has_subject(\" coffee \"),starts_at(Tomorrow()),starts_at(NumberAM(11))))","qid":"e0a64d25-d46b-4fb3-a993-236ba30aebf9.0"}
{"source":"put meeting with johny james","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" johny james \" ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(\" johny james \"))","qid":"55e80202-c650-4cb1-a63a-9eca1a629d4e.3"}
{"source":"Schedule a planning meeting with Jesse , Sean , and Greta","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jesse \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Sean \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Greta \" ) ) ) ) ) ) ) :subject ( ?= # ( String \" planning meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Greta \"),with_attendee(\" Jesse \"),with_attendee(\" Sean \"),has_subject(\" planning meeting \")))","qid":"55ff746b-f51c-49a1-ba30-e4aa1b9fb2cb.2"}
{"source":"I need 2 hours booked in NERD for monday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :duration ( ?= ( toHours # ( Number 2 ) ) ) :location ( andConstraint ( ?= # ( LocationKeyphrase \" NERD \" ) ) ( roomRequest ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(at_location(\" NERD \"),at_location(roomRequest()),starts_at(NextDOW(\" MONDAY \")),has_duration(toHours(2))))","qid":"9b457de4-b036-4e7e-9c1d-4dfe50dc6ace.0"}
{"source":"Please make a lunch date with Karen ending at noon .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Karen \" ) ) ) ) ) ) :end ( Constraint[DateTime] :time ( ?= ( Noon ) ) ) :subject ( ?= # ( String \" lunch date \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Karen \"),has_subject(\" lunch date \"),ends_at(Noon())))","qid":"041d9680-a431-4bb3-ae21-329404f93da5.4"}
{"source":"I need performance review meeting after 1 pm Wednesday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( DateTimeConstraint :constraint ( ?> ( NumberPM :number # ( Number 1 ) ) ) :date ( NextDOW :dow # ( DayOfWeek \" WEDNESDAY \" ) ) ) :subject ( ?= # ( String \" performance review \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" performance review \"),starts_at(GT(NumberPM(1))),starts_at(NextDOW(\" WEDNESDAY \"))))","qid":"b3089ece-424a-4b8d-8abb-d90b7f40e0e3.3"}
{"source":"MAKE A APPOINTMENT TOMORROW","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) ) ) ) )","target":"CreateEvent(starts_at(Tomorrow()))","qid":"dcf64c84-3884-4ecd-918a-eb8c0d98f24d.3"}
{"source":"Book a doctors appointment next Friday at 2 : 00 PM please .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( NumberPM :number # ( Number 2 ) ) ) ) :subject ( ?= # ( String \" doctors appointment \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" doctors appointment \"),starts_at(NextDOW(\" FRIDAY \")),starts_at(NumberPM(2))))","qid":"4d038d1b-1d6b-45c5-a9a4-989e2c1e72cb.0"}
{"source":"Great . Can you schedule a doctors appointment on the 8 th at 9 a.m.","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( nextDayOfMonth ( Today ) # ( Number 8 ) ) :time ( NumberAM :number # ( Number 9 ) ) ) ) :subject ( ?= # ( String \" doctors appointment \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" doctors appointment \"),starts_at(nextDayOfMonth(Today(),8)),starts_at(NumberAM(9))))","qid":"bf8730f4-73a9-40c7-92b4-6dc799f9c58b.1"}
{"source":"Make an appointment 6 months after my dentist appointment and 20 minutes earlier .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( :date ( adjustByPeriodDuration ( :start ( singleton ( :results ( FindEventWrapperWithDefaults :constraint ( Constraint[Event] :subject ( ?~= # ( String \" dentist appointment \" ) ) ) ) ) ) ) ( PeriodDuration :period ( toMonths # ( Number 6 ) ) ) ) ) :time ( :time ( PeriodDurationBeforeDateTime :dateTime ( :start ( singleton ( :results ( FindEventWrapperWithDefaults :constraint ( Constraint[Event] :subject ( ?~= # ( String \" dentist appointment \" ) ) ) ) ) ) ) :periodDuration ( PeriodDuration :duration ( toMinutes # ( Number 20.0 ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(starts_at(:date(adjustByPeriodDuration(:start(FindEvents(has_subject(\" dentist appointment \"))),PeriodDuration(period=toMonths(6))))),starts_at(:time(PeriodDurationBeforeDateTime(dateTime=:start(FindEvents(has_subject(\" dentist appointment \"))),periodDuration=PeriodDuration(duration=toMinutes(20)))))))","qid":"a18b6f0c-a5b0-439b-838b-ca8e9adaef04.1"}
{"source":"Put a one on one with Lisa for Friday at 4","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Lisa \" ) ) ) ) ) ) :isOneOnOne ( ?= # ( Boolean true ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( NumberPM :number # ( Number 4 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(is_oneOnOne(),with_attendee(\" Lisa \"),starts_at(NextDOW(\" FRIDAY \")),starts_at(NumberPM(4))))","qid":"82bcf6e4-b9e9-4a7b-b1c4-a577c8738e88.2"}
{"source":"create meeting with jeff","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" jeff \" ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(\" jeff \"))","qid":"f6a08c0c-48a2-4f63-b825-e7bb883a6c94.0"}
{"source":"Add dinner and drinks with Maria at 6 : 30 PM on Thursday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Maria \" ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" THURSDAY \" ) ) :time ( HourMinutePm :hours # ( Number 6 ) :minutes # ( Number 30.0 ) ) ) ) :subject ( ?= # ( String \" dinner and drinks \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Maria \"),has_subject(\" dinner and drinks \"),starts_at(NextDOW(\" THURSDAY \")),starts_at(HourMinutePm(hours=6,minutes=30))))","qid":"1875f918-9da5-42c5-93b9-fdc429f6c5f7.0"}
{"source":"Make a meeting with Josh for 5 pm at Starbucks .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Josh \" ) ) ) ) ) ) :location ( ?= # ( LocationKeyphrase \" Starbucks \" ) ) :start ( ?= ( NextTime :time ( NumberPM :number # ( Number 5 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Josh \"),at_location(\" Starbucks \"),starts_at(NextTime(time=NumberPM(5)))))","qid":"b5a9cd60-08c9-4182-8550-a973a31c8b73.1"}
{"source":"Put in a meeting Thursday at 4 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" THURSDAY \" ) ) :time ( NumberPM :number # ( Number 4 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(starts_at(NextDOW(\" THURSDAY \")),starts_at(NumberPM(4))))","qid":"f19bdb15-e8c4-41ad-81ab-6a381fb7d76b.4"}
{"source":"Saturday at 5 pm I have a dinner a birthday party that should go to 8 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :end ( ?= ( TimeAfterDateTime :dateTime ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" SATURDAY \" ) ) :time ( NumberPM :number # ( Number 5 ) ) ) :time ( NumberPM :number # ( Number 8 ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" SATURDAY \" ) ) :time ( NumberPM :number # ( Number 5 ) ) ) ) :subject ( ?= # ( String \" dinner a birthday party \" ) ) ) ) ) )","target":"CreateEvent(AND(ends_at(AND(GE(DateTime?(date=NextDOW(\" SATURDAY \"),time=NumberPM(5))),NumberPM(8))),has_subject(\" dinner a birthday party \"),starts_at(NextDOW(\" SATURDAY \")),starts_at(NumberPM(5))))","qid":"bdc4f12d-b398-4b30-aeac-ebc1271e33bd.4"}
{"source":"Add an event called \" New Meeting Time \" to today at 4 PM .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( Today ) :time ( NumberPM :number # ( Number 4 ) ) ) ) :subject ( ?= # ( String \" New Meeting Time \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" New Meeting Time \"),starts_at(Today()),starts_at(NumberPM(4))))","qid":"b0b8954a-3795-4645-a25e-6909361bc6c5.0"}
{"source":"I 'm going to the mall tomorrow at 3 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 3 ) ) ) ) :subject ( ?= # ( String \" going to the mall \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" going to the mall \"),starts_at(Tomorrow()),starts_at(NumberPM(3))))","qid":"f462c742-dd5e-4172-89c4-f4a51dea39e5.3"}
{"source":"create basketball work game on monday at 2","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :time ( NumberPM :number # ( Number 2 ) ) ) ) :subject ( ?= # ( String \" basketball work game \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" basketball work game \"),starts_at(NextDOW(\" MONDAY \")),starts_at(NumberPM(2))))","qid":"4ea146a2-30fc-4ea6-804a-e07a2a88b0ca.0"}
{"source":"add an event for me on April 5 th","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( MD :day # ( Number 5 ) :month # ( Month \" APRIL \" ) ) ) ) ) ) ) )","target":"CreateEvent(starts_at(MD(month=\" APRIL \",day=5)))","qid":"b253aa17-a378-4a68-9f7d-8cc9110e2ce1.3"}
{"source":"Put a meeting with Jack on my schedule for tomorrow at 1 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jack \" ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 1 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jack \"),starts_at(Tomorrow()),starts_at(NumberPM(1))))","qid":"5206a71f-dec1-4949-81cc-7aab90b17936.3"}
{"source":"Can set meeting with john on Monday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" john \" ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" john \"),starts_at(NextDOW(\" MONDAY \"))))","qid":"36425351-8d55-4718-971c-9d4b557ac162.3"}
{"source":"Schedule morning run for tomorrow .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( DateTimeConstraint :constraint ( Morning ) :date ( Tomorrow ) ) :subject ( ?= # ( String \" run \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" run \"),starts_at(Morning()),starts_at(Tomorrow())))","qid":"a9ee86d8-d9bd-4a04-8070-e51a8339f660.4"}
{"source":"Schedule 3 pm tentative shareholders huddle","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :showAs ( ?= # ( ShowAsStatus \" Tentative \" ) ) :start ( ?= ( NextTime :time ( NumberPM :number # ( Number 3 ) ) ) ) :subject ( ?= # ( String \" shareholders huddle \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" shareholders huddle \"),starts_at(NextTime(time=NumberPM(3))),has_status(ShowAsStatus(\" Tentative \"))))","qid":"c32a0049-0480-42c8-bc67-32a5b542210b.0"}
{"source":"Mark will be meeting with me this afternoon .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Mark \" ) ) ) ) ) ) :start ( DateTimeConstraint :constraint ( Afternoon ) :date ( Today ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Mark \"),starts_at(Afternoon()),starts_at(Today())))","qid":"3154755d-efd9-4929-8e16-7b2e141e456b.4"}
{"source":"Update calendar for dads birthday Dec 23 rd","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( MD :day # ( Number 23 ) :month # ( Month \" DECEMBER \" ) ) ) ) :subject ( ?= # ( String \" dads birthday \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" dads birthday \"),starts_at(MD(month=\" DECEMBER \",day=23))))","qid":"9fc45334-d00b-47dd-915a-4b0300526859.0"}
{"source":"Can you put dinner one hour after the doctor appointment ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( adjustByPeriodDuration ( :end ( singleton ( :results ( FindEventWrapperWithDefaults :constraint ( Constraint[Event] :subject ( ?~= # ( String \" doctor appointment \" ) ) ) ) ) ) ) ( PeriodDuration :duration ( toHours # ( Number 1 ) ) ) ) ) :subject ( ?= # ( String \" dinner \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" dinner \"),starts_at(adjustByPeriodDuration(:end(FindEvents(has_subject(\" doctor appointment \"))),PeriodDuration(duration=toHours(1))))))","qid":"4899cfe3-dc80-4473-a15a-afd385494df9.3"}
{"source":"Set Up Romantic Meeting at 1 pm on July 31 st at The Empire State Building .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :location ( ?= # ( LocationKeyphrase \" The Empire State Building \" ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( MD :day # ( Number 31 ) :month # ( Month \" JULY \" ) ) :time ( NumberPM :number # ( Number 1 ) ) ) ) :subject ( ?= # ( String \" Romantic Meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(at_location(\" The Empire State Building \"),has_subject(\" Romantic Meeting \"),starts_at(MD(month=\" JULY \",day=31)),starts_at(NumberPM(1))))","qid":"a7d047a4-c211-4d9d-bff3-1c65623fd422.0"}
{"source":"Just schedule shopping tomorrow at 5 .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 5 ) ) ) ) :subject ( ?= # ( String \" shopping \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" shopping \"),starts_at(Tomorrow()),starts_at(NumberPM(5))))","qid":"f3359d61-9405-43bb-b1ce-1a70ffca12e3.1"}
{"source":"I need an appointment around the afternoon for an hour with katie .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" katie \" ) ) ) ) ) ) :duration ( ?= ( toHours # ( Number 1 ) ) ) :start ( DateTimeConstraint :constraint ( Afternoon ) :date ( Today ) ) ) ) ) )","target":"CreateEvent(AND(has_duration(toHours(1)),with_attendee(\" katie \"),starts_at(Afternoon()),starts_at(Today())))","qid":"f9b28e69-e926-4fec-9635-12b5254a4211.2"}
{"source":"i want to block out 2 hours to clean the house tomorrow morning please","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :duration ( ?= ( toHours # ( Number 2 ) ) ) :start ( DateTimeConstraint :constraint ( Morning ) :date ( Tomorrow ) ) :subject ( ?= # ( String \" clean the house \" ) ) ) ) ) )","target":"CreateEvent(AND(has_duration(toHours(2)),has_subject(\" clean the house \"),starts_at(Morning()),starts_at(Tomorrow())))","qid":"204c308e-c3f3-49c1-bf3e-58aecbeee6ce.0"}
{"source":"we had our company potluck last October 28 th at 6 am","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( previousMonthDay ( Today ) # ( Month \" OCTOBER \" ) # ( Number 28 ) ) :time ( NumberAM :number # ( Number 6 ) ) ) ) :subject ( ?= # ( String \" company potluck \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" company potluck \"),starts_at(previousMonthDay(Today(),Month(\" OCTOBER \"),28)),starts_at(NumberAM(6))))","qid":"a6ecfa99-d18a-44c2-8429-e61e0a8c574b.0"}
{"source":"Schedule Tennis at The Casa Cabana tomorrow from 1 to 4 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :end ( ?= ( TimeAfterDateTime :dateTime ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 1 ) ) ) :time ( NumberPM :number # ( Number 4 ) ) ) ) :location ( ?= # ( LocationKeyphrase \" The Casa Cabana \" ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 1 ) ) ) ) :subject ( ?= # ( String \" Tennis \" ) ) ) ) ) )","target":"CreateEvent(AND(ends_at(AND(GE(DateTime?(date=Tomorrow(),time=NumberPM(1))),NumberPM(4))),at_location(\" The Casa Cabana \"),has_subject(\" Tennis \"),starts_at(Tomorrow()),starts_at(NumberPM(1))))","qid":"ef6501f9-79ef-462c-b323-5f89ea73568c.1"}
{"source":"I 'll be in court from 12 : 30 until the end of the day tomorrow .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :end ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( EndOfWorkDay ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Today ) :time ( HourMinutePm :hours # ( Number 12 ) :minutes # ( Number 30.0 ) ) ) ) :subject ( ?= # ( String \" court \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" court \"),starts_at(Today()),starts_at(HourMinutePm(hours=12,minutes=30)),ends_at(Tomorrow()),ends_at(EndOfWorkDay())))","qid":"b9a57755-34f5-406b-b8c3-1461429da969.2"}
{"source":"Add a meeting with Anna today at 1 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Anna \" ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Today ) :time ( NumberPM :number # ( Number 1 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Anna \"),starts_at(Today()),starts_at(NumberPM(1))))","qid":"47aa12c3-d912-47ac-b585-03dcd4ac3827.0"}
{"source":"NYTHING ON MONDAY","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) ) ) :subject ( ?= # ( String \" NYTHING \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" NYTHING \"),starts_at(NextDOW(\" MONDAY \"))))","qid":"340e0a9e-21d6-4ce2-9709-c624ed6b8b82.0"}
{"source":"Create event for 2 o'clock today","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( Today ) :time ( NumberPM :number # ( Number 2 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(starts_at(Today()),starts_at(NumberPM(2))))","qid":"b2dedf0c-1e63-4fb2-ac2a-89970724dea4.0"}
{"source":"I would like to create a new event .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] ) ) ) )","target":"CreateEvent(Event?())","qid":"864a9589-2d94-4fef-8961-5e4f1a708f45.1"}
{"source":"lunch with janice kang wednesday at 12","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" janice kang \" ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" WEDNESDAY \" ) ) :time ( NumberPM :number # ( Number 12 ) ) ) ) :subject ( ?= # ( String \" lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" janice kang \"),has_subject(\" lunch \"),starts_at(NextDOW(\" WEDNESDAY \")),starts_at(NumberPM(12))))","qid":"21be0cec-cd97-4e6b-a78d-691735ea2029.26"}
{"source":"Add to my calendar a lunch with Sarah at 11 : 30 am tomorrow .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Sarah \" ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( HourMinuteAm :hours # ( Number 11 ) :minutes # ( Number 30.0 ) ) ) ) :subject ( ?= # ( String \" lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Sarah \"),has_subject(\" lunch \"),starts_at(Tomorrow()),starts_at(HourMinuteAm(hours=11,minutes=30))))","qid":"07860c57-c664-4fa7-9383-ba1cd53183c7.2"}
{"source":"Create an event for me at Tuesday on the 9 pm please","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) :time ( NumberPM :number # ( Number 9 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(starts_at(NextDOW(\" TUESDAY \")),starts_at(NumberPM(9))))","qid":"842559d0-3f0b-4cca-8b67-429f3d7691cd.0"}
{"source":"Can you make note of a lunch appointment with Page Ashworth on this coming Thursday ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Page Ashworth \" ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" THURSDAY \" ) ) ) ) :subject ( ?= # ( String \" lunch appointment \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Page Ashworth \"),has_subject(\" lunch appointment \"),starts_at(NextDOW(\" THURSDAY \"))))","qid":"7a2ee159-01de-41a8-9ce1-c15e16647bf7.1"}
{"source":"Please show me as busy today from 2 to 5 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :end ( ?= ( TimeAfterDateTime :dateTime ( DateAtTimeWithDefaults :date ( Today ) :time ( NumberPM :number # ( Number 2 ) ) ) :time ( NumberPM :number # ( Number 5 ) ) ) ) :showAs ( ?= # ( ShowAsStatus \" Busy \" ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Today ) :time ( NumberPM :number # ( Number 2 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(ends_at(AND(GE(DateTime?(date=Today(),time=NumberPM(2))),NumberPM(5))),has_status(ShowAsStatus(\" Busy \")),starts_at(Today()),starts_at(NumberPM(2))))","qid":"f180e607-103c-4042-a3d9-d1173d368710.0"}
{"source":"Add Shop for Wedding Dresses as an all day event on the 14 th of September .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( EventAllDayOnDate :date ( MD :day # ( Number 14 ) :month # ( Month \" SEPTEMBER \" ) ) :event ( Constraint[Event] :subject ( ?= # ( String \" Shop for Wedding \" ) ) ) ) ) ) )","target":"CreateEvent(AND(spans_time(MD(month=\" SEPTEMBER \",day=14)),has_subject(\" Shop for Wedding \")))","qid":"d398a0cc-0acb-4ec9-b5c2-856abf5b8ca8.4"}
{"source":"Okay , yes , actually , can you please add another meeting with Alejandro between 1 and 5 pm on Monday the 15 th ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Alejandro \" ) ) ) ) ) ) :start ( DateTimeAndConstraint :dateTime1 ( DateAtTimeWithDefaults :date ( nextDayOfMonth ( Today ) # ( Number 15 ) ) :time ( NumberPM :number # ( Number 1 ) ) ) :dateTime2 ( TimeAfterDateTime :dateTime ( DateAtTimeWithDefaults :date ( nextDayOfMonth ( Today ) # ( Number 15 ) ) :time ( NumberPM :number # ( Number 1 ) ) ) :time ( NumberPM :number # ( Number 5 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Alejandro \"),starts_at(DateTimeRange(start=DateTime?(date=nextDayOfMonth(Today(),15),time=NumberPM(1)),end=AND(GE(DateTime?(date=nextDayOfMonth(Today(),15),time=NumberPM(1))),NumberPM(5))))))","qid":"eb78b2c8-9ab9-49f0-b498-0975cc3fc83d.3"}
{"source":"Add Dr appointment for Friday at 1 to 2 PM","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :end ( ?= ( TimeAfterDateTime :dateTime ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( NumberPM :number # ( Number 1 ) ) ) :time ( NumberPM :number # ( Number 2 ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( NumberPM :number # ( Number 1 ) ) ) ) :subject ( ?= # ( String \" Dr appointment \" ) ) ) ) ) )","target":"CreateEvent(AND(ends_at(AND(GE(DateTime?(date=NextDOW(\" FRIDAY \"),time=NumberPM(1))),NumberPM(2))),has_subject(\" Dr appointment \"),starts_at(NextDOW(\" FRIDAY \")),starts_at(NumberPM(1))))","qid":"e433fe48-7ccf-4dd3-b5ca-f05fd9f3aae1.2"}
{"source":"Please add a lunch meeting for 2 hours at 11 am Friday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :duration ( ?= ( toHours # ( Number 2 ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( NumberAM :number # ( Number 11 ) ) ) ) :subject ( ?= # ( String \" lunch meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(has_duration(toHours(2)),has_subject(\" lunch meeting \"),starts_at(NextDOW(\" FRIDAY \")),starts_at(NumberAM(11))))","qid":"1468215f-550c-4ddd-bbe0-4fb833fdf218.0"}
{"source":"add shopping on grocery store tomorrow","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) :subject ( ?= # ( String \" shopping on grocery store \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" shopping on grocery store \"),starts_at(Tomorrow())))","qid":"03fc09bf-0089-45aa-9841-ab519326fcf3.0"}
{"source":"add work on calendar on monday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) ) ) :subject ( ?= # ( String \" work \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" work \"),starts_at(NextDOW(\" MONDAY \"))))","qid":"1bd4b5c8-3735-4b45-b48d-889092fa1268.1"}
{"source":"Thank you , can you also please add \" Hand Therapy with Physical Therapist \" to Friday at 3 : 30 to 4 : 15 pm too ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :end ( ?= ( TimeAfterDateTime :dateTime ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( HourMinutePm :hours # ( Number 3 ) :minutes # ( Number 30.0 ) ) ) :time ( HourMinutePm :hours # ( Number 4 ) :minutes # ( Number 15 ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( HourMinutePm :hours # ( Number 3 ) :minutes # ( Number 30.0 ) ) ) ) :subject ( ?= # ( String \" Hand Therapy with Physical Therapist \" ) ) ) ) ) )","target":"CreateEvent(AND(ends_at(AND(GE(DateTime?(date=NextDOW(\" FRIDAY \"),time=HourMinutePm(hours=3,minutes=30))),HourMinutePm(hours=4,minutes=15))),has_subject(\" Hand Therapy with Physical Therapist \"),starts_at(NextDOW(\" FRIDAY \")),starts_at(HourMinutePm(hours=3,minutes=30))))","qid":"8dee7453-7fe3-4884-99db-ee50ecda15f1.1"}
{"source":"I like to set a time for my dentist appointment at 4 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( NextTime :time ( NumberPM :number # ( Number 4 ) ) ) ) :subject ( ?= # ( String \" dentist appointment \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" dentist appointment \"),starts_at(NextTime(time=NumberPM(4)))))","qid":"02ead8fe-3a51-4b95-8baf-6f71ff01fe26.0"}
{"source":"Schedule a meeting Friday with Karl boon","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Karl boon \" ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Karl boon \"),starts_at(NextDOW(\" FRIDAY \"))))","qid":"0ed51fe1-1859-41bb-acc9-4750643c079c.4"}
{"source":"Make a doctor 's appointment this Friday at 10 am .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( NumberAM :number # ( Number 10.0 ) ) ) ) :subject ( ?= # ( String \" doctor's appointment \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" doctor's appointment \"),starts_at(NextDOW(\" FRIDAY \")),starts_at(NumberAM(10))))","qid":"d4d121c9-3b4a-4f68-9aa2-6c4626f9d5af.1"}
{"source":"I am going to do some reading thursday night from 8 to 10 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :end ( ?= ( TimeAfterDateTime :dateTime ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" THURSDAY \" ) ) :time ( NumberPM :number # ( Number 8 ) ) ) :time ( NumberPM :number # ( Number 10.0 ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" THURSDAY \" ) ) :time ( NumberPM :number # ( Number 8 ) ) ) ) :subject ( ?= # ( String \" reading \" ) ) ) ) ) )","target":"CreateEvent(AND(ends_at(AND(GE(DateTime?(date=NextDOW(\" THURSDAY \"),time=NumberPM(8))),NumberPM(10))),has_subject(\" reading \"),starts_at(NextDOW(\" THURSDAY \")),starts_at(NumberPM(8))))","qid":"8501a99e-2252-4227-b503-d62a15b9c06e.4"}
{"source":"create movie day with Abby","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) :subject ( ?= # ( String \" movie day \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Abby \"),has_subject(\" movie day \")))","qid":"2151d1ae-f896-490c-9279-cc0d9cf83a10.0"}
{"source":"I have a job interview Monday at 10 am","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :time ( NumberAM :number # ( Number 10.0 ) ) ) ) :subject ( ?= # ( String \" job interview \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" job interview \"),starts_at(NextDOW(\" MONDAY \")),starts_at(NumberAM(10))))","qid":"69e160e9-70d6-48eb-8510-c2780c0e9426.3"}
{"source":"On Friday , make a 2 hour meeting at 2 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :duration ( ?= ( toHours # ( Number 2 ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( NumberPM :number # ( Number 2 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(has_duration(toHours(2)),starts_at(NextDOW(\" FRIDAY \")),starts_at(NumberPM(2))))","qid":"62ebe1c6-f58a-4932-b931-a04b944f1e84.1"}
{"source":"Put something in my calendar after 4 on Friday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( DateTimeConstraint :constraint ( ?> ( NumberPM :number # ( Number 4 ) ) ) :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) ) ) ) ) )","target":"CreateEvent(AND(starts_at(GT(NumberPM(4))),starts_at(NextDOW(\" FRIDAY \"))))","qid":"758a87d3-2e10-4439-939e-84a8320c1bd3.0"}
{"source":"Add a meeting with Abby to my calendar for tomorrow to 2 - 3 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) :end ( ?= ( TimeAfterDateTime :dateTime ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 2 ) ) ) :time ( NumberPM :number # ( Number 3 ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 2 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(ends_at(AND(GE(DateTime?(date=Tomorrow(),time=NumberPM(2))),NumberPM(3))),with_attendee(\" Abby \"),starts_at(Tomorrow()),starts_at(NumberPM(2))))","qid":"37adf527-2994-4cc8-bd40-93b2cd1f2b95.0"}
{"source":"Last week i had a meeting with the ceo jim sterling , could you add that please","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" jim sterling \" ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( LastWeekNew ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" jim sterling \"),starts_at(LastWeekNew())))","qid":"d82601f3-9717-45b9-a582-f7edc255bd35.4"}
{"source":"Thursday of next week , I want to reserve a room at the library . 3 PM to 6 PM","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :end ( ?= ( TimeAfterDateTime :dateTime ( DateAtTimeWithDefaults :date ( DowOfWeekNew :dow # ( DayOfWeek \" THURSDAY \" ) :week ( NextWeekList ) ) :time ( NumberPM :number # ( Number 3 ) ) ) :time ( NumberPM :number # ( Number 6 ) ) ) ) :location ( andConstraint ( ?= # ( LocationKeyphrase \" the library \" ) ) ( roomRequest ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( DowOfWeekNew :dow # ( DayOfWeek \" THURSDAY \" ) :week ( NextWeekList ) ) :time ( NumberPM :number # ( Number 3 ) ) ) ) :subject ( ?= # ( String \" reserve a room \" ) ) ) ) ) )","target":"CreateEvent(AND(ends_at(AND(GE(DateTime?(date=DowOfWeekNew(dow=DayOfWeek(\" THURSDAY \"),week=NextWeekList()),time=NumberPM(3))),NumberPM(6))),at_location(\" the library \"),at_location(roomRequest()),has_subject(\" reserve a room \"),starts_at(DowOfWeekNew(dow=DayOfWeek(\" THURSDAY \"),week=NextWeekList())),starts_at(NumberPM(3))))","qid":"67fdef93-ba30-4308-94eb-1fadd4d399bc.0"}
{"source":"Please put Yoga with Kate from Friday to Sunday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( EventAllDayForDateRange :dateRange ( DateAndConstraint :date1 ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :date2 ( nextDayOfWeek ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) # ( DayOfWeek \" SUNDAY \" ) ) ) :event ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kate \" ) ) ) ) ) ) :subject ( ?= # ( String \" Yoga \" ) ) ) ) ) ) )","target":"CreateEvent(AND(spans_time(DateAndConstraint(date1=NextDOW(\" FRIDAY \"),date2=nextDayOfWeek(NextDOW(\" FRIDAY \"),DayOfWeek(\" SUNDAY \")))),with_attendee(\" Kate \"),has_subject(\" Yoga \")))","qid":"61c44cb6-defa-4c6c-aa58-bb2c92614556.3"}
{"source":"Block off two hours on Saturday for a Sales Meeting with Cathy T , Alex J , and Shaun P starting at 2 : 30 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Cathy T \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Alex J \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Shaun P \" ) ) ) ) ) ) ) :duration ( ?= ( toHours # ( Number 2 ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" SATURDAY \" ) ) :time ( HourMinutePm :hours # ( Number 2 ) :minutes # ( Number 30.0 ) ) ) ) :subject ( ?= # ( String \" Sales Meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(has_duration(toHours(2)),with_attendee(\" Shaun P \"),with_attendee(\" Cathy T \"),with_attendee(\" Alex J \"),has_subject(\" Sales Meeting \"),starts_at(NextDOW(\" SATURDAY \")),starts_at(HourMinutePm(hours=2,minutes=30))))","qid":"a3d7cf9f-8b5b-480c-ab74-a3753abe6583.3"}
{"source":"Please add my May 1 , 2019 doctor 's appointment at 2 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( MDY :day # ( Number 1 ) :month # ( Month \" MAY \" ) :year # ( Number 2019 ) ) :time ( NumberPM :number # ( Number 2 ) ) ) ) :subject ( ?= # ( String \" doctor's appointment \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" doctor's appointment \"),starts_at(MDY(month=Month(\" MAY \"),day=1,year=2019)),starts_at(NumberPM(2))))","qid":"9cc4fbef-b10a-49e7-8ab6-f30b209866c8.0"}
{"source":"I have to do some furniture shopping .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :subject ( ?= # ( String \" furniture shopping \" ) ) ) ) ) )","target":"CreateEvent(has_subject(\" furniture shopping \"))","qid":"e4a90b19-6d14-4fb2-baf8-c7392bf15d3e.0"}
{"source":"Find an hour tomorrow evening to plan a dog walk .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :duration ( ?= ( toHours # ( Number 1 ) ) ) :start ( DateTimeConstraint :constraint ( Evening ) :date ( Tomorrow ) ) :subject ( ?= # ( String \" dog walk \" ) ) ) ) ) )","target":"CreateEvent(AND(has_duration(toHours(1)),has_subject(\" dog walk \"),starts_at(Evening()),starts_at(Tomorrow())))","qid":"bd9f1e78-6b1c-4d1a-b95f-85a372c625ce.4"}
{"source":"Schedule a meeting with bob between 1 - 5 for 45 minutes on friday","original_target":"( do ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" bob \" ) ) ) ) ) ( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :duration ( ?= ( toMinutes # ( Number 45 ) ) ) :start ( DateTimeConstraint :constraint ( TimeToTime :time1 ( NumberPM :number # ( Number 1 ) ) :time2 ( NumberPM :number # ( Number 5 ) ) ) :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) ) ) ) ) ) )","target":"do(refer(Recipient?(name=LIKE(bob))),CreateEvent(AND(has_duration(toMinutes(45)),starts_at(TimeToTime(time1=NumberPM(1),time2=NumberPM(5))),starts_at(NextDOW(\" FRIDAY \")))))","qid":"d37e71c2-c23c-4c53-a9f0-e4f5b98b53f2.0"}
{"source":"I 'd like to make a new appointment on March 15 th called Secret Party at 8 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( MD :day # ( Number 15 ) :month # ( Month \" MARCH \" ) ) :time ( NumberPM :number # ( Number 8 ) ) ) ) :subject ( ?= # ( String \" Secret Party \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" Secret Party \"),starts_at(MD(month=\" MARCH \",day=15)),starts_at(NumberPM(8))))","qid":"a8af2e2e-08fb-4cf0-9a14-d8d26a32ae28.3"}
{"source":"I also need a \" Meeting \" for next Monday at 12 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :time ( NumberPM :number # ( Number 12 ) ) ) ) :subject ( ?= # ( String \" Meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" Meeting \"),starts_at(NextDOW(\" MONDAY \")),starts_at(NumberPM(12))))","qid":"7796b6ed-6893-4bc2-a03e-ed24b7d9a281.5"}
{"source":"My clothes will be cleaned for 3 days starting on December 14","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( EventAllDayStartingDateForPeriod :event ( Constraint[Event] :subject ( ?= # ( String \" clothes will be cleaned \" ) ) ) :period ( toDays # ( Number 3 ) ) :startDate ( MD :day # ( Number 14 ) :month # ( Month \" DECEMBER \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" clothes will be cleaned \"),has_duration(toDays(3)),starts_at(MD(month=\" DECEMBER \",day=14)),starts_at(Time(hour=0,minute=0))))","qid":"9089ca7f-dfc2-4923-8adc-06b561c026e3.0"}
{"source":"Okay , and put down that there is a concert on Saturday at 5 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" SATURDAY \" ) ) :time ( NumberPM :number # ( Number 5 ) ) ) ) :subject ( ?= # ( String \" concert \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" concert \"),starts_at(NextDOW(\" SATURDAY \")),starts_at(NumberPM(5))))","qid":"c6135408-feca-43b9-82d3-3fc0e175d227.2"}
{"source":"add meeting in my calendar at 2","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( NextTime :time ( NumberPM :number # ( Number 2 ) ) ) ) ) ) ) )","target":"CreateEvent(starts_at(NextTime(time=NumberPM(2))))","qid":"7c94a4c4-61fd-463b-99b2-4ebf09af8d0f.4"}
{"source":"Add a workout sometime early in the day friday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( DateTimeConstraint :constraint ( Early ) :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) ) :subject ( ?= # ( String \" workout \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" workout \"),starts_at(Early()),starts_at(NextDOW(\" FRIDAY \"))))","qid":"a1fc974f-33d4-49cc-a7b2-ac7b213c3922.0"}
{"source":"Set a meeting on Monday 08 : 00 PM for medical next year .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :time ( NumberPM :number # ( Number 8 ) ) ) ) :subject ( ?= # ( String \" medical \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" medical \"),starts_at(NextDOW(\" MONDAY \")),starts_at(NumberPM(8))))","qid":"3fe71a98-5248-4c4f-92c5-e8e3203e218e.0"}
{"source":"can you set a meeting from 10 -11 am tomorrow ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :end ( ?= ( TimeAfterDateTime :dateTime ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberAM :number # ( Number 10.0 ) ) ) :time ( NumberAM :number # ( Number 11 ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberAM :number # ( Number 10.0 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(ends_at(AND(GE(DateTime?(date=Tomorrow(),time=NumberAM(10))),NumberAM(11))),starts_at(Tomorrow()),starts_at(NumberAM(10))))","qid":"8b4fc4ef-0655-40d8-b236-4c6516ff8957.3"}
{"source":"Create a meeting with Jack on Saturday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jack \" ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" SATURDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jack \"),starts_at(NextDOW(\" SATURDAY \"))))","qid":"1eaab19d-9d72-4dae-b1d8-dbf96b6c369a.1"}
{"source":"I need an event for wednesday at 3 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" WEDNESDAY \" ) ) :time ( NumberPM :number # ( Number 3 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(starts_at(NextDOW(\" WEDNESDAY \")),starts_at(NumberPM(3))))","qid":"930cbcec-9967-44e8-b117-916e48423a74.6"}
{"source":"Please set a meeting with Sam on Monday , April 22 , 2019 from 1 pm to 2 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Sam \" ) ) ) ) ) ) :end ( ?= ( TimeAfterDateTime :dateTime ( DateAtTimeWithDefaults :date ( MDY :day # ( Number 22 ) :month # ( Month \" APRIL \" ) :year # ( Number 2019 ) ) :time ( NumberPM :number # ( Number 1 ) ) ) :time ( NumberPM :number # ( Number 2 ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( MDY :day # ( Number 22 ) :month # ( Month \" APRIL \" ) :year # ( Number 2019 ) ) :time ( NumberPM :number # ( Number 1 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(ends_at(AND(GE(DateTime?(date=MDY(month=Month(\" APRIL \"),day=22,year=2019),time=NumberPM(1))),NumberPM(2))),with_attendee(\" Sam \"),starts_at(MDY(month=Month(\" APRIL \"),day=22,year=2019)),starts_at(NumberPM(1))))","qid":"e0bd7961-6b15-4b32-ad0d-aa1fef8663cd.4"}
{"source":"Make a appointment for tomorrow","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) ) ) ) )","target":"CreateEvent(starts_at(Tomorrow()))","qid":"75800053-64d5-4f62-a310-17b130ef0ea3.3"}
{"source":"Schedule a one hour gym time for Friday at 3 PM .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :duration ( ?= ( toHours # ( Number 1 ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( NumberPM :number # ( Number 3 ) ) ) ) :subject ( ?= # ( String \" gym time \" ) ) ) ) ) )","target":"CreateEvent(AND(has_duration(toHours(1)),has_subject(\" gym time \"),starts_at(NextDOW(\" FRIDAY \")),starts_at(NumberPM(3))))","qid":"6500de22-c43a-4441-8bad-72cced8a7d18.2"}
{"source":"arrange a bachelor party","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :subject ( ?= # ( String \" bachelor party \" ) ) ) ) ) )","target":"CreateEvent(has_subject(\" bachelor party \"))","qid":"4eb27f50-baed-4168-ae95-18bac471b8a0.0"}
{"source":"schedule giggle time with Lamy","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Lamy \" ) ) ) ) ) ) :subject ( ?= # ( String \" giggle time \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Lamy \"),has_subject(\" giggle time \")))","qid":"b80362ea-66d3-44ea-8fc4-97dccf08f2b2.4"}
{"source":"add birthday party for Damon Ellery on may 12 th","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Damon Ellery \" ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( MD :day # ( Number 12 ) :month # ( Month \" MAY \" ) ) ) ) :subject ( ?= # ( String \" birthday party \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Damon Ellery \"),has_subject(\" birthday party \"),starts_at(MD(month=\" MAY \",day=12))))","qid":"eaff514e-ad2a-4f9a-af84-c679c0d0dbdf.0"}
{"source":"Set up a meeting with Janice Kang for Thursday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Janice Kang \" ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" THURSDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Janice Kang \"),starts_at(NextDOW(\" THURSDAY \"))))","qid":"d3855b06-53d5-4884-a946-50d88d414204.0"}
{"source":"Can you make an appointment on Tuesday at 8 am called \" Emails \" ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) :time ( NumberAM :number # ( Number 8 ) ) ) ) :subject ( ?= # ( String \" Emails \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" Emails \"),starts_at(NextDOW(\" TUESDAY \")),starts_at(NumberAM(8))))","qid":"cfef573d-5fef-4e5e-8866-a0f7003f6d2d.1"}
{"source":"I need a dinner meeting tonight after 5","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( OnDateAfterTime :date ( Today ) :time ( NumberPM :number # ( Number 5 ) ) ) :subject ( ?= # ( String \" dinner meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" dinner meeting \"),starts_at(OnDateAfterTime(date=Today(),time=NumberPM(5)))))","qid":"323f3604-3434-44b5-8ba3-145c29db7263.2"}
{"source":"now i need a new conference room for this saturday in Berkeley","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :location ( andConstraint ( ?= # ( LocationKeyphrase \" Berkeley \" ) ) ( roomRequest ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" SATURDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(at_location(\" Berkeley \"),at_location(roomRequest()),starts_at(NextDOW(\" SATURDAY \"))))","qid":"b193fdeb-e69a-41f5-8e95-1a98179177b3.3"}
{"source":"I need a store visit between 10 am and 3 pm Monday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :end ( ?= ( TimeAfterDateTime :dateTime ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :time ( NumberAM :number # ( Number 10.0 ) ) ) :time ( NumberPM :number # ( Number 3 ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :time ( NumberAM :number # ( Number 10.0 ) ) ) ) :subject ( ?= # ( String \" store visit \" ) ) ) ) ) )","target":"CreateEvent(AND(ends_at(AND(GE(DateTime?(date=NextDOW(\" MONDAY \"),time=NumberAM(10))),NumberPM(3))),has_subject(\" store visit \"),starts_at(NextDOW(\" MONDAY \")),starts_at(NumberAM(10))))","qid":"82f758dc-2037-4846-b08e-d6a4162ea93c.2"}
{"source":"make an event johns birthday next wednesday 8 am","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" WEDNESDAY \" ) ) :time ( NumberAM :number # ( Number 8 ) ) ) ) :subject ( ?= # ( String \" johns birthday \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" johns birthday \"),starts_at(NextDOW(\" WEDNESDAY \")),starts_at(NumberAM(8))))","qid":"19b20235-7644-47f1-bfaf-51c39abc0296.6"}
{"source":"i want to meet with alex","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" alex \" ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(\" alex \"))","qid":"9bee5e78-c29f-4ab1-a8fe-3eb9398aae0d.1"}
{"source":"i need dry cleaner before 5 pm Tomorrow","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( DateTimeConstraint :constraint ( ?< ( NumberPM :number # ( Number 5 ) ) ) :date ( Tomorrow ) ) :subject ( ?= # ( String \" dry cleaner \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" dry cleaner \"),starts_at(LT(NumberPM(5))),starts_at(Tomorrow())))","qid":"1253024e-e0e9-44ad-869f-8492b2ab787d.2"}
{"source":"Please schedule a Party to start in a few hours .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( adjustByPeriodDuration ( Now ) ( PeriodDuration :duration ( toHours ( Afew ) ) ) ) ) :subject ( ?= # ( String \" Party \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" Party \"),starts_at(adjustByPeriodDuration(Now(),PeriodDuration(duration=toHours(Afew()))))))","qid":"6e2b6fbe-1c21-4af4-b9c7-61dc77bcfaf3.0"}
{"source":"mark me as out of office for the remainder of the day","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( EventAllDayOnDate :date ( Today ) :event ( Constraint[Event] :showAs ( ?= # ( ShowAsStatus \" OutOfOffice \" ) ) ) ) ) ) )","target":"CreateEvent(AND(spans_time(Today()),has_status(ShowAsStatus(\" OutOfOffice \"))))","qid":"e5cb44df-402f-42f3-9f3b-22b3d5b183d6.1"}
{"source":"Schedule me some R&R around the end of the workday friday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( AroundDateTime :dateTime ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( EndOfWorkDay ) ) ) ) ) ) )","target":"CreateEvent(starts_at(AroundDateTime(dateTime=DateTime?(date=NextDOW(\" FRIDAY \"),time=EndOfWorkDay()))))","qid":"bcaa62a3-e996-473a-842e-61f2da5ce2b7.1"}
{"source":"Making a new meeting with emily in a week","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" emily \" ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( adjustByPeriod ( Today ) ( toWeeks # ( Number 1 ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" emily \"),starts_at(adjustByPeriod(Today(),toWeeks(1)))))","qid":"a989e88f-7cad-462a-8b17-24fd247bd918.3"}
{"source":"I 'd like you to set up a night out for me sometime not on the weekend","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( Constraint[Date] :dayOfWeek ( negate ( Weekend ) ) ) ) :subject ( ?= # ( String \" night out \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" night out \"),avoid_start(Date?(dayOfWeek=Weekend()))))","qid":"a2e94f82-5712-4171-a7cc-1fe218034968.0"}
{"source":"schedule my meeting on sep 15 th","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( MD :day # ( Number 15 ) :month # ( Month \" SEPTEMBER \" ) ) ) ) ) ) ) )","target":"CreateEvent(starts_at(MD(month=\" SEPTEMBER \",day=15)))","qid":"5b9de851-a2c7-4eb1-b7c7-be63adf2b409.1"}
{"source":"Make an appointment with my coworker John on Tuesday at 3 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" John \" ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) :time ( NumberPM :number # ( Number 3 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" John \"),starts_at(NextDOW(\" TUESDAY \")),starts_at(NumberPM(3))))","qid":"bda67aff-c5c3-469f-9f15-e111afd7639e.0"}
{"source":"Schedule Jennie 's Play Date for Tuesday at 2 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) :time ( NumberPM :number # ( Number 2 ) ) ) ) :subject ( ?= # ( String \" Jennie's Play Date \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" Jennie's Play Date \"),starts_at(NextDOW(\" TUESDAY \")),starts_at(NumberPM(2))))","qid":"f33d18b1-54d8-4dfe-9bb9-615ff92862dc.2"}
{"source":"create comedy night on wednesday at 3","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" WEDNESDAY \" ) ) :time ( NumberPM :number # ( Number 3 ) ) ) ) :subject ( ?= # ( String \" comedy night \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" comedy night \"),starts_at(NextDOW(\" WEDNESDAY \")),starts_at(NumberPM(3))))","qid":"99545cc3-072e-4b90-a616-3ee87626df4b.0"}
{"source":"schedule a meeting with john , gary and wilson next wednesday 10 am","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" john \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" gary \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" wilson \" ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" WEDNESDAY \" ) ) :time ( NumberAM :number # ( Number 10.0 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" wilson \"),with_attendee(\" john \"),with_attendee(\" gary \"),starts_at(NextDOW(\" WEDNESDAY \")),starts_at(NumberAM(10))))","qid":"475f4fcd-8797-4191-aafe-123fe28215a3.1"}
{"source":"Can you get me the earliest doctors appointment possible for tomorrow ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( DateTimeConstraint :constraint ( Early ) :date ( Tomorrow ) ) :subject ( ?= # ( String \" doctors appointment \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" doctors appointment \"),starts_at(Early()),starts_at(Tomorrow())))","qid":"074d9236-e78e-427f-b3fe-a8658a9cc8dd.0"}
{"source":"Make a fishing trip starting tomorrow that will last 4 days","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( EventAllDayStartingDateForPeriod :event ( Constraint[Event] :subject ( ?= # ( String \" fishing trip \" ) ) ) :period ( toDays # ( Number 4 ) ) :startDate ( Tomorrow ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" fishing trip \"),has_duration(toDays(4)),starts_at(Tomorrow()),starts_at(Time(hour=0,minute=0))))","qid":"9ccbc4f7-014b-41f8-9562-2851d290ce24.3"}
{"source":"Add to my calendar that I have brunch with Zarnak on Sunday at 1 : 00 PM .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Zarnak \" ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" SUNDAY \" ) ) :time ( NumberPM :number # ( Number 1 ) ) ) ) :subject ( ?= # ( String \" brunch \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Zarnak \"),has_subject(\" brunch \"),starts_at(NextDOW(\" SUNDAY \")),starts_at(NumberPM(1))))","qid":"9f4bb569-f6fb-4f91-877d-26f2b832c573.0"}
{"source":"I have a lunch tomorrow at 1","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 1 ) ) ) ) :subject ( ?= # ( String \" lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" lunch \"),starts_at(Tomorrow()),starts_at(NumberPM(1))))","qid":"cfe2fdef-424c-4034-acb3-64ece301eb02.0"}
{"source":"Schedule a date with Ashley Friday at 8 PM","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Ashley \" ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( NumberPM :number # ( Number 8 ) ) ) ) :subject ( ?= # ( String \" date \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Ashley \"),has_subject(\" date \"),starts_at(NextDOW(\" FRIDAY \")),starts_at(NumberPM(8))))","qid":"72db4204-45c5-4f73-bbaa-e5ed0bfb1451.3"}
{"source":"Create event out of office from 1 pm to 430 pm Thursday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :end ( ?= ( TimeAfterDateTime :dateTime ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" THURSDAY \" ) ) :time ( NumberPM :number # ( Number 1 ) ) ) :time ( HourMinutePm :hours # ( Number 4 ) :minutes # ( Number 30.0 ) ) ) ) :showAs ( ?= # ( ShowAsStatus \" OutOfOffice \" ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" THURSDAY \" ) ) :time ( NumberPM :number # ( Number 1 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(ends_at(AND(GE(DateTime?(date=NextDOW(\" THURSDAY \"),time=NumberPM(1))),HourMinutePm(hours=4,minutes=30))),has_status(ShowAsStatus(\" OutOfOffice \")),starts_at(NextDOW(\" THURSDAY \")),starts_at(NumberPM(1))))","qid":"4b89b66d-836c-404b-8a10-29c83e6e6003.0"}
{"source":"Who are my reports","original_target":"( Yield :output ( FindReports :recipient ( toRecipient ( CurrentUser ) ) ) )","target":"FindReports(recipient=CurrentUser())","qid":"48751e38-d411-43ab-85ea-eee5d70e2101.2"}
{"source":"I have a sales meeting with Cornelio Friday at 8 am","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Cornelio \" ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( NumberAM :number # ( Number 8 ) ) ) ) :subject ( ?= # ( String \" sales meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Cornelio \"),has_subject(\" sales meeting \"),starts_at(NextDOW(\" FRIDAY \")),starts_at(NumberAM(8))))","qid":"96869ce5-5be3-4890-9094-9ba5ada49758.0"}
{"source":"Add a reminder for next Tuesday for lunch with Sally","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Sally \" ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) ) ) :subject ( ?= # ( String \" lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Sally \"),has_subject(\" lunch \"),starts_at(NextDOW(\" TUESDAY \"))))","qid":"37f652c4-e503-401f-a4f1-b307c2164739.0"}
{"source":"I need a meeting scheduled on Tuesday morning","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( DateTimeConstraint :constraint ( Morning ) :date ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) ) ) ) ) )","target":"CreateEvent(AND(starts_at(Morning()),starts_at(NextDOW(\" TUESDAY \"))))","qid":"bd7e775a-bc60-4d5d-a459-5f50bd1af0d0.0"}
{"source":"Can you set up a meeting in the afternoon with Carlson instead ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Carlson \" ) ) ) ) ) ) :start ( DateTimeConstraint :constraint ( Afternoon ) :date ( Today ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Carlson \"),starts_at(Afternoon()),starts_at(Today())))","qid":"a5198375-858d-4d8d-b409-fdfcda61d618.2"}
{"source":"Alright set up a meeting with Chris , Eggs , and my other friend Kyu for tomorrow at 8 for breakfast","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Chris \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Eggs \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kyu \" ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberAM :number # ( Number 8 ) ) ) ) :subject ( ?= # ( String \" breakfast \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Kyu \"),with_attendee(\" Chris \"),with_attendee(\" Eggs \"),has_subject(\" breakfast \"),starts_at(Tomorrow()),starts_at(NumberAM(8))))","qid":"2b051c23-80e2-4808-8f2b-f265d903fff8.2"}
{"source":"please set shopping for dinner at 4 pm today .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( Today ) :time ( NumberPM :number # ( Number 4 ) ) ) ) :subject ( ?= # ( String \" shopping for dinner \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" shopping for dinner \"),starts_at(Today()),starts_at(NumberPM(4))))","qid":"7e531ea2-7956-4b5c-ac23-fa9c0d6f328a.2"}
{"source":"I also have dinner with Chris tomorrow at 6 pm for an hour","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Chris \" ) ) ) ) ) ) :duration ( ?= ( toHours # ( Number 1 ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 6 ) ) ) ) :subject ( ?= # ( String \" dinner \" ) ) ) ) ) )","target":"CreateEvent(AND(has_duration(toHours(1)),with_attendee(\" Chris \"),has_subject(\" dinner \"),starts_at(Tomorrow()),starts_at(NumberPM(6))))","qid":"39ff1eac-c7d4-4493-8a54-1bfbf00b840b.2"}
{"source":"Let 's put a schedule for nothing to the afternoon","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :time ( Afternoon ) ) :subject ( ?= # ( String \" nothing \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" nothing \"),starts_at(Afternoon())))","qid":"ae6a22a1-b08b-4261-8c92-d498cfbdf352.4"}
{"source":"Great , thanks , and can you also add that I need to drop the car off for an oil change Friday after 4 pm ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( OnDateAfterTime :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( NumberPM :number # ( Number 4 ) ) ) :subject ( ?= # ( String \" drop the car off for an oil change \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" drop the car off for an oil change \"),starts_at(OnDateAfterTime(date=NextDOW(\" FRIDAY \"),time=NumberPM(4)))))","qid":"b0cda7f9-ab70-464c-b0ce-20a26ce644fe.4"}
{"source":"I have a meeting on monday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(starts_at(NextDOW(\" MONDAY \")))","qid":"261333da-15e8-44ef-9e7c-0da1dfd7a9ea.0"}
{"source":"I 'd like to schedule a doctor appointment for noon next Tuesday at the Houston Medical Center .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :location ( ?= # ( LocationKeyphrase \" Houston Medical Center \" ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) :time ( Noon ) ) ) :subject ( ?= # ( String \" doctor appointment \" ) ) ) ) ) )","target":"CreateEvent(AND(at_location(\" Houston Medical Center \"),has_subject(\" doctor appointment \"),starts_at(NextDOW(\" TUESDAY \")),starts_at(Noon())))","qid":"aa0115a5-41a5-406e-8a93-27d93a1d673d.0"}
{"source":"Can you schedule a new one for the 10 th at 2 pm ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( nextDayOfMonth ( Today ) # ( Number 10.0 ) ) :time ( NumberPM :number # ( Number 2 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(starts_at(nextDayOfMonth(Today(),10)),starts_at(NumberPM(2))))","qid":"be3378b6-03eb-4ba1-91e7-c9e557cfe03d.1"}
{"source":"Can you add a meeting with Jake for Friday from 2 pm through end of day ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) :end ( ?= ( TimeAfterDateTime :dateTime ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( NumberPM :number # ( Number 2 ) ) ) :time ( EndOfWorkDay ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( NumberPM :number # ( Number 2 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(ends_at(AND(GE(DateTime?(date=NextDOW(\" FRIDAY \"),time=NumberPM(2))),EndOfWorkDay())),with_attendee(\" Jake \"),starts_at(NextDOW(\" FRIDAY \")),starts_at(NumberPM(2))))","qid":"c0afd487-cdcb-4d6c-8347-79c3b48f4756.1"}
{"source":"Create a 6 pm Yoga Session on Saturday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" SATURDAY \" ) ) :time ( NumberPM :number # ( Number 6 ) ) ) ) :subject ( ?= # ( String \" Yoga Session \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" Yoga Session \"),starts_at(NextDOW(\" SATURDAY \")),starts_at(NumberPM(6))))","qid":"6422bb69-9944-4a05-8a90-3f674608a081.4"}
{"source":"Add a one hour lunch with Rachael to Thursday at 1 PM .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Rachael \" ) ) ) ) ) ) :duration ( ?= ( toHours # ( Number 1 ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" THURSDAY \" ) ) :time ( NumberPM :number # ( Number 1 ) ) ) ) :subject ( ?= # ( String \" lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(has_duration(toHours(1)),with_attendee(\" Rachael \"),has_subject(\" lunch \"),starts_at(NextDOW(\" THURSDAY \")),starts_at(NumberPM(1))))","qid":"37747648-6f12-4a4f-817c-3a5f365dcf7f.0"}
{"source":"Show As out of the office today from 2 to 4 p.m.","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :end ( ?= ( TimeAfterDateTime :dateTime ( DateAtTimeWithDefaults :date ( Today ) :time ( NumberPM :number # ( Number 2 ) ) ) :time ( NumberPM :number # ( Number 4 ) ) ) ) :showAs ( ?= # ( ShowAsStatus \" OutOfOffice \" ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Today ) :time ( NumberPM :number # ( Number 2 ) ) ) ) :subject ( ?= # ( String \" out of the office \" ) ) ) ) ) )","target":"CreateEvent(AND(ends_at(AND(GE(DateTime?(date=Today(),time=NumberPM(2))),NumberPM(4))),has_status(ShowAsStatus(\" OutOfOffice \")),has_subject(\" out of the office \"),starts_at(Today()),starts_at(NumberPM(2))))","qid":"d230b6d5-8357-4ae5-aac3-ad92d0fc678f.0"}
{"source":"Can you put dinner at Red Robin for 8 on Friday ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :location ( ?= # ( LocationKeyphrase \" Red Robin \" ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( NumberPM :number # ( Number 8 ) ) ) ) :subject ( ?= # ( String \" dinner \" ) ) ) ) ) )","target":"CreateEvent(AND(at_location(\" Red Robin \"),has_subject(\" dinner \"),starts_at(NextDOW(\" FRIDAY \")),starts_at(NumberPM(8))))","qid":"966d27e5-25d4-4051-8fb0-874fa9e12dfc.4"}
{"source":"Can you add a football game event for sunday as well ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" SUNDAY \" ) ) ) ) :subject ( ?= # ( String \" football game \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" football game \"),starts_at(NextDOW(\" SUNDAY \"))))","qid":"68b95931-4915-4ebe-a732-b03b89f89407.2"}
{"source":"Hello please create an event for a work conference in October from the 3 rd through the 8 th .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( EventAllDayForDateRange :dateRange ( DateAndConstraint :date1 ( MD :day # ( Number 3 ) :month # ( Month \" OCTOBER \" ) ) :date2 ( nextDayOfMonth ( MD :day # ( Number 3 ) :month # ( Month \" OCTOBER \" ) ) # ( Number 8 ) ) ) :event ( Constraint[Event] :subject ( ?= # ( String \" work conference \" ) ) ) ) ) ) )","target":"CreateEvent(AND(spans_time(DateAndConstraint(date1=MD(month=\" OCTOBER \",day=3),date2=nextDayOfMonth(MD(month=\" OCTOBER \",day=3),8))),has_subject(\" work conference \")))","qid":"43b4cae2-9fae-4346-bb5a-cfaab9b8de82.0"}
{"source":"create football game on monday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) ) ) :subject ( ?= # ( String \" football game \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" football game \"),starts_at(NextDOW(\" MONDAY \"))))","qid":"5a644f68-7074-4a4b-9ecb-8dc34c4fd39b.0"}
{"source":"create football game on tuesday at 8","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) :time ( NumberPM :number # ( Number 8 ) ) ) ) :subject ( ?= # ( String \" football game \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" football game \"),starts_at(NextDOW(\" TUESDAY \")),starts_at(NumberPM(8))))","qid":"cb117199-d316-4e1c-b0e2-ebef10a1e6bf.0"}
{"source":"i need to go shopping tomorrow","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) :subject ( ?= # ( String \" go shopping \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" go shopping \"),starts_at(Tomorrow())))","qid":"6dc3382a-4670-4e6b-8c38-917b66e74b81.6"}
{"source":"Ok can you schedule a new Movie event on aug 27 around 10 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( MD :day # ( Number 27 ) :month # ( Month \" AUGUST \" ) ) :time ( NumberPM :number # ( Number 10.0 ) ) ) ) :subject ( ?= # ( String \" Movie \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" Movie \"),starts_at(MD(month=\" AUGUST \",day=27)),starts_at(NumberPM(10))))","qid":"d3507fc4-6bf0-410b-9594-c583d486a7d2.2"}
{"source":"Can you please schedule \" House - sitting for the Joneses \" from January 10 to January 18 ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :end ( Constraint[DateTime] :date ( ?= ( nextMonthDay ( MD :day # ( Number 10.0 ) :month # ( Month \" JANUARY \" ) ) # ( Month \" JANUARY \" ) # ( Number 18 ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( MD :day # ( Number 10.0 ) :month # ( Month \" JANUARY \" ) ) ) ) :subject ( ?= # ( String \" House-sitting for the Joneses \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" House_sitting for the Joneses \"),starts_at(MD(month=\" JANUARY \",day=10)),ends_at(nextMonthDay(MD(month=\" JANUARY \",day=10),Month(\" JANUARY \"),18))))","qid":"8b7d2473-bfe6-4fe9-a9db-4f46e14d22d6.0"}
{"source":"Make a appointment for tomorrow","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) ) ) ) )","target":"CreateEvent(starts_at(Tomorrow()))","qid":"eb975957-d6bd-45d2-ab19-15317a0aa2de.1"}
{"source":"I 'm working elsewhere , at Starbucks , on Monday from 9 am to 5 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :end ( ?= ( TimeAfterDateTime :dateTime ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :time ( NumberAM :number # ( Number 9 ) ) ) :time ( NumberPM :number # ( Number 5 ) ) ) ) :location ( ?= # ( LocationKeyphrase \" Starbucks \" ) ) :showAs ( ?= # ( ShowAsStatus \" WorkingElsewhere \" ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :time ( NumberAM :number # ( Number 9 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(ends_at(AND(GE(DateTime?(date=NextDOW(\" MONDAY \"),time=NumberAM(9))),NumberPM(5))),has_status(ShowAsStatus(\" WorkingElsewhere \")),at_location(\" Starbucks \"),starts_at(NextDOW(\" MONDAY \")),starts_at(NumberAM(9))))","qid":"e4cf9b6f-085b-4be5-a496-7bb2ad467fe4.0"}
{"source":"please set an appointment for Wednesday for 1 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" WEDNESDAY \" ) ) :time ( NumberPM :number # ( Number 1 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(starts_at(NextDOW(\" WEDNESDAY \")),starts_at(NumberPM(1))))","qid":"825f3d89-bbb2-4108-b031-a2d58453c604.5"}
{"source":"Create trip with Sam on Monday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Sam \" ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Sam \"),starts_at(NextDOW(\" MONDAY \"))))","qid":"306b3472-4211-4ec6-9763-99d79dd07f4e.0"}
{"source":"Can arrange a meeting with Paige on Tomorrow 6 : 00 AM","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Paige \" ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberAM :number # ( Number 6 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Paige \"),starts_at(Tomorrow()),starts_at(NumberAM(6))))","qid":"d517999a-156c-4d9c-802d-59b56f7ebad5.1"}
{"source":"Well , then , can you put on my schedule a that I need to pick up Peter from Sacramento Airport at 2 pm on Thursday , March 7 th , 2019 ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :location ( ?= # ( LocationKeyphrase \" Sacramento Airport \" ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( MDY :day # ( Number 7 ) :month # ( Month \" MARCH \" ) :year # ( Number 2019 ) ) :time ( NumberPM :number # ( Number 2 ) ) ) ) :subject ( ?= # ( String \" pick up Peter \" ) ) ) ) ) )","target":"CreateEvent(AND(at_location(\" Sacramento Airport \"),has_subject(\" pick up Peter \"),starts_at(MDY(month=Month(\" MARCH \"),day=7,year=2019)),starts_at(NumberPM(2))))","qid":"cbb03b1e-0a2a-4bef-b017-4ff7880fb790.1"}
{"source":"Well I had a meeting with Greg last monday at 15 h","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Greg \" ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( previousDayOfWeek ( Today ) # ( DayOfWeek \" MONDAY \" ) ) :time ( HourMilitary :hours # ( Number 15 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Greg \"),starts_at(previousDayOfWeek(Today(),DayOfWeek(\" MONDAY \"))),starts_at(HourMilitary(15))))","qid":"a608d24b-6323-4822-81f0-9a434c116fd0.2"}
{"source":"Please schedule an appointment with Barack Obama on Tuesday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Barack Obama \" ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Barack Obama \"),starts_at(NextDOW(\" TUESDAY \"))))","qid":"0d4537e0-768b-4d47-9007-9325991d9ffd.0"}
{"source":"create the new schedule for meeting with parker","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" parker \" ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(\" parker \"))","qid":"1ceba4a4-cfe4-4fbb-9fdd-8bd2ad3834aa.0"}
{"source":"create meeting after the last event on friday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( :end ( FindLastEvent :constraint ( EventOnDate :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :event ( Constraint[Event] ) ) ) ) ) ) ) ) )","target":"CreateEvent(starts_at(:end(FindLastEvent(constraint=starts_at(NextDOW(\" FRIDAY \"))))))","qid":"66fb2c95-b748-4b32-ac39-d5257deb8903.0"}
{"source":"Can you add a meeting with Sam for tomorrow ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Sam \" ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Sam \"),starts_at(Tomorrow())))","qid":"ac9d39de-6981-4a6f-9aa1-1728e758693e.0"}
{"source":"Can you schedule \" Day off \" for all day on Friday ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( EventAllDayOnDate :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :event ( Constraint[Event] :subject ( ?= # ( String \" Day off \" ) ) ) ) ) ) )","target":"CreateEvent(AND(spans_time(NextDOW(\" FRIDAY \")),has_subject(\" Day off \")))","qid":"d45197c9-5527-4ea4-a41b-b37a8abe4caa.3"}
{"source":"Schedule performance review for Thursday at 1 : 30 PM .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" THURSDAY \" ) ) :time ( HourMinutePm :hours # ( Number 1 ) :minutes # ( Number 30.0 ) ) ) ) :subject ( ?= # ( String \" performance review \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" performance review \"),starts_at(NextDOW(\" THURSDAY \")),starts_at(HourMinutePm(hours=1,minutes=30))))","qid":"acc15ef5-75e9-4680-871f-bc26e29fb475.0"}
{"source":"iam meeting with smith on tomorrow","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" smith \" ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" smith \"),starts_at(Tomorrow())))","qid":"7b19d936-45d7-4045-849f-d20e56042603.3"}
{"source":"Make a appointment for tomorrow","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) ) ) ) )","target":"CreateEvent(starts_at(Tomorrow()))","qid":"223edb7f-6804-4a54-b169-298b6ce50f6d.2"}
{"source":"Can you schedule the lunch from 10 - 11 ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :end ( ?= ( TimeAfterDateTime :dateTime ( NextTime :time ( NumberAM :number # ( Number 10.0 ) ) ) :time ( NumberAM :number # ( Number 11 ) ) ) ) :start ( ?= ( NextTime :time ( NumberAM :number # ( Number 10.0 ) ) ) ) :subject ( ?= # ( String \" lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" lunch \"),starts_at(NextTime(time=NumberAM(10))),ends_at(AND(GE(NextTime(time=NumberAM(10))),NumberAM(11)))))","qid":"91818176-0c7c-471e-bf04-258a57700865.3"}
{"source":"Can you add Party on Saturday from 9 pm to midnight ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :end ( ?= ( TimeAfterDateTime :dateTime ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" SATURDAY \" ) ) :time ( NumberPM :number # ( Number 9 ) ) ) :time ( Midnight ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" SATURDAY \" ) ) :time ( NumberPM :number # ( Number 9 ) ) ) ) :subject ( ?= # ( String \" Party \" ) ) ) ) ) )","target":"CreateEvent(AND(ends_at(AND(GE(DateTime?(date=NextDOW(\" SATURDAY \"),time=NumberPM(9))),Midnight())),has_subject(\" Party \"),starts_at(NextDOW(\" SATURDAY \")),starts_at(NumberPM(9))))","qid":"d0405302-2735-4807-9ec0-22255ad06ab6.1"}
{"source":"I want you to put an appointment in my calendar with the dentist for tomorrow at 2 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 2 ) ) ) ) :subject ( ?= # ( String \" dentist \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" dentist \"),starts_at(Tomorrow()),starts_at(NumberPM(2))))","qid":"fb7db267-a60a-4aee-826e-1b48a2c9cacc.0"}
{"source":"Can you schedule me a hair apointment for next wee","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( NextWeekList ) ) :subject ( ?= # ( String \" hair apointment \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" hair apointment \"),starts_at(NextWeekList())))","qid":"e5d44d9c-acdc-412a-917a-454b5ace34ba.0"}
{"source":"Set a reminder for orthodontist appointment on the 15 th at 8 : 30 am .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( MDY :day # ( Number 15 ) :month # ( Month \" APRIL \" ) :year # ( Number 2019 ) ) :time ( HourMinuteAm :hours # ( Number 8 ) :minutes # ( Number 30.0 ) ) ) ) :subject ( ?= # ( String \" orthodontist appointment \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" orthodontist appointment \"),starts_at(MDY(month=Month(\" APRIL \"),day=15,year=2019)),starts_at(HourMinuteAm(hours=8,minutes=30))))","qid":"70bbe0c9-5657-45db-b270-9fe02628b5fc.4"}
{"source":"I got ta meet Mason at the club tonight","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Mason \" ) ) ) ) ) ) :location ( ?= # ( LocationKeyphrase \" the club \" ) ) :start ( DateTimeConstraint :constraint ( Night ) :date ( Today ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Mason \"),at_location(\" the club \"),starts_at(Night()),starts_at(Today())))","qid":"22e23686-f485-4e8b-b610-623741481c04.0"}
{"source":"Set up a meeting with Barack Obama","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Barack Obama \" ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(\" Barack Obama \"))","qid":"84315554-5d3f-44ae-ac4e-299407f2c50d.0"}
{"source":"Add birthday party to tomorrow 's schedule , from 6 : 00 PM to 10 : 00 PM .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :end ( ?= ( TimeAfterDateTime :dateTime ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 6 ) ) ) :time ( NumberPM :number # ( Number 10.0 ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 6 ) ) ) ) :subject ( ?= # ( String \" birthday party \" ) ) ) ) ) )","target":"CreateEvent(AND(ends_at(AND(GE(DateTime?(date=Tomorrow(),time=NumberPM(6))),NumberPM(10))),has_subject(\" birthday party \"),starts_at(Tomorrow()),starts_at(NumberPM(6))))","qid":"fe4d544c-093d-4a13-8e67-3e68401b47c2.4"}
{"source":"Ice cream at 3 .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( NextTime :time ( NumberPM :number # ( Number 3 ) ) ) ) :subject ( ?= # ( String \" Ice cream \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" Ice cream \"),starts_at(NextTime(time=NumberPM(3)))))","qid":"a9faddfa-cbb6-49e4-ad27-e2f14da29ad1.0"}
{"source":"I have my pc build starting in the afternoon on Saturday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( DateTimeConstraint :constraint ( Afternoon ) :date ( NextDOW :dow # ( DayOfWeek \" SATURDAY \" ) ) ) :subject ( ?= # ( String \" pc build \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" pc build \"),starts_at(Afternoon()),starts_at(NextDOW(\" SATURDAY \"))))","qid":"c3639cfe-62ff-4f2c-8aee-1b12eb3ee8bf.2"}
{"source":"Schedule moped ride near the beach the first weekend of April .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( NumberWeekOfMonth :month # ( Month \" APRIL \" ) :number # ( Number 1 ) ) ) :subject ( ?= # ( String \" moped ride near the beach \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" moped ride near the beach \"),starts_at(NumberWeekOfMonth(month=Month(\" APRIL \"),number=1))))","qid":"6e9b59ce-6b69-4e1a-be24-141609121085.3"}
{"source":"Hmm ok . Could you make me an event at brunch tomorrow in Seattle ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :location ( ?= # ( LocationKeyphrase \" Seattle \" ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( Brunch ) ) ) ) ) ) )","target":"CreateEvent(AND(at_location(\" Seattle \"),starts_at(Tomorrow()),starts_at(Brunch())))","qid":"12962e17-9fd3-4f18-850d-3e0f84caafe2.1"}
{"source":"work Monday at 8 am ending at 4 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :end ( ?= ( TimeAfterDateTime :dateTime ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :time ( NumberAM :number # ( Number 8 ) ) ) :time ( NumberPM :number # ( Number 4 ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :time ( NumberAM :number # ( Number 8 ) ) ) ) :subject ( ?= # ( String \" work \" ) ) ) ) ) )","target":"CreateEvent(AND(ends_at(AND(GE(DateTime?(date=NextDOW(\" MONDAY \"),time=NumberAM(8))),NumberPM(4))),has_subject(\" work \"),starts_at(NextDOW(\" MONDAY \")),starts_at(NumberAM(8))))","qid":"94e8e82b-fbcd-4d27-aa87-0c3f343897e7.0"}
{"source":"Who are my reports ?","original_target":"( Yield :output ( FindReports :recipient ( toRecipient ( CurrentUser ) ) ) )","target":"FindReports(recipient=CurrentUser())","qid":"e2716180-9e2a-4c85-8d59-07e6ac69f0a3.4"}
{"source":"Add a meeting with Jane for next Thursday at 1 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jane \" ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" THURSDAY \" ) ) :time ( NumberPM :number # ( Number 1 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jane \"),starts_at(NextDOW(\" THURSDAY \")),starts_at(NumberPM(1))))","qid":"220fbe60-9889-4a2e-b269-aa0a788aa451.0"}
{"source":"ok , please set a lunch with Barack Obama this Friday at 11","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Barack Obama \" ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( NumberAM :number # ( Number 11 ) ) ) ) :subject ( ?= # ( String \" lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Barack Obama \"),has_subject(\" lunch \"),starts_at(NextDOW(\" FRIDAY \")),starts_at(NumberAM(11))))","qid":"9d8bc616-3bbe-404c-8bbf-106f1a3ae347.8"}
{"source":"Schedule Adopt a Donkey for Sunday at 3 pm with Kelsey .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kelsey \" ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" SUNDAY \" ) ) :time ( NumberPM :number # ( Number 3 ) ) ) ) :subject ( ?= # ( String \" Adopt a Donkey \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Kelsey \"),has_subject(\" Adopt a Donkey \"),starts_at(NextDOW(\" SUNDAY \")),starts_at(NumberPM(3))))","qid":"146027af-302a-48da-8e3c-4eb111ebda45.2"}
{"source":"Make a appointment for tomorrow","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) ) ) ) )","target":"CreateEvent(starts_at(Tomorrow()))","qid":"f9a1d8d4-3ee5-4223-9030-43ef973e327c.2"}
{"source":"ok make metting","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :subject ( ?= # ( String \" metting \" ) ) ) ) ) )","target":"CreateEvent(has_subject(\" metting \"))","qid":"8205b4b0-8a77-419e-b992-890668291ce6.2"}
{"source":"Can you add a date in my calendar please ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :subject ( ?= # ( String \" date \" ) ) ) ) ) )","target":"CreateEvent(has_subject(\" date \"))","qid":"2eae0f69-3a37-42b3-a581-5addce3202b9.0"}
{"source":"Put shopping with Martha on Tuesday at 6 : 00 for ninety minutes .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Martha \" ) ) ) ) ) ) :duration ( ?= ( toMinutes # ( Number 90.0 ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) :time ( NumberPM :number # ( Number 6 ) ) ) ) :subject ( ?= # ( String \" shopping \" ) ) ) ) ) )","target":"CreateEvent(AND(has_duration(toMinutes(90)),with_attendee(\" Martha \"),has_subject(\" shopping \"),starts_at(NextDOW(\" TUESDAY \")),starts_at(NumberPM(6))))","qid":"aaae18b3-cda4-4713-b2d5-04e1d20db7c0.1"}
{"source":"Make an event for sunday morning at 3 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" SUNDAY \" ) ) :time ( NumberPM :number # ( Number 3 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(starts_at(NextDOW(\" SUNDAY \")),starts_at(NumberPM(3))))","qid":"70b7cfce-48cd-4cdb-bc35-b7f11874c669.4"}
{"source":"Schedule meeting with donors at 2 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" donors \" ) ) ) ) ) ) :start ( ?= ( NextTime :time ( NumberPM :number # ( Number 2 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" donors \"),starts_at(NextTime(time=NumberPM(2)))))","qid":"f76710e5-7368-4183-b61b-2ffda2bca655.1"}
{"source":"create doctors appointment for sunday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" SUNDAY \" ) ) ) ) :subject ( ?= # ( String \" doctors appointment \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" doctors appointment \"),starts_at(NextDOW(\" SUNDAY \"))))","qid":"7fd3b222-bed9-4c6f-882f-69df0ec81f86.0"}
{"source":"I need to schedule a Coffee break with Emily for today at 5 : 30 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Emily \" ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Today ) :time ( HourMinutePm :hours # ( Number 5 ) :minutes # ( Number 30.0 ) ) ) ) :subject ( ?= # ( String \" Coffee break \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Emily \"),has_subject(\" Coffee break \"),starts_at(Today()),starts_at(HourMinutePm(hours=5,minutes=30))))","qid":"ad1644f3-1553-43e8-8f3f-779ed18078f8.0"}
{"source":"I need to get a yoga session with Klara on the calendar for Monday at 10 .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Klara \" ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :time ( NumberAM :number # ( Number 10.0 ) ) ) ) :subject ( ?= # ( String \" yoga session \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Klara \"),has_subject(\" yoga session \"),starts_at(NextDOW(\" MONDAY \")),starts_at(NumberAM(10))))","qid":"930d0cd4-3491-47ba-8c75-19e125424241.0"}
{"source":"I need to add a lunch on Tuesday at 12 : 30 with Barack Obama .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Barack Obama \" ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) :time ( HourMinutePm :hours # ( Number 12 ) :minutes # ( Number 30.0 ) ) ) ) :subject ( ?= # ( String \" lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Barack Obama \"),has_subject(\" lunch \"),starts_at(NextDOW(\" TUESDAY \")),starts_at(HourMinutePm(hours=12,minutes=30))))","qid":"369e288b-f52a-41ed-905e-7f799b3df941.4"}
{"source":"Add learning how to make vegan egg rolls with Sam an hour after work until 2 hours before dance practice .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Sam \" ) ) ) ) ) ) :end ( ?= ( PeriodDurationBeforeDateTime :dateTime ( :start ( FindNumNextEvent :constraint ( Constraint[Event] :subject ( ?~= # ( String \" dance practice \" ) ) ) :number # ( Number 1 ) ) ) :periodDuration ( PeriodDuration :duration ( toHours # ( Number 2 ) ) ) ) ) :start ( ?= ( adjustByPeriodDuration ( :end ( FindNumNextEvent :constraint ( Constraint[Event] :subject ( ?~= # ( String \" work \" ) ) ) :number # ( Number 1 ) ) ) ( PeriodDuration :duration ( toHours # ( Number 1 ) ) ) ) ) :subject ( ?= # ( String \" learning how to make vegan egg rolls \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Sam \"),has_subject(\" learning how to make vegan egg rolls \"),starts_at(adjustByPeriodDuration(:end(FindNumNextEvent(constraint=has_subject(\" work \"),number=1)),PeriodDuration(duration=toHours(1)))),ends_at(PeriodDurationBeforeDateTime(dateTime=:start(FindNumNextEvent(constraint=has_subject(\" dance practice \"),number=1)),periodDuration=PeriodDuration(duration=toHours(2))))))","qid":"21635a8f-2c6e-4825-ad76-2e3b4978fb92.0"}
{"source":"Put down \" Jake 's 50 th Birthday Party \" on the 23 rd .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( nextDayOfMonth ( Today ) # ( Number 23 ) ) ) ) :subject ( ?= # ( String \" Jake's 50th Birthday Party \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" Jake's 50th Birthday Party \"),starts_at(nextDayOfMonth(Today(),23))))","qid":"b7b90c63-27da-4e1f-9e09-70ff610691c0.1"}
{"source":"Mark that I 'll be in Grand Marais all of next week .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( EventAllDayForDateRange :dateRange ( NextWeekList ) :event ( Constraint[Event] :location ( ?= # ( LocationKeyphrase \" Grand Marais \" ) ) ) ) ) ) )","target":"CreateEvent(AND(spans_time(NextWeekList()),at_location(\" Grand Marais \")))","qid":"50ae1745-c5d3-41bb-bed7-115925041aa2.3"}
{"source":"lets set an event called get ready for sleep at 20 h15 later","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( DateTimeConstraint :constraint ( ?= ( HourMinuteMilitary :hours # ( Number 20.0 ) :minutes # ( Number 15 ) ) ) :date ( Today ) ) :subject ( ?= # ( String \" get ready for sleep \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" get ready for sleep \"),starts_at(HourMinuteMilitary(hours=20,minutes=15)),starts_at(Today())))","qid":"41145c14-2aa3-46b1-aa22-48505183ccab.0"}
{"source":"Create an event","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] ) ) ) )","target":"CreateEvent(Event?())","qid":"e6cbcfa6-bbc3-4e75-b9db-644e1c0d175a.2"}
{"source":"Block off three hours starting at 11 am on the 15 th with Kylie and Jennifer to discuss the new cosmetics line at Walmart .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kylie \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jennifer \" ) ) ) ) ) ) ) :duration ( ?= ( toHours # ( Number 3 ) ) ) :location ( ?= # ( LocationKeyphrase \" Walmart \" ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( nextDayOfMonth ( Today ) # ( Number 15 ) ) :time ( NumberAM :number # ( Number 11 ) ) ) ) :subject ( ?= # ( String \" discuss the new cosmetics line \" ) ) ) ) ) )","target":"CreateEvent(AND(has_duration(toHours(3)),with_attendee(\" Kylie \"),with_attendee(\" Jennifer \"),at_location(\" Walmart \"),has_subject(\" discuss the new cosmetics line \"),starts_at(nextDayOfMonth(Today(),15)),starts_at(NumberAM(11))))","qid":"bb43c3d8-6113-43b2-a193-75b4252d80c1.2"}
{"source":"schedule a parent \/ teacher conference for this week","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ThisWeek ) ) :subject ( ?= # ( String \" parent\/teacher conference \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" parent\/teacher conference \"),starts_at(ThisWeek())))","qid":"fb14eb4c-18b1-4c5f-a5fb-442105f94781.0"}
{"source":"can you arrange with 8 : 00 AM","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( NextTime :time ( NumberAM :number # ( Number 8 ) ) ) ) ) ) ) )","target":"CreateEvent(starts_at(NextTime(time=NumberAM(8))))","qid":"b5da2745-b084-4025-b62b-0eea33718d27.1"}
{"source":"I have a lunch meeting with Paige on April 18","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Paige \" ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( MD :day # ( Number 18 ) :month # ( Month \" APRIL \" ) ) ) ) :subject ( ?= # ( String \" lunch meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Paige \"),has_subject(\" lunch meeting \"),starts_at(MD(month=\" APRIL \",day=18))))","qid":"4afea767-78e7-4094-8e06-9988118b5e4b.0"}
{"source":"Also had game night with the family ; Grandma Lilly , Uncle Mike , Aunt Sissy , and Pat","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Lilly \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Mike \" ) ) ) ) ) ) ) ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Sissy \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Pat \" ) ) ) ) ) ) ) ) :subject ( ?= # ( String \" game night with the family \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Lilly \"),with_attendee(\" Mike \"),with_attendee(\" Sissy \"),with_attendee(\" Pat \"),has_subject(\" game night with the family \")))","qid":"271832c0-7f7c-47f5-864d-3661089f9b87.2"}
{"source":"Thanks . Please schedule a dentist appointment for Friday at 10 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( NumberPM :number # ( Number 10.0 ) ) ) ) :subject ( ?= # ( String \" dentist appointment \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" dentist appointment \"),starts_at(NextDOW(\" FRIDAY \")),starts_at(NumberPM(10))))","qid":"af835800-19eb-4498-8a4d-4139d5d3567b.3"}
{"source":"Yes , can you schedule a working lunch at the office for tomorrow at 1 pm ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :location ( ?= # ( LocationKeyphrase \" the office \" ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 1 ) ) ) ) :subject ( ?= # ( String \" working lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(at_location(\" the office \"),has_subject(\" working lunch \"),starts_at(Tomorrow()),starts_at(NumberPM(1))))","qid":"e4ec62fa-a003-48c4-8865-6b154fb2dc19.2"}
{"source":"Please add Lunch with barack obama on Wednesday at 12 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" barack obama \" ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" WEDNESDAY \" ) ) :time ( NumberPM :number # ( Number 12 ) ) ) ) :subject ( ?= # ( String \" Lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" barack obama \"),has_subject(\" Lunch \"),starts_at(NextDOW(\" WEDNESDAY \")),starts_at(NumberPM(12))))","qid":"7bed3388-e581-478c-8dcc-53be8718bf96.8"}
{"source":"Next strawberry picking season , set up an appointment for saturday to go pick strawberries","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" SATURDAY \" ) ) ) ) :subject ( ?= # ( String \" go pick strawberries \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" go pick strawberries \"),starts_at(NextDOW(\" SATURDAY \"))))","qid":"93ae5fa7-0b47-4ff2-b5de-c9743e21f378.0"}
{"source":"Please add the innaugaration of Barack Obama on Jan 21 , 2020","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Barack Obama \" ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( MDY :day # ( Number 21 ) :month # ( Month \" JANUARY \" ) :year # ( Number 2020.0 ) ) ) ) :subject ( ?= # ( String \" innaugaration of Barack Obama \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Barack Obama \"),has_subject(\" innaugaration of Barack Obama \"),starts_at(MDY(month=Month(\" JANUARY \"),day=21,year=2020))))","qid":"15366216-67c2-4d5a-a947-fc6ea3f327e2.1"}
{"source":"Add roller skating practice to my calendar on Tuesday at 7 .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) :time ( NumberPM :number # ( Number 7 ) ) ) ) :subject ( ?= # ( String \" roller skating practice \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" roller skating practice \"),starts_at(NextDOW(\" TUESDAY \")),starts_at(NumberPM(7))))","qid":"73ee808d-2963-4002-840f-22d2c8163759.0"}
{"source":"I have a meeting with Frank tomorrow at noon . Please add it to the calendar .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Frank \" ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( Noon ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Frank \"),starts_at(Tomorrow()),starts_at(Noon())))","qid":"ec9cb36e-baeb-4e2c-8fdd-e88053aa0722.0"}
{"source":"Hi , I need to schedule a piano lesson from 2 to 4 pm tomorrow please .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :end ( ?= ( TimeAfterDateTime :dateTime ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 2 ) ) ) :time ( NumberPM :number # ( Number 4 ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 2 ) ) ) ) :subject ( ?= # ( String \" piano lesson \" ) ) ) ) ) )","target":"CreateEvent(AND(ends_at(AND(GE(DateTime?(date=Tomorrow(),time=NumberPM(2))),NumberPM(4))),has_subject(\" piano lesson \"),starts_at(Tomorrow()),starts_at(NumberPM(2))))","qid":"21a55a35-3255-4bb7-8659-71cfbd80543b.0"}
{"source":"Get me a room at NERD for next Friday to discuss remote workers .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :location ( andConstraint ( ?= # ( LocationKeyphrase \" NERD \" ) ) ( roomRequest ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) ) ) :subject ( ?= # ( String \" discuss remote workers \" ) ) ) ) ) )","target":"CreateEvent(AND(at_location(\" NERD \"),at_location(roomRequest()),has_subject(\" discuss remote workers \"),starts_at(NextDOW(\" FRIDAY \"))))","qid":"61e7c21b-cd01-4789-9590-03cf766f7a88.4"}
{"source":"Schedule for warp core maintenance on March 5 at 8 : 15 am , it 'll take about 8 hours .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :duration ( ?= ( toHours # ( Number 8 ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( MD :day # ( Number 5 ) :month # ( Month \" MARCH \" ) ) :time ( HourMinuteAm :hours # ( Number 8 ) :minutes # ( Number 15 ) ) ) ) :subject ( ?= # ( String \" warp core maintenance \" ) ) ) ) ) )","target":"CreateEvent(AND(has_duration(toHours(8)),has_subject(\" warp core maintenance \"),starts_at(MD(month=\" MARCH \",day=5)),starts_at(HourMinuteAm(hours=8,minutes=15))))","qid":"00923e50-52eb-4df6-9f17-3a651edc85c0.0"}
{"source":"I 'm going to have reading time from 9 pm to midnight .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :end ( ?= ( TimeAfterDateTime :dateTime ( NextTime :time ( NumberPM :number # ( Number 9 ) ) ) :time ( Midnight ) ) ) :start ( ?= ( NextTime :time ( NumberPM :number # ( Number 9 ) ) ) ) :subject ( ?= # ( String \" reading time \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" reading time \"),starts_at(NextTime(time=NumberPM(9))),ends_at(AND(GE(NextTime(time=NumberPM(9))),Midnight()))))","qid":"d320173c-d3e8-44e6-ae57-692f0f6a7565.0"}
{"source":"Hi , can you create an event for 2 PM today ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( Today ) :time ( NumberPM :number # ( Number 2 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(starts_at(Today()),starts_at(NumberPM(2))))","qid":"43fcdfbe-db64-4587-8740-278a92bdd2ce.0"}
{"source":"Can you make me an appointment at WEstbrook health services as soon as possible ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :location ( ?= # ( LocationKeyphrase \" WEstbrook health services \" ) ) ) ) ) )","target":"CreateEvent(at_location(\" WEstbrook health services \"))","qid":"378297c8-5899-46e8-8228-cff96e8426fd.0"}
{"source":"Can you create a lunch event for tomorrow ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) :subject ( ?= # ( String \" lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" lunch \"),starts_at(Tomorrow())))","qid":"c792eea1-0964-4afa-8d17-0f4597cd6ce8.1"}
{"source":"Schedule a meeting for the evening of the 24 th .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( DateTimeConstraint :constraint ( Evening ) :date ( nextDayOfMonth ( Today ) # ( Number 24 ) ) ) ) ) ) )","target":"CreateEvent(AND(starts_at(Evening()),starts_at(nextDayOfMonth(Today(),24))))","qid":"3f188eb5-345d-4d14-8270-ce2960271290.4"}
{"source":"Well I guess that works , create Nap time at 4 pm August 18","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( MD :day # ( Number 18 ) :month # ( Month \" AUGUST \" ) ) :time ( NumberPM :number # ( Number 4 ) ) ) ) :subject ( ?= # ( String \" Nap time \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" Nap time \"),starts_at(MD(month=\" AUGUST \",day=18)),starts_at(NumberPM(4))))","qid":"1acb6993-34e4-412e-9841-c82d9105cb55.1"}
{"source":"Please book disc golf on Saturday morning .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( DateTimeConstraint :constraint ( Morning ) :date ( NextDOW :dow # ( DayOfWeek \" SATURDAY \" ) ) ) :subject ( ?= # ( String \" disc golf \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" disc golf \"),starts_at(Morning()),starts_at(NextDOW(\" SATURDAY \"))))","qid":"9af54b5b-b7ab-41ac-91f0-006bd2a8172a.4"}
{"source":"Can you make an event for Friday at 6.=","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( NumberPM :number # ( Number 6 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(starts_at(NextDOW(\" FRIDAY \")),starts_at(NumberPM(6))))","qid":"e6e0afeb-a12e-4086-9a61-2d9d47b5e947.2"}
{"source":"Can you make me an event for April 1 2021 ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( MDY :day # ( Number 1 ) :month # ( Month \" APRIL \" ) :year # ( Number 2021 ) ) ) ) ) ) ) )","target":"CreateEvent(starts_at(MDY(month=Month(\" APRIL \"),day=1,year=2021)))","qid":"0586d18d-c265-4e09-b18a-d667d6eb5c8f.1"}
{"source":"Meeting with Abby Gonano , Dan Marton , and Jesse Rosenfeld","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby Gonano \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Dan Marton \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jesse Rosenfeld \" ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jesse Rosenfeld \"),with_attendee(\" Abby Gonano \"),with_attendee(\" Dan Marton \")))","qid":"e566ee53-b40c-4cf1-b210-5285faf1ff50.4"}
{"source":"Create an event title Pizza Party for July 22 nd .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( MD :day # ( Number 22 ) :month # ( Month \" JULY \" ) ) ) ) :subject ( ?= # ( String \" Pizza Party \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" Pizza Party \"),starts_at(MD(month=\" JULY \",day=22))))","qid":"20a67bc6-5490-4f58-a778-b8296f97ff0f.2"}
{"source":"hi can you please make sure that jerry and fiona that we have a meeting on tuesday at ten am","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" jerry \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" fiona \" ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) :time ( NumberAM :number # ( Number 10.0 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" jerry \"),with_attendee(\" fiona \"),starts_at(NextDOW(\" TUESDAY \")),starts_at(NumberAM(10))))","qid":"3779c1d0-e6e9-4cfc-b6ba-fa4f1bf508bd.0"}
{"source":"Set up a shopping day with Abby for tomorrow at 7 am .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberAM :number # ( Number 7 ) ) ) ) :subject ( ?= # ( String \" shopping day \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Abby \"),has_subject(\" shopping day \"),starts_at(Tomorrow()),starts_at(NumberAM(7))))","qid":"3c78d985-cde9-4d2b-ab10-eb50ddeb686a.0"}
{"source":"I 'm visiting China in May","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( FullMonthofMonth :month # ( Month \" MAY \" ) ) ) ) ) ) )","target":"CreateEvent(starts_at(FullMonthofMonth(\" MAY \")))","qid":"9cdaab60-cbf4-4655-b836-c0420fe834f6.0"}
{"source":"Schedule Brett 's Birthday dinner for Sunday night","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( DateTimeConstraint :constraint ( Night ) :date ( NextDOW :dow # ( DayOfWeek \" SUNDAY \" ) ) ) :subject ( ?= # ( String \" Brett's Birthday dinner \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" Brett's Birthday dinner \"),starts_at(Night()),starts_at(NextDOW(\" SUNDAY \"))))","qid":"8c09bc5f-40dc-4279-acfa-3f6dc036015f.4"}
{"source":"Schedule a meeting with Dan Pan for tomorrow at 5 pm to 6 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Dan Pan \" ) ) ) ) ) ) :end ( ?= ( TimeAfterDateTime :dateTime ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 5 ) ) ) :time ( NumberPM :number # ( Number 6 ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 5 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(ends_at(AND(GE(DateTime?(date=Tomorrow(),time=NumberPM(5))),NumberPM(6))),with_attendee(\" Dan Pan \"),starts_at(Tomorrow()),starts_at(NumberPM(5))))","qid":"66137fb2-cc5c-4307-888c-f7e9d0050e98.0"}
{"source":"Saturday I an going to sit around and read from 10 am to 5 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :end ( ?= ( TimeAfterDateTime :dateTime ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" SATURDAY \" ) ) :time ( NumberAM :number # ( Number 10.0 ) ) ) :time ( NumberPM :number # ( Number 5 ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" SATURDAY \" ) ) :time ( NumberAM :number # ( Number 10.0 ) ) ) ) :subject ( ?= # ( String \" sit around and read \" ) ) ) ) ) )","target":"CreateEvent(AND(ends_at(AND(GE(DateTime?(date=NextDOW(\" SATURDAY \"),time=NumberAM(10))),NumberPM(5))),has_subject(\" sit around and read \"),starts_at(NextDOW(\" SATURDAY \")),starts_at(NumberAM(10))))","qid":"6eb229a4-af31-4d17-ba92-e1104af13e5c.4"}
{"source":"Make another event for me on Monday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( EventOnDate :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :event ( Constraint[Event] ) ) ) ) )","target":"CreateEvent(starts_at(NextDOW(\" MONDAY \")))","qid":"21a3c364-7494-48e9-9f12-3ff740ac3d5c.3"}
{"source":"I have a meeting at 5 pm that I need to add to the calendar .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( NextTime :time ( NumberPM :number # ( Number 5 ) ) ) ) ) ) ) )","target":"CreateEvent(starts_at(NextTime(time=NumberPM(5))))","qid":"62541ab1-e3a7-490a-9377-f7393eb3fa29.0"}
{"source":"Add yoga on the 12 th","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( nextDayOfMonth ( Today ) # ( Number 12 ) ) ) ) :subject ( ?= # ( String \" yoga \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" yoga \"),starts_at(nextDayOfMonth(Today(),12))))","qid":"bfcbffa8-e2e3-4bd2-9821-3536f9769646.6"}
{"source":"I have a meeting at 1 pm tomorrow","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 1 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(starts_at(Tomorrow()),starts_at(NumberPM(1))))","qid":"b3e701d5-266b-4375-8899-178a6586f586.1"}
{"source":"Create Gaming Session on Sunday at 1 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" SUNDAY \" ) ) :time ( NumberPM :number # ( Number 1 ) ) ) ) :subject ( ?= # ( String \" Gaming Session \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" Gaming Session \"),starts_at(NextDOW(\" SUNDAY \")),starts_at(NumberPM(1))))","qid":"fc3be199-ce05-4250-89b0-53ccd46df5bb.2"}
{"source":"I need a meeting late afternoon tomorrow","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( DateTimeConstraint :constraint ( LateAfternoon ) :date ( Tomorrow ) ) ) ) ) )","target":"CreateEvent(AND(starts_at(LateAfternoon()),starts_at(Tomorrow())))","qid":"99d98168-aa27-4916-b506-c10e9904d432.0"}
{"source":"Create a another meeting in the afternoon on Monday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( DateTimeConstraint :constraint ( Afternoon ) :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) ) :subject ( ?= # ( String \" meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" meeting \"),starts_at(Afternoon()),starts_at(NextDOW(\" MONDAY \"))))","qid":"53c45763-c71b-4745-b04e-051208fb0c6f.4"}
{"source":"Create a doctors appointment for me on tuesday at 1130 am","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) :time ( HourMinuteAm :hours # ( Number 11 ) :minutes # ( Number 30.0 ) ) ) ) :subject ( ?= # ( String \" doctors appointment \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" doctors appointment \"),starts_at(NextDOW(\" TUESDAY \")),starts_at(HourMinuteAm(hours=11,minutes=30))))","qid":"78aca0eb-efbb-4636-a28b-af0057c5d914.0"}
{"source":"Please schedule a dentist appointment Monday at 11 AM . It will take 2 hours .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :duration ( ?= ( toHours # ( Number 2 ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :time ( NumberAM :number # ( Number 11 ) ) ) ) :subject ( ?= # ( String \" dentist appointment \" ) ) ) ) ) )","target":"CreateEvent(AND(has_duration(toHours(2)),has_subject(\" dentist appointment \"),starts_at(NextDOW(\" MONDAY \")),starts_at(NumberAM(11))))","qid":"5a3659ee-8b80-4913-a551-294727649978.0"}
{"source":"Who is Damons skip","original_target":"( Yield :output ( FindManager :recipient ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Damons \" ) ) ) ) ) ) ) )","target":"FindManager(FindManager(\" Damons \"))","qid":"e384e307-6b3f-49b5-b6ab-7dcd43fb7d5d.2"}
{"source":"I want to schedule an event to my calendar","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] ) ) ) )","target":"CreateEvent(Event?())","qid":"659ea2c0-505d-41e6-b317-030868e8c283.0"}
{"source":"I need a hair cut on Wednesday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" WEDNESDAY \" ) ) ) ) :subject ( ?= # ( String \" hair cut \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" hair cut \"),starts_at(NextDOW(\" WEDNESDAY \"))))","qid":"c094b221-8f79-4ceb-b6c2-29e209fb28f4.0"}
{"source":"Schedule a lunch with paige Ashworth and Cher Roydon monday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" paige Ashworth \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Cher Roydon \" ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) ) ) :subject ( ?= # ( String \" lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" paige Ashworth \"),with_attendee(\" Cher Roydon \"),has_subject(\" lunch \"),starts_at(NextDOW(\" MONDAY \"))))","qid":"b37fd769-4729-4af5-9103-b5f136a88a7f.0"}
{"source":"Book a meeting with Maurice this Monday at 9 am at the park","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Maurice \" ) ) ) ) ) ) :location ( ?= # ( LocationKeyphrase \" park \" ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :time ( NumberAM :number # ( Number 9 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Maurice \"),at_location(\" park \"),starts_at(NextDOW(\" MONDAY \")),starts_at(NumberAM(9))))","qid":"81b7d12c-42eb-4fe0-975c-ee1519f86c7b.0"}
{"source":"create a meeting with Matt and Barb for Friday morning .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Matt \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Barb \" ) ) ) ) ) ) ) :start ( DateTimeConstraint :constraint ( Morning ) :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Matt \"),with_attendee(\" Barb \"),starts_at(Morning()),starts_at(NextDOW(\" FRIDAY \"))))","qid":"34ebbf1f-32be-4f89-a1da-4e767eee7244.0"}
{"source":"Make an event all day with Abby","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) :isAllDay ( ?= # ( Boolean true ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Abby \"),is_allDay()))","qid":"e5cd03dc-4958-4e94-9be1-9048ff8f98dd.3"}
{"source":"Set up meeting with Donald Trump for 2 hours on Sunday , January 10 , 2050 at 5 : 00 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Donald Trump \" ) ) ) ) ) ) :duration ( ?= ( toHours # ( Number 2 ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( MDY :day # ( Number 10.0 ) :month # ( Month \" JANUARY \" ) :year # ( Number 2050.0 ) ) :time ( NumberPM :number # ( Number 5 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(has_duration(toHours(2)),with_attendee(\" Donald Trump \"),starts_at(MDY(month=Month(\" JANUARY \"),day=10,year=2050)),starts_at(NumberPM(5))))","qid":"48145452-ce0d-45e6-8b08-28f2451e3a67.0"}
{"source":"Add coffee with Sam for tomorrow at 6 am .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Sam \" ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberAM :number # ( Number 6 ) ) ) ) :subject ( ?= # ( String \" coffee \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Sam \"),has_subject(\" coffee \"),starts_at(Tomorrow()),starts_at(NumberAM(6))))","qid":"8bf6215a-ad8b-4d60-84bf-bfa18adf2b17.0"}
{"source":"Schedule dinner in the evening after groceries","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( DateTimeConstraint :constraint ( Evening ) :date ( :date ( :end ( singleton ( :results ( FindEventWrapperWithDefaults :constraint ( Constraint[Event] :subject ( ?~= # ( String \" groceries \" ) ) ) ) ) ) ) ) ) :subject ( ?= # ( String \" dinner \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" dinner \"),starts_at(Evening()),starts_at(:date(:end(FindEvents(has_subject(\" groceries \")))))))","qid":"6a577ce4-0b6c-40ae-aa75-f0bf3ead1931.3"}
{"source":"make an event that starts in winter","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( SeasonWinter ) ) ) ) ) )","target":"CreateEvent(starts_at(SeasonWinter()))","qid":"4053f7ec-02db-47b0-8659-3385594d06f8.0"}
{"source":"Can you make me a meeting around 10 am tomorrow","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( DateTimeConstraint :constraint ( TimeAround :time ( NumberAM :number # ( Number 10.0 ) ) ) :date ( Tomorrow ) ) ) ) ) )","target":"CreateEvent(AND(starts_at(TimeAround(NumberAM(10))),starts_at(Tomorrow())))","qid":"20ef4e70-2558-49f6-a28f-7335a04cd7aa.0"}
{"source":"Schedule a meeting on Thursday at 8 : 30 AM .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" THURSDAY \" ) ) :time ( HourMinuteAm :hours # ( Number 8 ) :minutes # ( Number 30.0 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(starts_at(NextDOW(\" THURSDAY \")),starts_at(HourMinuteAm(hours=8,minutes=30))))","qid":"32c94fb3-e7fc-4df3-b665-ba0bcb2a2f6c.2"}
{"source":"Set up a sprint meeting with Shiryl , Leo , Matt , and Patrick","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Shiryl \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Leo \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Matt \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Patrick \" ) ) ) ) ) ) ) :subject ( ?= # ( String \" Sprint Meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Patrick \"),with_attendee(\" Matt \"),with_attendee(\" Shiryl \"),with_attendee(\" Leo \"),has_subject(\" Sprint Meeting \")))","qid":"46315aae-88f6-4257-a3d2-8a2ccdf5caf6.2"}
{"source":"Can you make an event for Monday at 4 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :time ( NumberPM :number # ( Number 4 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(starts_at(NextDOW(\" MONDAY \")),starts_at(NumberPM(4))))","qid":"25e953eb-1588-4e4a-a6d1-72ce581122c3.0"}
{"source":"put meeting with fakir on monday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" fakir \" ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" fakir \"),starts_at(NextDOW(\" MONDAY \"))))","qid":"2ed3788f-8779-4c99-8c0e-44a863170c6a.0"}
{"source":"Create \" Zoo \" tomorrow , we will be picking up Peter , Chris , Stewie and Meg .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Peter \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Chris \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Stewie \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Meg \" ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) :subject ( ?= # ( String \" Zoo \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Meg \"),with_attendee(\" Stewie \"),with_attendee(\" Peter \"),with_attendee(\" Chris \"),has_subject(\" Zoo \"),starts_at(Tomorrow())))","qid":"306d535c-6d14-4b6a-9bad-1dd0929a638a.0"}
{"source":"Show my status as Busy for all of Wednesday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( EventAllDayOnDate :date ( NextDOW :dow # ( DayOfWeek \" WEDNESDAY \" ) ) :event ( Constraint[Event] :showAs ( ?= # ( ShowAsStatus \" Busy \" ) ) ) ) ) ) )","target":"CreateEvent(AND(spans_time(NextDOW(\" WEDNESDAY \")),has_status(ShowAsStatus(\" Busy \"))))","qid":"fcccd609-aab3-4f6b-8da3-5e102db81d05.0"}
{"source":"Can you please schedule a meeting with Ross at 6 : 00 pm please ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Ross \" ) ) ) ) ) ) :start ( Constraint[DateTime] :time ( ?= ( NumberPM :number # ( Number 6 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Ross \"),starts_at(NumberPM(6))))","qid":"ba58506b-73b3-4096-9af3-4d73f6c6764f.3"}
{"source":"I need to go to the mall tomorrow","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) :subject ( ?= # ( String \" go to the mall \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" go to the mall \"),starts_at(Tomorrow())))","qid":"c5cbd376-6165-409f-9bd4-1d3c4117a8f8.2"}
{"source":"ok schedule breakfast at 10 : 40 am then","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( EventOnDateTime :dateTime ( NextTime :time ( HourMinuteAm :hours # ( Number 10.0 ) :minutes # ( Number 40.0 ) ) ) :event ( Constraint[Event] :subject ( ?= # ( String \" breakfast \" ) ) ) ) ) ) )","target":"CreateEvent(AND(at_time(NextTime(time=HourMinuteAm(hours=10,minutes=40))),has_subject(\" breakfast \")))","qid":"9449b539-1f7e-4f56-b37f-795aa68c11b9.4"}
{"source":"schedule a lunch tomorrow with barack obama","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" barack obama \" ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) :subject ( ?= # ( String \" lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" barack obama \"),has_subject(\" lunch \"),starts_at(Tomorrow())))","qid":"4e5a26f6-362f-426d-8ac0-4d9d3f92af2f.5"}
{"source":"I need to create an event for tomorrow at 5 pm that says fortnite trio scrims","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 5 ) ) ) ) :subject ( ?= # ( String \" fortnite trio scrims \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" fortnite trio scrims \"),starts_at(Tomorrow()),starts_at(NumberPM(5))))","qid":"e291a9be-9afc-4c38-9307-f2832dfada37.0"}
{"source":"Add Roller Skating with Sonya , Trevor , and Simon for Saturday at 11 am .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Sonya \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Trevor \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Simon \" ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" SATURDAY \" ) ) :time ( NumberAM :number # ( Number 11 ) ) ) ) :subject ( ?= # ( String \" Roller Skating \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Simon \"),with_attendee(\" Sonya \"),with_attendee(\" Trevor \"),has_subject(\" Roller Skating \"),starts_at(NextDOW(\" SATURDAY \")),starts_at(NumberAM(11))))","qid":"0b91917e-4357-4cb7-9980-33d53d97d23b.2"}
{"source":"Create a meeting on aug 27","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( MD :day # ( Number 27 ) :month # ( Month \" AUGUST \" ) ) ) ) ) ) ) )","target":"CreateEvent(starts_at(MD(month=\" AUGUST \",day=27)))","qid":"ecad2ca6-e97e-47b3-9cf9-c39f40b67c0e.3"}
{"source":"Create an event","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] ) ) ) )","target":"CreateEvent(Event?())","qid":"1bfea41a-d865-46b2-83da-1aadef14b6bd.3"}
{"source":"Set a meeting with Jerry friday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jerry \" ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jerry \"),starts_at(NextDOW(\" FRIDAY \"))))","qid":"3c8947ef-a389-498e-b4d5-3702d95fafca.5"}
{"source":"create work meeting on tuesday at 2","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) :time ( NumberPM :number # ( Number 2 ) ) ) ) :subject ( ?= # ( String \" work meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" work meeting \"),starts_at(NextDOW(\" TUESDAY \")),starts_at(NumberPM(2))))","qid":"c4c27c38-e45d-4231-b01e-f2ffc6feb4da.0"}
{"source":"Block off two hours for a hike in central park at 9 : 00 am tomorrow .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :duration ( ?= ( toHours # ( Number 2 ) ) ) :location ( ?= # ( LocationKeyphrase \" central park \" ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberAM :number # ( Number 9 ) ) ) ) :subject ( ?= # ( String \" hike \" ) ) ) ) ) )","target":"CreateEvent(AND(has_duration(toHours(2)),at_location(\" central park \"),has_subject(\" hike \"),starts_at(Tomorrow()),starts_at(NumberAM(9))))","qid":"2d7d199f-7cad-4ed1-acc2-9de36106370a.0"}
{"source":"Can you schedule a meeting for tomorrow then ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) ) ) ) )","target":"CreateEvent(starts_at(Tomorrow()))","qid":"72922276-c93e-4869-b0a3-9b98a0ebbcd1.1"}
{"source":"Set up a camping trip to the Grand Canyon at 7 am on Friday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :location ( ?= # ( LocationKeyphrase \" Grand Canyon \" ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( NumberAM :number # ( Number 7 ) ) ) ) :subject ( ?= # ( String \" camping trip \" ) ) ) ) ) )","target":"CreateEvent(AND(at_location(\" Grand Canyon \"),has_subject(\" camping trip \"),starts_at(NextDOW(\" FRIDAY \")),starts_at(NumberAM(7))))","qid":"224f5c6a-903f-4986-8b03-1bef9cbbeacc.0"}
{"source":"Can you add a lunch yesterday at 2 pm ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( Yesterday ) :time ( NumberPM :number # ( Number 2 ) ) ) ) :subject ( ?= # ( String \" lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" lunch \"),starts_at(Yesterday()),starts_at(NumberPM(2))))","qid":"ef3fea91-e491-4d4a-8618-8749b2644e42.2"}
{"source":"Do me a favor and book a conference call with Sally and James next Thursday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Sally \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" James \" ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" THURSDAY \" ) ) ) ) :subject ( ?= # ( String \" conference call \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Sally \"),with_attendee(\" James \"),has_subject(\" conference call \"),starts_at(NextDOW(\" THURSDAY \"))))","qid":"64a2d437-11c7-43cd-b963-8b543624ed30.0"}
{"source":"Set up a meeting with Wade on Monday morning .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Wade \" ) ) ) ) ) ) :start ( DateTimeConstraint :constraint ( Morning ) :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Wade \"),starts_at(Morning()),starts_at(NextDOW(\" MONDAY \"))))","qid":"86ccb251-c0a6-42e1-86b8-2b09820d650e.0"}
{"source":"Am I free for a game of baseball at 4 pm on Saturday ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" SATURDAY \" ) ) :time ( NumberPM :number # ( Number 4 ) ) ) ) :subject ( ?= # ( String \" game of baseball \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" game of baseball \"),starts_at(NextDOW(\" SATURDAY \")),starts_at(NumberPM(4))))","qid":"7c55a705-d4b9-4dd0-aa2a-74db45b1883f.0"}
{"source":"set up a meeting with Emily Wilson","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Emily Wilson \" ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(\" Emily Wilson \"))","qid":"5491f8b1-7330-4d6d-800d-2711125532af.6"}
{"source":"Make an event for Monday at 5 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :time ( NumberPM :number # ( Number 5 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(starts_at(NextDOW(\" MONDAY \")),starts_at(NumberPM(5))))","qid":"8cbf9484-9bb9-42f5-aa4e-198f72c8f8c8.2"}
{"source":"please note the event hot air balloon ride at 11 AM","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( NextTime :time ( NumberAM :number # ( Number 11 ) ) ) ) :subject ( ?= # ( String \" hot air balloon ride \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" hot air balloon ride \"),starts_at(NextTime(time=NumberAM(11)))))","qid":"52c91bb4-2fea-4e78-a691-ff4d2d95e001.2"}
{"source":"I need a meeting with Paul and Jake next Monday early in the AM .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Paul \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :time ( NumberAM :number # ( Number 1 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Paul \"),with_attendee(\" Jake \"),starts_at(NextDOW(\" MONDAY \")),starts_at(NumberAM(1))))","qid":"c04fbcdf-c43d-437b-b72a-416ea0f5441b.0"}
{"source":"I need you to find me three hours for a nap .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :duration ( ?= ( toHours # ( Number 3 ) ) ) :subject ( ?= # ( String \" nap \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" nap \"),has_duration(toHours(3))))","qid":"0e42d38b-c68e-4fe0-8c8d-34b69b7b7d04.0"}
{"source":"I 'm going to the beach with Paul today .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Paul \" ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Today ) ) ) :subject ( ?= # ( String \" beach \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Paul \"),has_subject(\" beach \"),starts_at(Today())))","qid":"6ba9c65b-0e7b-4124-a30f-6688b7176f66.0"}
{"source":"I would like to block off 3 hours tomorrow at 7 : 30 pm for a basketball game at the American Airlines Center .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :duration ( ?= ( toHours # ( Number 3 ) ) ) :location ( ?= # ( LocationKeyphrase \" American Airlines Center \" ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( HourMinutePm :hours # ( Number 7 ) :minutes # ( Number 30.0 ) ) ) ) :subject ( ?= # ( String \" basketball game \" ) ) ) ) ) )","target":"CreateEvent(AND(has_duration(toHours(3)),at_location(\" American Airlines Center \"),has_subject(\" basketball game \"),starts_at(Tomorrow()),starts_at(HourMinutePm(hours=7,minutes=30))))","qid":"04c6c668-3276-46f4-9170-6dd67324a3c0.0"}
{"source":"make me an event for 3 pm tomorrow","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 3 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(starts_at(Tomorrow()),starts_at(NumberPM(3))))","qid":"062506c9-d336-4132-b3c7-a0a58d9f275e.0"}
{"source":"Make event \" Meeting with Mark \" next week .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( NextWeekList ) ) :subject ( ?= # ( String \" Meeting with Mark \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" Meeting with Mark \"),starts_at(NextWeekList())))","qid":"6caa7c7c-5fe7-4170-9abc-d682cbeac0dc.3"}
{"source":"Can you add a call to the caterer on Thursday morning at 10 am to my calendar ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" THURSDAY \" ) ) :time ( NumberAM :number # ( Number 10.0 ) ) ) ) :subject ( ?= # ( String \" call to the caterer \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" call to the caterer \"),starts_at(NextDOW(\" THURSDAY \")),starts_at(NumberAM(10))))","qid":"5ad87ede-429b-4eb1-8645-c4548fb22651.3"}
{"source":"i am ready to meet","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] ) ) ) )","target":"CreateEvent(Event?())","qid":"fed8fca0-53b2-4801-bd4a-c9c4fef69cd8.2"}
{"source":"i wanted a 15 minute meeting anytime between 3 to 5 pm , and any of those is fine with me","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :duration ( ?= ( toMinutes # ( Number 15 ) ) ) :start ( DateTimeAndConstraint :dateTime1 ( NextTime :time ( NumberPM :number # ( Number 3 ) ) ) :dateTime2 ( TimeAfterDateTime :dateTime ( NextTime :time ( NumberPM :number # ( Number 3 ) ) ) :time ( NumberPM :number # ( Number 5 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(starts_at(DateTimeRange(start=NextTime(time=NumberPM(3)),end=AND(GE(NextTime(time=NumberPM(3))),NumberPM(5)))),has_duration(toMinutes(15))))","qid":"8c34a3c0-5dbc-4c44-9a97-d5f6c1ee284c.0"}
{"source":"please schedule a emergency appointments today","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( Today ) ) ) :subject ( ?= # ( String \" emergency appointments \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" emergency appointments \"),starts_at(Today())))","qid":"4756b29c-0b9c-43c2-9f7c-8b4bc5b06a44.0"}
{"source":"I would like to schedule an appointment for next Thursday at 1 PM .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" THURSDAY \" ) ) :time ( NumberPM :number # ( Number 1 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(starts_at(NextDOW(\" THURSDAY \")),starts_at(NumberPM(1))))","qid":"d0793084-63c3-4bc0-bd9b-83cebcf8dc7b.0"}
{"source":"create running day on monday at 3","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :time ( NumberPM :number # ( Number 3 ) ) ) ) :subject ( ?= # ( String \" running day \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" running day \"),starts_at(NextDOW(\" MONDAY \")),starts_at(NumberPM(3))))","qid":"015f2afb-745f-45ef-aee4-aa95b48e3074.0"}
{"source":"Yugioh is at 5 PM","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( NextTime :time ( NumberPM :number # ( Number 5 ) ) ) ) :subject ( ?= # ( String \" Yugioh \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" Yugioh \"),starts_at(NextTime(time=NumberPM(5)))))","qid":"3ec7284e-5633-4205-bb1e-49daa0ec380d.3"}
{"source":"make an appointment with Jerri Skinner at today 6 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jerri Skinner \" ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Today ) :time ( NumberPM :number # ( Number 6 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jerri Skinner \"),starts_at(Today()),starts_at(NumberPM(6))))","qid":"e2138c59-b09d-4779-aaa0-acfd8e691440.1"}
{"source":"Add house work for 1 hour after yard work .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :duration ( ?= ( toHours # ( Number 1 ) ) ) :start ( ?= ( :end ( singleton ( :results ( FindEventWrapperWithDefaults :constraint ( Constraint[Event] :subject ( ?~= # ( String \" yard work \" ) ) ) ) ) ) ) ) :subject ( ?= # ( String \" house work \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" house work \"),starts_at(:end(FindEvents(has_subject(\" yard work \")))),has_duration(toHours(1))))","qid":"c154102e-abf3-4833-bebb-e0722c97ba4a.3"}
{"source":"make an event for throwing bananas at DK","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :subject ( ?= # ( String \" throwing bananas at DK \" ) ) ) ) ) )","target":"CreateEvent(has_subject(\" throwing bananas at DK \"))","qid":"a3db6a05-f577-4f12-b484-02a6dddd359a.1"}
{"source":"Put a meeting with Beth on my schedule for tomorrow at 7 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Beth \" ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 7 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Beth \"),starts_at(Tomorrow()),starts_at(NumberPM(7))))","qid":"cf5011c8-0feb-49ad-b106-d1db3505503c.0"}
{"source":"Okay , now add a dentist appointment for March 3 rd at 3 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( MD :day # ( Number 3 ) :month # ( Month \" MARCH \" ) ) :time ( NumberPM :number # ( Number 3 ) ) ) ) :subject ( ?= # ( String \" dentist appointment \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" dentist appointment \"),starts_at(MD(month=\" MARCH \",day=3)),starts_at(NumberPM(3))))","qid":"592d0839-1677-4124-ae6b-f6d099fa6610.4"}
{"source":"Great ! Can you book Suit Shopping for today at 4 : 15 pm ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( Today ) :time ( HourMinutePm :hours # ( Number 4 ) :minutes # ( Number 15 ) ) ) ) :subject ( ?= # ( String \" Suit Shopping \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" Suit Shopping \"),starts_at(Today()),starts_at(HourMinutePm(hours=4,minutes=15))))","qid":"f0856bae-d22e-44c9-b89d-4daa34c6b32b.4"}
{"source":"Plrase schedule a physical therapy appointment for me on Monday at 1 pm , not 2 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :time ( NumberPM :number # ( Number 1 ) ) ) ) :subject ( ?= # ( String \" physical therapy appointment \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" physical therapy appointment \"),starts_at(NextDOW(\" MONDAY \")),starts_at(NumberPM(1))))","qid":"1dcc5bf2-6a4d-453c-83e8-141676f1fda3.3"}
{"source":"I need you to create meeting with Jeff on Thursday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jeff \" ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" THURSDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jeff \"),starts_at(NextDOW(\" THURSDAY \"))))","qid":"478c20b5-8f93-42fd-858f-2c832b3cd3d3.0"}
{"source":"Who are my reports","original_target":"( Yield :output ( FindReports :recipient ( toRecipient ( CurrentUser ) ) ) )","target":"FindReports(recipient=CurrentUser())","qid":"1065aa50-947d-4490-aaac-ebea259310ad.3"}
{"source":"Can you put me down for a meeting that ends at the end of the work day","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :end ( Constraint[DateTime] :time ( ?= ( EndOfWorkDay ) ) ) ) ) ) )","target":"CreateEvent(ends_at(EndOfWorkDay()))","qid":"a5e930ec-90e6-42ff-a300-c7d83392464c.1"}
{"source":"Create a lunch meeting at the Baskin Robbins after my meeting at 11 am","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :location ( ?= # ( LocationKeyphrase \" Baskin Robbins \" ) ) :start ( ?= ( NextTime :time ( HourMinuteAm :hours # ( Number 11 ) :minutes # ( Number 30.0 ) ) ) ) :subject ( ?= # ( String \" lunch meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(at_location(\" Baskin Robbins \"),has_subject(\" lunch meeting \"),starts_at(NextTime(time=HourMinuteAm(hours=11,minutes=30)))))","qid":"f7745fd8-0020-40d3-9d35-bf6da8c186f0.0"}
{"source":"I need to schedule volunteer time for the dog rescue this Sunday morning .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( DateTimeConstraint :constraint ( Morning ) :date ( NextDOW :dow # ( DayOfWeek \" SUNDAY \" ) ) ) :subject ( ?= # ( String \" volunteer time for the dog rescue \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" volunteer time for the dog rescue \"),starts_at(Morning()),starts_at(NextDOW(\" SUNDAY \"))))","qid":"3d555d2b-7a93-404b-838b-edad0a1d5f20.0"}
{"source":"make an event for Sunday shoe shopping","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" SUNDAY \" ) ) ) ) :subject ( ?= # ( String \" shoe shopping \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" shoe shopping \"),starts_at(NextDOW(\" SUNDAY \"))))","qid":"2946d778-7e53-4b89-8e7c-b4df3f1b918c.1"}
{"source":"can you arrange with 10 . 00 Am","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( NextTime :time ( NumberAM :number # ( Number 10.0 ) ) ) ) ) ) ) )","target":"CreateEvent(starts_at(NextTime(time=NumberAM(10))))","qid":"480789fe-8c20-4a11-a384-8504f263b303.3"}
{"source":"I need a hiking trip in the mountains January 1 for 3 days .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :location ( ?= # ( LocationKeyphrase \" mountains \" ) ) :nonEmptyBase ( EventAllDayStartingDateForPeriod :event ( Constraint[Event] :subject ( ?= # ( String \" hiking trip \" ) ) ) :period ( toDays # ( Number 3 ) ) :startDate ( MD :day # ( Number 1 ) :month # ( Month \" JANUARY \" ) ) ) ) ) ) )","target":"CreateEvent(AND(at_location(\" mountains \"),has_subject(\" hiking trip \"),has_duration(toDays(3)),starts_at(MD(month=\" JANUARY \",day=1)),starts_at(Time(hour=0,minute=0))))","qid":"5022261f-5f98-4b2f-bbf3-1f60f9188a02.4"}
{"source":"Does Dan Schoffel report to anyone ?","original_target":"( Yield :output ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Dan Schoffel \" ) ) ) ) ) ) )","target":"FindManager(\" Dan Schoffel \")","qid":"c68d7860-542e-474d-a184-98337b6dbda2.4"}
{"source":"Hello , I want to plan a road trip for all of next week","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( EventAllDayForDateRange :dateRange ( NextWeekList ) :event ( Constraint[Event] :subject ( ?= # ( String \" road trip \" ) ) ) ) ) ) )","target":"CreateEvent(AND(spans_time(NextWeekList()),has_subject(\" road trip \")))","qid":"efd83bd3-4b8b-434d-ae58-34565b2cd88f.0"}
{"source":"Can you please schedule me an event at end of work day today ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( Today ) :time ( EndOfWorkDay ) ) ) ) ) ) )","target":"CreateEvent(AND(starts_at(Today()),starts_at(EndOfWorkDay())))","qid":"68c4807f-8b7c-4d12-a338-27991c8722b3.0"}
{"source":"Schedule a hair appointment tomorrow at 3 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 3 ) ) ) ) :subject ( ?= # ( String \" hair appointment \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" hair appointment \"),starts_at(Tomorrow()),starts_at(NumberPM(3))))","qid":"86f8ecef-3054-4ea8-ba9b-b30d66dd1a4e.4"}
{"source":"Add a two hour team meeting to my calendar on Monday starting at 9 AM .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :duration ( ?= ( toHours # ( Number 2 ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :time ( NumberAM :number # ( Number 9 ) ) ) ) :subject ( ?= # ( String \" team meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(has_duration(toHours(2)),has_subject(\" team meeting \"),starts_at(NextDOW(\" MONDAY \")),starts_at(NumberAM(9))))","qid":"31244b7f-f834-4dc9-8f34-272101989b4e.1"}
{"source":"Create a one - hour event on Thursday starting at noon .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :duration ( ?= ( toHours # ( Number 1 ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" THURSDAY \" ) ) :time ( Noon ) ) ) ) ) ) )","target":"CreateEvent(AND(has_duration(toHours(1)),starts_at(NextDOW(\" THURSDAY \")),starts_at(Noon())))","qid":"be403fca-476f-44d3-aeb2-b10d2c733707.0"}
{"source":"Pick up the book at 6 .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( NextTime :time ( NumberPM :number # ( Number 6 ) ) ) ) :subject ( ?= # ( String \" pick up the book \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" pick up the book \"),starts_at(NextTime(time=NumberPM(6)))))","qid":"f8a27253-a5f1-4eed-a8e9-f26eddcbdc38.3"}
{"source":"lets do april 8 th","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( MD :day # ( Number 8 ) :month # ( Month \" APRIL \" ) ) ) ) ) ) ) )","target":"CreateEvent(starts_at(MD(month=\" APRIL \",day=8)))","qid":"256259c6-0c45-4c1a-8a8b-a49fb15b5ec6.3"}
{"source":"create basketball game on monday at 8","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :time ( NumberPM :number # ( Number 8 ) ) ) ) :subject ( ?= # ( String \" basketball game \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" basketball game \"),starts_at(NextDOW(\" MONDAY \")),starts_at(NumberPM(8))))","qid":"eced5dfb-832f-4dfe-81e3-16f7f0d44f41.0"}
{"source":"Make an appointment for 2 hours from now","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( adjustByPeriodDuration ( Now ) ( PeriodDuration :duration ( toHours # ( Number 2 ) ) ) ) ) ) ) ) )","target":"CreateEvent(starts_at(adjustByPeriodDuration(Now(),PeriodDuration(duration=toHours(2)))))","qid":"f91fcd85-907a-4513-bc34-f1b68e682700.0"}
{"source":"Could you add skiing with Ed , Edd , and Eddy to my calendar for November 19 th ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Ed \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Edd \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Eddy \" ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( MD :day # ( Number 19 ) :month # ( Month \" NOVEMBER \" ) ) ) ) :subject ( ?= # ( String \" skiing \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Eddy \"),with_attendee(\" Ed \"),with_attendee(\" Edd \"),has_subject(\" skiing \"),starts_at(MD(month=\" NOVEMBER \",day=19))))","qid":"a6b72f42-b1bf-46be-85eb-5e6583613a81.4"}
{"source":"Can you set a time to play basketball with Kyle , Darian and James next week","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kyle \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Darian \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" James \" ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( NextWeekList ) ) :subject ( ?= # ( String \" play basketball \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" James \"),with_attendee(\" Kyle \"),with_attendee(\" Darian \"),has_subject(\" play basketball \"),starts_at(NextWeekList())))","qid":"d19141d5-261b-4f26-94da-f824547aefea.4"}
{"source":"Set a date for all of next week for my vacation .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( EventAllDayForDateRange :dateRange ( NextWeekList ) :event ( Constraint[Event] :subject ( ?= # ( String \" vacation \" ) ) ) ) ) ) )","target":"CreateEvent(AND(spans_time(NextWeekList()),has_subject(\" vacation \")))","qid":"e14dc3f0-e1e3-4fc5-b7d8-73f3aa38c43d.0"}
{"source":"Add a four hour meeting at 8 am called Group meeting .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :duration ( ?= ( toHours # ( Number 4 ) ) ) :start ( ?= ( NextTime :time ( NumberAM :number # ( Number 8 ) ) ) ) :subject ( ?= # ( String \" Group meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" Group meeting \"),starts_at(NextTime(time=NumberAM(8))),has_duration(toHours(4))))","qid":"65ac1390-4cb1-49f2-9dbc-b6d35b86e4ae.2"}
{"source":"Can you mark me as flyfishing with Jeremy on Saturday at 6 am ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jeremy \" ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" SATURDAY \" ) ) :time ( NumberAM :number # ( Number 6 ) ) ) ) :subject ( ?= # ( String \" flyfishing \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jeremy \"),has_subject(\" flyfishing \"),starts_at(NextDOW(\" SATURDAY \")),starts_at(NumberAM(6))))","qid":"012fb7ab-414f-4a76-a261-719e98c235a2.1"}
{"source":"Make a dinner appointment with Jim at 5 pm two weeks from today .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jim \" ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( adjustByPeriod ( Today ) ( toWeeks # ( Number 2 ) ) ) :time ( NumberPM :number # ( Number 5 ) ) ) ) :subject ( ?= # ( String \" dinner appointment \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jim \"),has_subject(\" dinner appointment \"),starts_at(adjustByPeriod(Today(),toWeeks(2))),starts_at(NumberPM(5))))","qid":"2d92995b-96ff-495f-ab6c-5192d879c2f5.1"}
{"source":"Now make an event called beach on the 7 th at brunch","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( nextDayOfMonth ( Today ) # ( Number 7 ) ) :time ( Brunch ) ) ) :subject ( ?= # ( String \" beach \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" beach \"),starts_at(nextDayOfMonth(Today(),7)),starts_at(Brunch())))","qid":"2d2a4a58-d5e3-4b15-9049-d613e4a45a59.3"}
{"source":"I have a lunch date with Rex t 12 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Rex \" ) ) ) ) ) ) :start ( ?= ( NextTime :time ( NumberPM :number # ( Number 12 ) ) ) ) :subject ( ?= # ( String \" lunch date \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Rex \"),has_subject(\" lunch date \"),starts_at(NextTime(time=NumberPM(12)))))","qid":"65973297-7060-42c7-9d63-d137c24fb4ce.0"}
{"source":"I need to invite bryan to the Oakland Party next saturday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" bryan \" ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" SATURDAY \" ) ) ) ) :subject ( ?= # ( String \" Oakland Party \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" bryan \"),has_subject(\" Oakland Party \"),starts_at(NextDOW(\" SATURDAY \"))))","qid":"0212995a-69f7-4d00-a70c-9e4f13c84bfb.0"}
{"source":"ok please put on my calender that I have a date saturday at 7 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" SATURDAY \" ) ) :time ( NumberPM :number # ( Number 7 ) ) ) ) :subject ( ?= # ( String \" date \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" date \"),starts_at(NextDOW(\" SATURDAY \")),starts_at(NumberPM(7))))","qid":"089db851-3cf5-4c16-b787-6bb02496f7a8.6"}
{"source":"Need to see who Jake 's boss is .","original_target":"( Yield :output ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) )","target":"FindManager(\" Jake \")","qid":"089606f3-5815-4644-b90d-c7fb3b5d6970.1"}
{"source":"I 'd like to make a date with Kate tonight at 5 PM for the Roxbury","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kate \" ) ) ) ) ) ) :location ( ?= # ( LocationKeyphrase \" Roxbury \" ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Today ) :time ( NumberPM :number # ( Number 5 ) ) ) ) :subject ( ?= # ( String \" date \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Kate \"),at_location(\" Roxbury \"),has_subject(\" date \"),starts_at(Today()),starts_at(NumberPM(5))))","qid":"30a14f6c-4076-46f1-8a55-f6617c273a48.3"}
{"source":"Meet with Mat today","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Mat \" ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Today ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Mat \"),starts_at(Today())))","qid":"539b37dc-23a6-4206-8b0a-156a647b7a89.3"}
{"source":"Block off 2 hours for studying at University of Maryland library tomorrow at 7 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :duration ( ?= ( toHours # ( Number 2 ) ) ) :location ( ?= # ( LocationKeyphrase \" University of Maryland library \" ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 7 ) ) ) ) :subject ( ?= # ( String \" studying \" ) ) ) ) ) )","target":"CreateEvent(AND(has_duration(toHours(2)),at_location(\" University of Maryland library \"),has_subject(\" studying \"),starts_at(Tomorrow()),starts_at(NumberPM(7))))","qid":"77ebb234-f2eb-4cef-b746-3ffbc4ceac6c.0"}
{"source":"Please add Grace 's First Communion on Sunday at 1 : 00 pm to 2 : 00 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :end ( ?= ( TimeAfterDateTime :dateTime ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" SUNDAY \" ) ) :time ( NumberPM :number # ( Number 1 ) ) ) :time ( NumberPM :number # ( Number 2 ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" SUNDAY \" ) ) :time ( NumberPM :number # ( Number 1 ) ) ) ) :subject ( ?= # ( String \" Grace's First Communion \" ) ) ) ) ) )","target":"CreateEvent(AND(ends_at(AND(GE(DateTime?(date=NextDOW(\" SUNDAY \"),time=NumberPM(1))),NumberPM(2))),has_subject(\" Grace's First Communion \"),starts_at(NextDOW(\" SUNDAY \")),starts_at(NumberPM(1))))","qid":"c3a210fc-d23a-421e-b9a8-da65fbf287af.5"}
{"source":"mountain hike at 8 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :time ( ?= ( NumberPM :number # ( Number 8 ) ) ) ) :subject ( ?= # ( String \" mountain hike \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" mountain hike \"),starts_at(NumberPM(8))))","qid":"4d7495b2-e5e9-43a4-badd-e9fa44d1a991.0"}
{"source":"Can you schedule lunch with my uncle Obama next Monday ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Obama \" ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) ) ) :subject ( ?= # ( String \" lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Obama \"),has_subject(\" lunch \"),starts_at(NextDOW(\" MONDAY \"))))","qid":"c94eb80d-7206-48bf-80ce-0d4582a69a76.0"}
{"source":"Schedule a Brunch with Kayla and Charlie .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kayla \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Charlie \" ) ) ) ) ) ) ) :subject ( ?= # ( String \" Brunch \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Kayla \"),with_attendee(\" Charlie \"),has_subject(\" Brunch \")))","qid":"5e8af238-e0f5-4712-bf36-98852b7460dc.2"}
{"source":"I need a meeting on Friday called Lunch .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) ) ) :subject ( ?= # ( String \" Lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" Lunch \"),starts_at(NextDOW(\" FRIDAY \"))))","qid":"f78b8193-04e9-48f2-b022-d7947eb5e4c7.2"}
{"source":"Put a meeting with Pete Za on Friday at 8","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Pete Za \" ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( NumberAM :number # ( Number 8 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Pete Za \"),starts_at(NextDOW(\" FRIDAY \")),starts_at(NumberAM(8))))","qid":"5d7c5104-410f-4e57-b178-819d8487f770.2"}
{"source":"Team Morale Meeting at Bowser Haus on Friday from 5 : 30 pm to 8 : 30 pm . Invite Toad , Daisy , and Rosalina to it","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Toad \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Daisy \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Rosalina \" ) ) ) ) ) ) ) :end ( ?= ( TimeAfterDateTime :dateTime ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( HourMinutePm :hours # ( Number 5 ) :minutes # ( Number 30.0 ) ) ) :time ( HourMinutePm :hours # ( Number 8 ) :minutes # ( Number 30.0 ) ) ) ) :location ( ?= # ( LocationKeyphrase \" Bowser Haus \" ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( HourMinutePm :hours # ( Number 5 ) :minutes # ( Number 30.0 ) ) ) ) :subject ( ?= # ( String \" Team Morale Meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(ends_at(AND(GE(DateTime?(date=NextDOW(\" FRIDAY \"),time=HourMinutePm(hours=5,minutes=30))),HourMinutePm(hours=8,minutes=30))),with_attendee(\" Rosalina \"),with_attendee(\" Toad \"),with_attendee(\" Daisy \"),at_location(\" Bowser Haus \"),has_subject(\" Team Morale Meeting \"),starts_at(NextDOW(\" FRIDAY \")),starts_at(HourMinutePm(hours=5,minutes=30))))","qid":"ce0302e1-7f5f-47a4-90a1-0bd854f5d5c9.0"}
{"source":"Make an all day event tomorrow for Kelsey 's birthday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( EventAllDayOnDate :date ( Tomorrow ) :event ( Constraint[Event] :subject ( ?= # ( String \" Kelsey's birthday \" ) ) ) ) ) ) )","target":"CreateEvent(AND(spans_time(Tomorrow()),has_subject(\" Kelsey's birthday \")))","qid":"f657e605-2a48-439c-b0e9-b2a656c975c6.3"}
{"source":"Please add an event named \" dinner \" for tomorrow .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) :subject ( ?= # ( String \" dinner \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" dinner \"),starts_at(Tomorrow())))","qid":"cff579fc-7493-44f8-a426-ed8624bf4965.2"}
{"source":"I need to go to the Elf Kingdom to offer a peace treaty . It is going to be on Sunday at 2 pm to 4 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :end ( ?= ( TimeAfterDateTime :dateTime ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" SUNDAY \" ) ) :time ( NumberPM :number # ( Number 2 ) ) ) :time ( NumberPM :number # ( Number 4 ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" SUNDAY \" ) ) :time ( NumberPM :number # ( Number 2 ) ) ) ) :subject ( ?= # ( String \" go to the Elf Kingdom to offer a peace treaty \" ) ) ) ) ) )","target":"CreateEvent(AND(ends_at(AND(GE(DateTime?(date=NextDOW(\" SUNDAY \"),time=NumberPM(2))),NumberPM(4))),has_subject(\" go to the Elf Kingdom to offer a peace treaty \"),starts_at(NextDOW(\" SUNDAY \")),starts_at(NumberPM(2))))","qid":"5de14366-5400-4c12-9979-d903ce1d817c.0"}
{"source":"Add an appointment after lunch with Jack for Friday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jack \" ) ) ) ) ) ) :start ( OnDateAfterTime :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( Lunch ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jack \"),starts_at(OnDateAfterTime(date=NextDOW(\" FRIDAY \"),time=Lunch()))))","qid":"d778bc93-edf1-4eac-aa55-6e9c9bc25614.3"}
{"source":"make a new event for next thursday at 5 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" THURSDAY \" ) ) :time ( NumberPM :number # ( Number 5 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(starts_at(NextDOW(\" THURSDAY \")),starts_at(NumberPM(5))))","qid":"2ed3788f-8779-4c99-8c0e-44a863170c6a.4"}
{"source":"singing competition saturday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" SATURDAY \" ) ) ) ) :subject ( ?= # ( String \" singing competition \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" singing competition \"),starts_at(NextDOW(\" SATURDAY \"))))","qid":"f095bf3f-59b7-40f3-b1ce-180ebd62428c.0"}
{"source":"I need a meeting with Kim but first need to know who is on her team ?","original_target":"( Yield :output ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim \" ) ) ) ) ) ) )","target":"FindTeamOf(recipient=with_attendee(\" Kim \"))","qid":"5bcde706-63c0-4e99-8573-16dda88f105a.3"}
{"source":"Add quick bite with Jennie on Friday from 6 : 30 to 7 : 00 pm on Friday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jennie \" ) ) ) ) ) ) :end ( ?= ( TimeAfterDateTime :dateTime ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( HourMinutePm :hours # ( Number 6 ) :minutes # ( Number 30.0 ) ) ) :time ( NumberPM :number # ( Number 7 ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( HourMinutePm :hours # ( Number 6 ) :minutes # ( Number 30.0 ) ) ) ) :subject ( ?= # ( String \" quick bite \" ) ) ) ) ) )","target":"CreateEvent(AND(ends_at(AND(GE(DateTime?(date=NextDOW(\" FRIDAY \"),time=HourMinutePm(hours=6,minutes=30))),NumberPM(7))),with_attendee(\" Jennie \"),has_subject(\" quick bite \"),starts_at(NextDOW(\" FRIDAY \")),starts_at(HourMinutePm(hours=6,minutes=30))))","qid":"a8fae0a8-4729-4a53-affc-0909f2227912.0"}
{"source":"sunday funday at jeffs at 10","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :location ( ?= # ( LocationKeyphrase \" jeffs \" ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" SUNDAY \" ) ) :time ( NumberAM :number # ( Number 10.0 ) ) ) ) :subject ( ?= # ( String \" funday \" ) ) ) ) ) )","target":"CreateEvent(AND(at_location(\" jeffs \"),has_subject(\" funday \"),starts_at(NextDOW(\" SUNDAY \")),starts_at(NumberAM(10))))","qid":"875ed272-2cda-4fa4-a0fe-500e829f8e1e.0"}
{"source":"3 pm Coffee Break today","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( Today ) :time ( NumberPM :number # ( Number 3 ) ) ) ) :subject ( ?= # ( String \" Coffee Break \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" Coffee Break \"),starts_at(Today()),starts_at(NumberPM(3))))","qid":"5231c887-71ee-4b70-8dd2-2a52eb48658f.4"}
{"source":"Make a lunch meeting with Robert on Tuesday at Maddison 's .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Robert \" ) ) ) ) ) ) :location ( ?= # ( LocationKeyphrase \" Maddison's \" ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) ) ) :subject ( ?= # ( String \" lunch meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Robert \"),at_location(\" Maddison's \"),has_subject(\" lunch meeting \"),starts_at(NextDOW(\" TUESDAY \"))))","qid":"39fa3d41-450f-49f7-9ab2-21358e8ba1e5.2"}
{"source":"Could you make sure that my meeting with Jen is on the calendar for next Monday at 8 : 00 AM ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jen \" ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :time ( NumberAM :number # ( Number 8 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jen \"),starts_at(NextDOW(\" MONDAY \")),starts_at(NumberAM(8))))","qid":"b7b9be32-9d14-467b-947a-99ee877dae16.0"}
{"source":"Please give me a meeting tomorrow that ends at the end of the day .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :end ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( EndOfWorkDay ) ) ) ) ) ) )","target":"CreateEvent(AND(ends_at(Tomorrow()),ends_at(EndOfWorkDay())))","qid":"02c695e1-1214-4378-98b6-00441a1da670.0"}
{"source":"Friday is the Magic the Gathering convention at that 's from 6 to 8 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :end ( ?= ( TimeAfterDateTime :dateTime ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( NumberPM :number # ( Number 6 ) ) ) :time ( NumberPM :number # ( Number 8 ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( NumberPM :number # ( Number 6 ) ) ) ) :subject ( ?= # ( String \" Magic the Gathering convention \" ) ) ) ) ) )","target":"CreateEvent(AND(ends_at(AND(GE(DateTime?(date=NextDOW(\" FRIDAY \"),time=NumberPM(6))),NumberPM(8))),has_subject(\" Magic the Gathering convention \"),starts_at(NextDOW(\" FRIDAY \")),starts_at(NumberPM(6))))","qid":"852fa511-4518-419e-9e8f-c7390ebaa394.0"}
{"source":"Dinner meeting at Michelle 's 7 pm tonight .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :location ( ?= # ( LocationKeyphrase \" Michelle's \" ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Today ) :time ( NumberPM :number # ( Number 7 ) ) ) ) :subject ( ?= # ( String \" Dinner meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(at_location(\" Michelle's \"),has_subject(\" Dinner meeting \"),starts_at(Today()),starts_at(NumberPM(7))))","qid":"ff40e98e-bd53-482d-aca0-35f2541763e8.0"}
{"source":"Can you add a meeting at corporate to my schedule on Tuesday Jan 29 th from 3 pm to 4 pm and put me down for out of the office ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :end ( ?= ( TimeAfterDateTime :dateTime ( DateAtTimeWithDefaults :date ( MD :day # ( Number 29 ) :month # ( Month \" JANUARY \" ) ) :time ( NumberPM :number # ( Number 3 ) ) ) :time ( NumberPM :number # ( Number 4 ) ) ) ) :location ( ?= # ( LocationKeyphrase \" corporate \" ) ) :showAs ( ?= # ( ShowAsStatus \" OutOfOffice \" ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( MD :day # ( Number 29 ) :month # ( Month \" JANUARY \" ) ) :time ( NumberPM :number # ( Number 3 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(ends_at(AND(GE(DateTime?(date=MD(month=\" JANUARY \",day=29),time=NumberPM(3))),NumberPM(4))),has_status(ShowAsStatus(\" OutOfOffice \")),at_location(\" corporate \"),starts_at(MD(month=\" JANUARY \",day=29)),starts_at(NumberPM(3))))","qid":"37d31d40-32a8-42bd-92fd-f79627195786.0"}
{"source":"Thanks , and can you add planning session at 9 am on monday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :time ( NumberAM :number # ( Number 9 ) ) ) ) :subject ( ?= # ( String \" planning session \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" planning session \"),starts_at(NextDOW(\" MONDAY \")),starts_at(NumberAM(9))))","qid":"57bfe91b-064d-48ec-8b1e-ccef43242247.2"}
{"source":"Can you set aside 3 days at the beginning of November for my pilgrimage ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( EventAllDayStartingDateForPeriod :event ( Constraint[Event] :subject ( ?= # ( String \" pilgrimage \" ) ) ) :period ( toDays # ( Number 3 ) ) :startDate ( MD :day # ( Number 3 ) :month # ( Month \" NOVEMBER \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" pilgrimage \"),has_duration(toDays(3)),starts_at(MD(month=\" NOVEMBER \",day=3)),starts_at(Time(hour=0,minute=0))))","qid":"d0709f7d-6562-424e-82b4-10f2b0e5d223.4"}
{"source":"Make an appointment with Todd for Monday at 1 PM .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Todd \" ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :time ( NumberPM :number # ( Number 1 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Todd \"),starts_at(NextDOW(\" MONDAY \")),starts_at(NumberPM(1))))","qid":"26441669-5fc4-467c-9ffb-9bd2104ecb70.2"}
{"source":"Make appointment at 3 : 30 PM .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( NextTime :time ( HourMinutePm :hours # ( Number 3 ) :minutes # ( Number 30.0 ) ) ) ) ) ) ) )","target":"CreateEvent(starts_at(NextTime(time=HourMinutePm(hours=3,minutes=30))))","qid":"10f06361-71c9-43e9-a5e8-302f11b9aaa3.3"}
{"source":"Make me an event early in the day for tomorrow","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( DateTimeConstraint :constraint ( EarlyTimeRange :timeRange ( Morning ) ) :date ( Tomorrow ) ) ) ) ) )","target":"CreateEvent(AND(starts_at(EarlyTimeRange(timeRange=Morning())),starts_at(Tomorrow())))","qid":"f563fa83-441d-41d7-bd87-209956134f63.1"}
{"source":"Okay , I need you to add a bookkeeping meeting with Allison for a half hour after my HR meeting tomorrow .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Allison \" ) ) ) ) ) ) :start ( ?= ( adjustByPeriodDuration ( :end ( singleton ( :results ( FindEventWrapperWithDefaults :constraint ( EventOnDate :date ( Tomorrow ) :event ( Constraint[Event] :subject ( ?= # ( String \" HR meeting \" ) ) ) ) ) ) ) ) ( PeriodDuration :duration ( toHours # ( Number 0.5 ) ) ) ) ) :subject ( ?= # ( String \" bookkeeping meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Allison \"),has_subject(\" bookkeeping meeting \"),starts_at(adjustByPeriodDuration(:end(FindEvents(AND(starts_at(Tomorrow()),has_subject(\" HR meeting \")))),PeriodDuration(duration=toHours(0))))))","qid":"6dd02e93-abc2-4df6-bd03-d31fa2fccda3.1"}
{"source":"Schedule a Staff Meeting after my last Client Presentation on the 4 th .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( :end ( FindLastEvent :constraint ( EventOnDate :date ( nextDayOfMonth ( Today ) # ( Number 4 ) ) :event ( Constraint[Event] :subject ( ?~= # ( String \" Client Presentation \" ) ) ) ) ) ) ) :subject ( ?= # ( String \" Staff Meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" Staff Meeting \"),starts_at(:end(FindLastEvent(constraint=AND(starts_at(nextDayOfMonth(Today(),4)),has_subject(\" Client Presentation \")))))))","qid":"a50022bd-ce47-4d80-a0db-8cd7bad72b71.0"}
{"source":"MJy rent is due on the 11 th of May.","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( MD :day # ( Number 11 ) :month # ( Month \" MAY \" ) ) ) ) :subject ( ?= # ( String \" MJy rent is due \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" MJy rent is due \"),starts_at(MD(month=\" MAY \",day=11))))","qid":"cafd21d9-91ca-427f-b9aa-685aaeab7917.3"}
{"source":"Meet Barack Obama tomorrow at 10 .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Barack Obama \" ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 10.0 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Barack Obama \"),starts_at(Tomorrow()),starts_at(NumberPM(10))))","qid":"5b3e7d0e-78b1-4647-8230-659eef6309d5.1"}
{"source":"Schedule a \" Doctor 's Appointment \" at 4 pm this Thursday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" THURSDAY \" ) ) :time ( NumberPM :number # ( Number 4 ) ) ) ) :subject ( ?= # ( String \" Doctor's Appointment \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" Doctor's Appointment \"),starts_at(NextDOW(\" THURSDAY \")),starts_at(NumberPM(4))))","qid":"ee36cbcc-c4fe-4aa5-af52-2a126d5fd692.0"}
{"source":"Schedule gym time at 6 pm this evening for 1 hour .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :duration ( ?= ( toHours # ( Number 1 ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Today ) :time ( NumberPM :number # ( Number 6 ) ) ) ) :subject ( ?= # ( String \" gym time \" ) ) ) ) ) )","target":"CreateEvent(AND(has_duration(toHours(1)),has_subject(\" gym time \"),starts_at(Today()),starts_at(NumberPM(6))))","qid":"6f89fed6-5baa-433b-8f3e-1865eb18339e.0"}
{"source":"i also have a meeting at 8 am Monday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :time ( NumberAM :number # ( Number 8 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(starts_at(NextDOW(\" MONDAY \")),starts_at(NumberAM(8))))","qid":"83663ecf-7b3f-4b4c-90ae-612fbf092ab0.2"}
{"source":"All right , I need to add dog groomer at 5 pm today","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( Today ) :time ( NumberPM :number # ( Number 5 ) ) ) ) :subject ( ?= # ( String \" dog groomer \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" dog groomer \"),starts_at(Today()),starts_at(NumberPM(5))))","qid":"b4f4f24e-7741-43b0-8e2f-bb88add667c7.1"}
{"source":"can you put a meet with Homie on tomorrow ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Homie \" ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Homie \"),starts_at(Tomorrow())))","qid":"66017cdf-2f85-4a2a-83af-1edfb0c7cd75.1"}
{"source":"Schedule a trip to England for 10 days starting on December 1 st .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( EventAllDayStartingDateForPeriod :event ( Constraint[Event] :subject ( ?= # ( String \" trip to England \" ) ) ) :period ( toDays # ( Number 10.0 ) ) :startDate ( MD :day # ( Number 1 ) :month # ( Month \" DECEMBER \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" trip to England \"),has_duration(toDays(10)),starts_at(MD(month=\" DECEMBER \",day=1)),starts_at(Time(hour=0,minute=0))))","qid":"9ef2273e-ac11-4c97-bfaa-235ca8e177a5.2"}
{"source":"Create an appointment with steve from 1 pm to 2 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" steve \" ) ) ) ) ) ) :end ( ?= ( TimeAfterDateTime :dateTime ( NextTime :time ( NumberPM :number # ( Number 1 ) ) ) :time ( NumberPM :number # ( Number 2 ) ) ) ) :start ( ?= ( NextTime :time ( NumberPM :number # ( Number 1 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" steve \"),starts_at(NextTime(time=NumberPM(1))),ends_at(AND(GE(NextTime(time=NumberPM(1))),NumberPM(2)))))","qid":"eb78b2c8-9ab9-49f0-b498-0975cc3fc83d.0"}
{"source":"Who reports to me then ?","original_target":"( Yield :output ( FindReports :recipient ( toRecipient ( CurrentUser ) ) ) )","target":"FindReports(recipient=CurrentUser())","qid":"40591f58-7206-4394-9e42-249d8e79b792.4"}
{"source":"Now I need you add a meet and greet with Silvia on Saturday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Silvia \" ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" SATURDAY \" ) ) ) ) :subject ( ?= # ( String \" meet and greet \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Silvia \"),has_subject(\" meet and greet \"),starts_at(NextDOW(\" SATURDAY \"))))","qid":"faee743b-1770-4340-9fd1-b13e7ab8317d.3"}
{"source":"I have a hair appointment for all day Sunday , please confirm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( EventAllDayOnDate :date ( NextDOW :dow # ( DayOfWeek \" SUNDAY \" ) ) :event ( Constraint[Event] :subject ( ?= # ( String \" hair appointment \" ) ) ) ) ) ) )","target":"CreateEvent(AND(spans_time(NextDOW(\" SUNDAY \")),has_subject(\" hair appointment \")))","qid":"74336c1b-b53f-4a3e-93db-1b30c70b240a.3"}
{"source":"Can you make a lunch meeting at 12 : 30 ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( NextTime :time ( HourMinutePm :hours # ( Number 12 ) :minutes # ( Number 30.0 ) ) ) ) :subject ( ?= # ( String \" lunch meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" lunch meeting \"),starts_at(NextTime(time=HourMinutePm(hours=12,minutes=30)))))","qid":"ea961dc0-10ca-4c9b-a788-6036bd06270b.1"}
{"source":"Set me up for a hair cut Friday 8 am","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( NumberAM :number # ( Number 8 ) ) ) ) :subject ( ?= # ( String \" hair cut \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" hair cut \"),starts_at(NextDOW(\" FRIDAY \")),starts_at(NumberAM(8))))","qid":"9ba5198f-2c71-4d0c-9804-526f84d218a7.3"}
{"source":"put meeting with regija and rick","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" regija \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" rick \" ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" regija \"),with_attendee(\" rick \")))","qid":"c97c3d13-8737-49ee-af32-1af86417a160.4"}
{"source":"Create an event for Monday at 2 : 30 as Vet","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :time ( HourMinutePm :hours # ( Number 2 ) :minutes # ( Number 30.0 ) ) ) ) :subject ( ?= # ( String \" Vet \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" Vet \"),starts_at(NextDOW(\" MONDAY \")),starts_at(HourMinutePm(hours=2,minutes=30))))","qid":"6c11e5d3-dc56-4139-8916-e752c21453ab.0"}
{"source":"Schedule a swimming party for the summer .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( SeasonSummer ) ) :subject ( ?= # ( String \" swimming party \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" swimming party \"),starts_at(SeasonSummer())))","qid":"d3ec2772-bf03-49c6-95b1-6e6c30d00de6.4"}
{"source":"Can you add # Grocery Shopping to my Calendar ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :subject ( ?= # ( String \" #Grocery Shopping \" ) ) ) ) ) )","target":"CreateEvent(has_subject(\" Grocery Shopping \"))","qid":"762f4533-9f0c-4354-b50d-41088fe2ea08.4"}
{"source":"Create time to go shopping on Friday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( Constraint[Date] ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) ) ) :subject ( ?= # ( String \" shopping \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" shopping \"),starts_at(NextDOW(\" FRIDAY \"))))","qid":"7e657f50-4367-4aba-9007-e53225f39b8f.2"}
{"source":"Schedule this weekend , July 27 - 29 as Trip to Bar Harbour .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :end ( Constraint[DateTime] :date ( ?= ( nextMonthDay ( MD :day # ( Number 27 ) :month # ( Month \" JULY \" ) ) # ( Month \" JULY \" ) # ( Number 29 ) ) ) ) :location ( ?= # ( LocationKeyphrase \" Trip to Bar Harbour \" ) ) :start ( Constraint[DateTime] :date ( ?= ( MD :day # ( Number 27 ) :month # ( Month \" JULY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(at_location(\" Trip to Bar Harbour \"),starts_at(MD(month=\" JULY \",day=27)),ends_at(nextMonthDay(MD(month=\" JULY \",day=27),Month(\" JULY \"),29))))","qid":"dde313df-d548-450f-95a2-3bd13b906499.0"}
{"source":"I will be at JJs diner tomorrow morning at 8 am","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :location ( ?= # ( LocationKeyphrase \" JJs diner \" ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberAM :number # ( Number 8 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(at_location(\" JJs diner \"),starts_at(Tomorrow()),starts_at(NumberAM(8))))","qid":"62eb9356-6b32-493d-879f-8722ce062e6e.0"}
{"source":"I 'd like to do a one on one work interview with Paige Ashworth from 2 - 3 pm on Tuesday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Paige Ashworth \" ) ) ) ) ) ) :end ( ?= ( TimeAfterDateTime :dateTime ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) :time ( NumberPM :number # ( Number 2 ) ) ) :time ( NumberPM :number # ( Number 3 ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) :time ( NumberPM :number # ( Number 2 ) ) ) ) :subject ( ?= # ( String \" work interview \" ) ) ) ) ) )","target":"CreateEvent(AND(ends_at(AND(GE(DateTime?(date=NextDOW(\" TUESDAY \"),time=NumberPM(2))),NumberPM(3))),with_attendee(\" Paige Ashworth \"),has_subject(\" work interview \"),starts_at(NextDOW(\" TUESDAY \")),starts_at(NumberPM(2))))","qid":"a04958ce-0b59-4433-927c-b72a7ec9b2db.0"}
{"source":"I 'm having the Smash Shots Tournament next week","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( NextWeekList ) ) :subject ( ?= # ( String \" Smash Shots Tournament \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" Smash Shots Tournament \"),starts_at(NextWeekList())))","qid":"c89f713a-3a7e-425c-976f-9f9e793ff06a.3"}
{"source":"make a outing trip this weekend josh and amma","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" josh \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" amma \" ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ThisWeekend ) ) :subject ( ?= # ( String \" outing trip \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" josh \"),with_attendee(\" amma \"),has_subject(\" outing trip \"),starts_at(ThisWeekend())))","qid":"b1c60bbf-efc8-47a3-9227-95c9cb89198c.0"}
{"source":"Please schedule a doctor appointment for next tuesday at 8 am","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) :time ( NumberAM :number # ( Number 8 ) ) ) ) :subject ( ?= # ( String \" doctor appointment \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" doctor appointment \"),starts_at(NextDOW(\" TUESDAY \")),starts_at(NumberAM(8))))","qid":"224909db-7e46-41ac-a419-75b1963896d2.0"}
{"source":"Schedule a soccer match on Wednesday afternoon at 3 PM at Hellyer Park","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :location ( ?= # ( LocationKeyphrase \" Hellyer Park \" ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" WEDNESDAY \" ) ) :time ( NumberPM :number # ( Number 3 ) ) ) ) :subject ( ?= # ( String \" soccer match \" ) ) ) ) ) )","target":"CreateEvent(AND(at_location(\" Hellyer Park \"),has_subject(\" soccer match \"),starts_at(NextDOW(\" WEDNESDAY \")),starts_at(NumberPM(3))))","qid":"296e2dd3-8551-4672-97de-7e2fef8d6c59.0"}
{"source":"Set up a rafting event for 4 hours tomorrow at 7 am on the Rio Grande","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :duration ( ?= ( toHours # ( Number 4 ) ) ) :location ( ?= # ( LocationKeyphrase \" Rio Grande \" ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberAM :number # ( Number 7 ) ) ) ) :subject ( ?= # ( String \" rafting \" ) ) ) ) ) )","target":"CreateEvent(AND(has_duration(toHours(4)),at_location(\" Rio Grande \"),has_subject(\" rafting \"),starts_at(Tomorrow()),starts_at(NumberAM(7))))","qid":"d601d14d-3a4b-426a-8ff4-01b052223691.0"}
{"source":"Schedule a dinner with Kim on Saturday night .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim \" ) ) ) ) ) ) :start ( DateTimeConstraint :constraint ( Night ) :date ( NextDOW :dow # ( DayOfWeek \" SATURDAY \" ) ) ) :subject ( ?= # ( String \" dinner \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Kim \"),has_subject(\" dinner \"),starts_at(Night()),starts_at(NextDOW(\" SATURDAY \"))))","qid":"4b6fba27-011f-4206-b121-86aca321a7f5.0"}
{"source":"Can you also schedule a meeting with Kate and Alex at 3 : 30 pm on Thursday ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kate \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Alex \" ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" THURSDAY \" ) ) :time ( HourMinutePm :hours # ( Number 3 ) :minutes # ( Number 30.0 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Kate \"),with_attendee(\" Alex \"),starts_at(NextDOW(\" THURSDAY \")),starts_at(HourMinutePm(hours=3,minutes=30))))","qid":"3be6fcf5-293f-47c9-8e61-7a943f3f4150.4"}
{"source":"Thanks , add go to lunch to my schedule today at 11 AM .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( Today ) :time ( NumberAM :number # ( Number 11 ) ) ) ) :subject ( ?= # ( String \" go to lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" go to lunch \"),starts_at(Today()),starts_at(NumberAM(11))))","qid":"ba28ac78-52bc-4261-adfa-3eb4f146cac4.1"}
{"source":"I';d like to make an appointment for Monday at 8 .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :time ( NumberPM :number # ( Number 8 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(starts_at(NextDOW(\" MONDAY \")),starts_at(NumberPM(8))))","qid":"bd897a17-06be-445c-a393-3ae188870645.0"}
{"source":"Lets add Wash Clothes Thursday afternoon at 4 .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" THURSDAY \" ) ) :time ( NumberPM :number # ( Number 4 ) ) ) ) :subject ( ?= # ( String \" Wash Clothes \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" Wash Clothes \"),starts_at(NextDOW(\" THURSDAY \")),starts_at(NumberPM(4))))","qid":"3acdb996-98a8-4138-89e4-b458272bc4bb.0"}
{"source":"Make me an event on Friday called go to Q","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) ) ) :subject ( ?= # ( String \" go to Q \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" go to Q \"),starts_at(NextDOW(\" FRIDAY \"))))","qid":"f5a62a61-d8bc-4233-a502-8b1f0173973d.0"}
{"source":"I need to set a meeting at 10 am in conference room B.","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :location ( ?= # ( LocationKeyphrase \" conference room B \" ) ) :start ( ?= ( NextTime :time ( NumberAM :number # ( Number 10.0 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(at_location(\" conference room B \"),starts_at(NextTime(time=NumberAM(10)))))","qid":"8eb807d8-c446-4445-9e05-211ee095f172.2"}
{"source":"I need to set up a lunch appointment on Saturday !","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" SATURDAY \" ) ) ) ) :subject ( ?= # ( String \" lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" lunch \"),starts_at(NextDOW(\" SATURDAY \"))))","qid":"d3bdc882-39f6-422a-959e-ca1099261c0e.0"}
{"source":"Make the meeting 4","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( NextTime :time ( NumberPM :number # ( Number 4 ) ) ) ) ) ) ) )","target":"CreateEvent(starts_at(NextTime(time=NumberPM(4))))","qid":"84315554-5d3f-44ae-ac4e-299407f2c50d.2"}
{"source":"And who 's on David Crim 's team ?","original_target":"( Yield :output ( FindTeamOf :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" David Crim \" ) ) ) ) ) ) )","target":"FindTeamOf(recipient=with_attendee(\" David Crim \"))","qid":"3bf455c9-3b41-4388-b2bc-7dc25519307a.4"}
{"source":"Can you schedule a meeting with Tina tomorrow at 3 pm ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Tina \" ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 3 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Tina \"),starts_at(Tomorrow()),starts_at(NumberPM(3))))","qid":"49f5aa46-2193-4f65-851b-223056d2297f.0"}
{"source":"Please schedule a meeting in two weeks .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( adjustByPeriod ( Today ) ( toWeeks # ( Number 2 ) ) ) ) ) ) ) ) )","target":"CreateEvent(starts_at(adjustByPeriod(Today(),toWeeks(2))))","qid":"195c9416-4f15-4ee1-8253-1bb2a79f0586.1"}
{"source":"set time to order tv tomorrow","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) :subject ( ?= # ( String \" order tv \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" order tv \"),starts_at(Tomorrow())))","qid":"e9419f06-c38a-4780-b72f-9bc21c8b466c.1"}
{"source":"Please add an event \" Camping \" with abby please","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" abby \" ) ) ) ) ) ) :subject ( ?= # ( String \" Camping \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" abby \"),has_subject(\" Camping \")))","qid":"73629763-ab39-4be3-bd54-5313278289a5.0"}
{"source":"Schedule dinner late this evening .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( DateTimeConstraint :constraint ( LateTimeRange :timeRange ( Evening ) ) :date ( Today ) ) :subject ( ?= # ( String \" dinner \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" dinner \"),starts_at(LateTimeRange(timeRange=Evening())),starts_at(Today())))","qid":"7cc054b4-7522-455b-ac8b-cbf083046d0d.4"}
{"source":"create event at 13 30","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( NextTime :time ( HourMinuteMilitary :hours # ( Number 13 ) :minutes # ( Number 30.0 ) ) ) ) ) ) ) )","target":"CreateEvent(starts_at(NextTime(time=HourMinuteMilitary(hours=13,minutes=30))))","qid":"1f3dab04-1368-4a2a-a018-69765ca56a19.0"}
{"source":"schedule a meeting with Jim and Sarah tonight to discuss employee reviews","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jim \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Sarah \" ) ) ) ) ) ) ) :start ( DateTimeConstraint :constraint ( Night ) :date ( Today ) ) :subject ( ?= # ( String \" discuss employee reviews \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jim \"),with_attendee(\" Sarah \"),has_subject(\" discuss employee reviews \"),starts_at(Night()),starts_at(Today())))","qid":"cb2a288b-35eb-4f5a-973c-dd460ab98f67.2"}
{"source":"Schedule my coffee break early on the 12 th","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( DateTimeConstraint :constraint ( Early ) :date ( nextDayOfMonth ( Today ) # ( Number 12 ) ) ) :subject ( ?= # ( String \" coffee break \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" coffee break \"),starts_at(Early()),starts_at(nextDayOfMonth(Today(),12))))","qid":"00d5857e-0839-4e17-b9d4-7e271022912a.0"}
{"source":"Lemme get an Event for early in the day on Monday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( DateTimeConstraint :constraint ( Early ) :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) ) ) ) ) )","target":"CreateEvent(AND(starts_at(Early()),starts_at(NextDOW(\" MONDAY \"))))","qid":"4c93a85e-e463-468b-97b7-b1db699c893d.2"}
{"source":"Add lunch next monday with my mom at noon","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :time ( Noon ) ) ) :subject ( ?= # ( String \" lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" lunch \"),starts_at(NextDOW(\" MONDAY \")),starts_at(Noon())))","qid":"0870bfd9-e95e-4ff9-a039-23860a2a36c6.2"}
{"source":"create poker night on monday at 9 until 12","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :end ( ?= ( TimeAfterDateTime :dateTime ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :time ( NumberPM :number # ( Number 9 ) ) ) :time ( NumberPM :number # ( Number 12 ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :time ( NumberPM :number # ( Number 9 ) ) ) ) :subject ( ?= # ( String \" poker night \" ) ) ) ) ) )","target":"CreateEvent(AND(ends_at(AND(GE(DateTime?(date=NextDOW(\" MONDAY \"),time=NumberPM(9))),NumberPM(12))),has_subject(\" poker night \"),starts_at(NextDOW(\" MONDAY \")),starts_at(NumberPM(9))))","qid":"28cd3d6f-7ff5-43ab-bd1a-4c022b8990cf.0"}
{"source":"Does Louis and Ursla have the same manager ?","original_target":"( Yield :output ( == ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Louis \" ) ) ) ) ) ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Ursla \" ) ) ) ) ) ) ) )","target":"EQf(refer(Recipient?(name=LIKE(Louis))),FindManager(\" Ursla \"))","qid":"3c99a636-62b3-4a36-a6ed-bbf47e4e509f.0"}
{"source":"Create a reminder for dentist appointment tomorrow at 8 in the morning .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberAM :number # ( Number 8 ) ) ) ) :subject ( ?= # ( String \" dentist appointment \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" dentist appointment \"),starts_at(Tomorrow()),starts_at(NumberAM(8))))","qid":"74c49fe6-4016-4b68-8e25-b25a01af3e5e.0"}
{"source":"Make a appointment for tomorrow","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) ) ) ) )","target":"CreateEvent(starts_at(Tomorrow()))","qid":"2aadd55e-e06e-494f-94af-f95d37467e31.1"}
{"source":"And I will like to go to Ocean Buffet after Fishing tomorrow .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( :end ( singleton ( :results ( FindEventWrapperWithDefaults :constraint ( EventOnDate :date ( Tomorrow ) :event ( Constraint[Event] :subject ( ?~= # ( String \" Fishing \" ) ) ) ) ) ) ) ) ) :subject ( ?= # ( String \" Ocean Buffet \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" Ocean Buffet \"),starts_at(:end(FindEvents(AND(starts_at(Tomorrow()),has_subject(\" Fishing \")))))))","qid":"ae16858b-f601-4c41-9524-5678b57cbf5c.12"}
{"source":"Set up an appointment with Doctor Freedman at 47 Doctor 's Park for Tuesday 2 pm .","original_target":"( do ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Doctor Freedman \" ) ) ) ) ) ) ( Constraint[Event] ) # ( Path \" attendees \" ) ( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :location ( ?= # ( LocationKeyphrase \" 47 Doctor's Park \" ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) :time ( NumberPM :number # ( Number 2 ) ) ) ) ) ) ) ) )","target":"do(with_attendee(\" Doctor Freedman \"),Event?(),Path(\" attendees \"),CreateEvent(AND(at_location(\" 47 Doctor's Park \"),starts_at(NextDOW(\" TUESDAY \")),starts_at(NumberPM(2)))))","qid":"d4e14277-3f56-4375-a57f-29183b755ca1.0"}
{"source":"I need you to create a new event subject \" Play Smash online this Saturday \" and schedule it for 8 : 00 PM .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( NextTime :time ( NumberPM :number # ( Number 8 ) ) ) ) :subject ( ?= # ( String \" Play Smash online this Saturday \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" Play Smash online this Saturday \"),starts_at(NextTime(time=NumberPM(8)))))","qid":"9523aff3-7acd-4a0f-9eae-813287d9c132.0"}
{"source":"On sunday add 2 hours to clean closets at 2 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :duration ( ?= ( toHours # ( Number 2 ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" SUNDAY \" ) ) :time ( NumberPM :number # ( Number 2 ) ) ) ) :subject ( ?= # ( String \" clean closets \" ) ) ) ) ) )","target":"CreateEvent(AND(has_duration(toHours(2)),has_subject(\" clean closets \"),starts_at(NextDOW(\" SUNDAY \")),starts_at(NumberPM(2))))","qid":"9c5f8068-7ae9-46c3-bc8b-f7b6cb66ae7e.2"}
{"source":"set up a new calendar event with location set for home","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :location ( ?= # ( LocationKeyphrase \" home \" ) ) ) ) ) )","target":"CreateEvent(at_location(\" home \"))","qid":"993f73af-7eed-41a7-a0b8-aff857b885c5.0"}
{"source":"Create a meeting with Dwight at Chili 's at 4 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Dwight \" ) ) ) ) ) ) :location ( ?= # ( LocationKeyphrase \" Chili's \" ) ) :start ( ?= ( NextTime :time ( NumberPM :number # ( Number 4 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Dwight \"),at_location(\" Chili's \"),starts_at(NextTime(time=NumberPM(4)))))","qid":"a9d6eca9-e364-4d58-a5b1-d5269f69257e.0"}
{"source":"Please note that I have the triathlon all next weekend .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( EventAllDayForDateRange :dateRange ( NextWeekend ) :event ( Constraint[Event] :subject ( ?= # ( String \" triathlon \" ) ) ) ) ) ) )","target":"CreateEvent(AND(spans_time(NextWeekend()),has_subject(\" triathlon \")))","qid":"4be7082a-b3dd-49e7-a2a1-c20b753c9a85.0"}
{"source":"Can you schedule me an event at brunch Friday ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( Brunch ) ) ) ) ) ) )","target":"CreateEvent(AND(starts_at(NextDOW(\" FRIDAY \")),starts_at(Brunch())))","qid":"b3ee3cac-02c2-4eae-a32c-af8eba57ebd1.2"}
{"source":"Please make a week long event the week of the 26 th of this month labeled \" Vegas \"","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( EventAllDayStartingDateForPeriod :event ( Constraint[Event] :subject ( ?= # ( String \" Vegas \" ) ) ) :period ( toWeeks # ( Number 1 ) ) :startDate ( MD :day # ( Number 26 ) :month ( :month ( Today ) ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" Vegas \"),has_duration(toWeeks(1)),starts_at(MD(month=:month(Today()),day=26)),starts_at(Time(hour=0,minute=0))))","qid":"1cdd81d0-32c4-4054-9400-9a3d55d70476.0"}
{"source":"Schedule discussion over dinner today at 7 pm and invite Jess please .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jess \" ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Today ) :time ( NumberPM :number # ( Number 7 ) ) ) ) :subject ( ?= # ( String \" discussion over dinner \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jess \"),has_subject(\" discussion over dinner \"),starts_at(Today()),starts_at(NumberPM(7))))","qid":"f4abfb2c-446a-42fa-ac6c-9b0c39adc102.0"}
{"source":"Can you add that I have a meeting with Mike tomorrow at 3 : 00 p.m. in his office ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Mike \" ) ) ) ) ) ) :location ( ?= # ( LocationKeyphrase \" his office \" ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 3 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Mike \"),at_location(\" his office \"),starts_at(Tomorrow()),starts_at(NumberPM(3))))","qid":"1e9cb85a-0962-4757-b023-39e660ec0578.0"}
{"source":"I have to review the notes of the meeting at 1 pm tomorrow as well .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 1 ) ) ) ) :subject ( ?= # ( String \" review the notes of the meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" review the notes of the meeting \"),starts_at(Tomorrow()),starts_at(NumberPM(1))))","qid":"ce633c16-0fa9-4295-9c1b-bb91cb2d77c1.2"}
{"source":"I would like to schedule a dentist appointment for next Thursday at 1 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" THURSDAY \" ) ) :time ( NumberPM :number # ( Number 1 ) ) ) ) :subject ( ?= # ( String \" dentist appointment \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" dentist appointment \"),starts_at(NextDOW(\" THURSDAY \")),starts_at(NumberPM(1))))","qid":"12e93934-2041-4d1c-8840-32a6fc0645e2.3"}
{"source":"Please make a work business trip to Kansas lasting 5 days on the 10 th .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( EventAllDayStartingDateForPeriod :event ( Constraint[Event] :subject ( ?= # ( String \" work business trip to Kansas \" ) ) ) :period ( toDays # ( Number 5 ) ) :startDate ( nextDayOfMonth ( Today ) # ( Number 10.0 ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" work business trip to Kansas \"),has_duration(toDays(5)),starts_at(nextDayOfMonth(Today(),10)),starts_at(Time(hour=0,minute=0))))","qid":"c9eb3a7a-7724-47d4-ac4a-f86180db0635.2"}
{"source":"Please create a coffee break for 9 : 45 AM .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( NextTime :time ( HourMinuteAm :hours # ( Number 9 ) :minutes # ( Number 45 ) ) ) ) :subject ( ?= # ( String \" coffee break \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" coffee break \"),starts_at(NextTime(time=HourMinuteAm(hours=9,minutes=45)))))","qid":"0da5329d-0afd-4316-8ae8-326eb968970e.4"}
{"source":"Create an event with the name of \" Mark \" on Friday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) ) ) :subject ( ?= # ( String \" Mark \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" Mark \"),starts_at(NextDOW(\" FRIDAY \"))))","qid":"6aade28a-46b6-4d81-9098-735b76a8e5dd.0"}
{"source":"Add meet Mary and Lucas at the mall at 4 : 00 PM today .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Mary \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Lucas \" ) ) ) ) ) ) ) :location ( ?= # ( LocationKeyphrase \" mall \" ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Today ) :time ( NumberPM :number # ( Number 4 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Mary \"),with_attendee(\" Lucas \"),at_location(\" mall \"),starts_at(Today()),starts_at(NumberPM(4))))","qid":"019d3745-cd5f-4b5f-bf24-9a5eb1f37e9b.0"}
{"source":"please add dinner to my calendar on saturday at 7 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" SATURDAY \" ) ) :time ( NumberPM :number # ( Number 7 ) ) ) ) :subject ( ?= # ( String \" dinner \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" dinner \"),starts_at(NextDOW(\" SATURDAY \")),starts_at(NumberPM(7))))","qid":"2c54479f-4165-4bb8-80ae-8aaa9920eeee.0"}
{"source":"Schedule a meeting with Jackie between 7 and 9 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jackie \" ) ) ) ) ) ) :start ( DateTimeAndConstraint :dateTime1 ( NextTime :time ( NumberPM :number # ( Number 7 ) ) ) :dateTime2 ( TimeAfterDateTime :dateTime ( NextTime :time ( NumberPM :number # ( Number 7 ) ) ) :time ( NumberPM :number # ( Number 9 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jackie \"),starts_at(DateTimeRange(start=NextTime(time=NumberPM(7)),end=AND(GE(NextTime(time=NumberPM(7))),NumberPM(9))))))","qid":"11be73ac-136d-446b-b6c5-5169e04a0ff0.0"}
{"source":"Make me an event called Mickey on Dec 5 at 6 pm ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( MD :day # ( Number 5 ) :month # ( Month \" DECEMBER \" ) ) :time ( NumberPM :number # ( Number 6 ) ) ) ) :subject ( ?= # ( String \" Mickey \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" Mickey \"),starts_at(MD(month=\" DECEMBER \",day=5)),starts_at(NumberPM(6))))","qid":"47a3b50e-ac67-4593-89cd-8c25267c89fd.0"}
{"source":"Can you make an event for Monday at 6 pm for dinner","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :time ( NumberPM :number # ( Number 6 ) ) ) ) :subject ( ?= # ( String \" dinner \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" dinner \"),starts_at(NextDOW(\" MONDAY \")),starts_at(NumberPM(6))))","qid":"43fe2902-5185-444c-a881-5a9471071a5a.1"}
{"source":"I need you to add a meeting to my calendar .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] ) ) ) )","target":"CreateEvent(Event?())","qid":"5a628d38-846b-4394-a893-f3d85aad59f4.0"}
{"source":"Can you set an event for \" meeting with Sam \" at 8 am on Friday morning ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( NumberAM :number # ( Number 8 ) ) ) ) :subject ( ?= # ( String \" meeting with Sam \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" meeting with Sam \"),starts_at(NextDOW(\" FRIDAY \")),starts_at(NumberAM(8))))","qid":"ffbc7712-2c61-4341-8ace-0fedf2b63ee1.0"}
{"source":"Schedule a meeting with Martha for Friday at 5 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Martha \" ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( NumberPM :number # ( Number 5 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Martha \"),starts_at(NextDOW(\" FRIDAY \")),starts_at(NumberPM(5))))","qid":"422720ba-8125-4edf-ae0c-a15e5d85c290.0"}
{"source":"make a meeting for 1300 hours today","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( Today ) :time ( HourMinuteMilitary :hours # ( Number 13 ) :minutes # ( Number 0 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(starts_at(Today()),starts_at(HourMinuteMilitary(hours=13,minutes=0))))","qid":"23f2ab8a-a10d-4b91-a3f5-a5692e436e68.0"}
{"source":"make a schedule tomorrow","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) ) ) ) )","target":"CreateEvent(starts_at(Tomorrow()))","qid":"155b50e3-0d5b-41df-84aa-90781c80651b.0"}
{"source":"Make a football game watch party Sunday at 3 .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" SUNDAY \" ) ) :time ( NumberPM :number # ( Number 3 ) ) ) ) :subject ( ?= # ( String \" football game watch party \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" football game watch party \"),starts_at(NextDOW(\" SUNDAY \")),starts_at(NumberPM(3))))","qid":"25da6d94-a013-403a-a240-970eed268d14.4"}
{"source":"Add a meeting called Jan on February 14 th at 1 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( MD :day # ( Number 14 ) :month # ( Month \" FEBRUARY \" ) ) :time ( NumberPM :number # ( Number 1 ) ) ) ) :subject ( ?= # ( String \" Jan \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" Jan \"),starts_at(MD(month=\" FEBRUARY \",day=14)),starts_at(NumberPM(1))))","qid":"64461da4-d6af-4bbb-885e-763a287c57c4.2"}
{"source":"I need you to put Bake Off on my schedule for early tomorrow .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( DateTimeConstraint :constraint ( Early ) :date ( Tomorrow ) ) :subject ( ?= # ( String \" Bake Off \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" Bake Off \"),starts_at(Early()),starts_at(Tomorrow())))","qid":"8a2d597f-2177-4eac-af99-0df27eb5c98c.3"}
{"source":"also put me out all day on the 28 th of October .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( EventAllDayOnDate :date ( MD :day # ( Number 28 ) :month # ( Month \" OCTOBER \" ) ) :event ( Constraint[Event] :showAs ( ?= # ( ShowAsStatus \" OutOfOffice \" ) ) ) ) ) ) )","target":"CreateEvent(AND(spans_time(MD(month=\" OCTOBER \",day=28)),has_status(ShowAsStatus(\" OutOfOffice \"))))","qid":"2eca1498-5479-4b22-a27e-aea03c47be6a.2"}
{"source":"Okay , can you please add a meeting with Cort on Monday at 2 pm ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Cort \" ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :time ( NumberPM :number # ( Number 2 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Cort \"),starts_at(NextDOW(\" MONDAY \")),starts_at(NumberPM(2))))","qid":"c95076b2-321a-4459-8907-7848b902bb6d.1"}
{"source":"Great . Now add print out copies of Covent to my schedule on Saturday at 1 : 30 pm . I 'll probably just end up doing it at the Office Depot on Carrolton .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :location ( ?= # ( LocationKeyphrase \" the Office Depot on Carrolton \" ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" SATURDAY \" ) ) :time ( HourMinutePm :hours # ( Number 1 ) :minutes # ( Number 30.0 ) ) ) ) :subject ( ?= # ( String \" print out copies of Covent \" ) ) ) ) ) )","target":"CreateEvent(AND(at_location(\" the Office Depot on Carrolton \"),has_subject(\" print out copies of Covent \"),starts_at(NextDOW(\" SATURDAY \")),starts_at(HourMinutePm(hours=1,minutes=30))))","qid":"4e2e87fc-8a15-4cee-b33e-80622c5fb023.1"}
{"source":"Ballet practice this week","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ThisWeek ) ) :subject ( ?= # ( String \" Ballet practice \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" Ballet practice \"),starts_at(ThisWeek())))","qid":"ab53d6d6-90e4-4989-9d48-2f6f1d803c14.1"}
{"source":"I 'm looking to add a event to my calendar for next Wednesday that I will need to take my cat to the vet .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" WEDNESDAY \" ) ) ) ) :subject ( ?= # ( String \" take my cat to the vet \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" take my cat to the vet \"),starts_at(NextDOW(\" WEDNESDAY \"))))","qid":"d18dbbca-0ab4-4f25-85af-a4586822f0a0.0"}
{"source":"I 'm going on a date tonight at 9 : 00 PM .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( Today ) :time ( NumberPM :number # ( Number 9 ) ) ) ) :subject ( ?= # ( String \" date \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" date \"),starts_at(Today()),starts_at(NumberPM(9))))","qid":"5faca384-6bd9-4786-8b00-16e5a43d5b27.0"}
{"source":"I need to put a friend lunch on my schedule at 11 am .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( NextTime :time ( NumberAM :number # ( Number 11 ) ) ) ) :subject ( ?= # ( String \" friend lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" friend lunch \"),starts_at(NextTime(time=NumberAM(11)))))","qid":"1b8cf7a8-68c2-4bcf-96df-bcd5ef32f41e.0"}
{"source":"Add an event after my paintball match","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( :end ( singleton ( :results ( FindEventWrapperWithDefaults :constraint ( Constraint[Event] :subject ( ?~= # ( String \" paintball match \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(starts_at(:end(FindEvents(has_subject(\" paintball match \")))))","qid":"6acccfd6-b840-4b82-abe6-ce88abb2aa4c.4"}
{"source":"set an appointment with john at 8 pm tomorrow","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" john \" ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 8 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" john \"),starts_at(Tomorrow()),starts_at(NumberPM(8))))","qid":"6e47708e-7e74-4b15-b27b-a6da668c902f.3"}
{"source":"My meeting last Thursday at 2 : 30 PM was with Tim","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Tim \" ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( previousDayOfWeek ( Today ) # ( DayOfWeek \" THURSDAY \" ) ) :time ( HourMinutePm :hours # ( Number 2 ) :minutes # ( Number 30.0 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Tim \"),starts_at(previousDayOfWeek(Today(),DayOfWeek(\" THURSDAY \"))),starts_at(HourMinutePm(hours=2,minutes=30))))","qid":"10b35471-01c3-4c15-a6f9-d3c6cebbd5e0.4"}
{"source":"Set me as away from office all day for video games","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :nonEmptyBase ( EventAllDayOnDate :date ( Today ) :event ( Constraint[Event] :showAs ( ?= # ( ShowAsStatus \" OutOfOffice \" ) ) ) ) :subject ( ?= # ( String \" video games \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" video games \"),has_status(ShowAsStatus(\" OutOfOffice \")),spans_time(Today())))","qid":"28ade8e7-8c0b-4d06-8432-7818218876d6.0"}
{"source":"Can you add a doctor appointment at noon tomorrow ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( Noon ) ) ) :subject ( ?= # ( String \" doctor appointment \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" doctor appointment \"),starts_at(Tomorrow()),starts_at(Noon())))","qid":"2af95e08-7277-4192-a9ad-0b16947eb82e.1"}
{"source":"what about can you put go see flowers tomorrow at 2 pm ? I want to pick just the right bouqet so that will take me at least 2 hours because i m picky","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :duration ( ?= ( toHours # ( Number 2 ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 2 ) ) ) ) :subject ( ?= # ( String \" go see flowers \" ) ) ) ) ) )","target":"CreateEvent(AND(has_duration(toHours(2)),has_subject(\" go see flowers \"),starts_at(Tomorrow()),starts_at(NumberPM(2))))","qid":"f7bad946-32d6-4cea-a00c-099807407d92.1"}
{"source":"Make an all day fishing trip on tuesday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( EventAllDayOnDate :date ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) :event ( Constraint[Event] :subject ( ?= # ( String \" fishing trip \" ) ) ) ) ) ) )","target":"CreateEvent(AND(spans_time(NextDOW(\" TUESDAY \")),has_subject(\" fishing trip \")))","qid":"e8d09885-bb67-4c12-8a03-f42a82814b40.0"}
{"source":"Schedule a Family Gathering for tomorrow at brunch please .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( Brunch ) ) ) :subject ( ?= # ( String \" Family Gathering \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" Family Gathering \"),starts_at(Tomorrow()),starts_at(Brunch())))","qid":"44687300-bd0b-4355-bde3-75a1e4e7c161.0"}
{"source":"I need to write a movie blog tomorrow .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) :subject ( ?= # ( String \" write a movie blog \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" write a movie blog \"),starts_at(Tomorrow())))","qid":"fb6ba912-ace6-40cf-96f8-23fa3c472f42.0"}
{"source":"create a time at 3 . 45 am","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( NextTime :time ( HourMinutePm :hours # ( Number 3 ) :minutes # ( Number 45 ) ) ) ) ) ) ) )","target":"CreateEvent(starts_at(NextTime(time=HourMinutePm(hours=3,minutes=45))))","qid":"2ba7bc04-d13a-473a-ace0-2fb44bba3e56.0"}
{"source":"Create a new appointment with Bob tonight at 7 PM for an hour .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Bob \" ) ) ) ) ) ) :duration ( ?= ( toHours # ( Number 1 ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Today ) :time ( NumberPM :number # ( Number 7 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(has_duration(toHours(1)),with_attendee(\" Bob \"),starts_at(Today()),starts_at(NumberPM(7))))","qid":"02766b94-fe5c-492a-b60d-2add1968c921.3"}
{"source":"Add the Soccer Practice I had last Friday at 3 : 45 pm to my calendar .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( previousDayOfWeek ( Today ) # ( DayOfWeek \" FRIDAY \" ) ) :time ( HourMinutePm :hours # ( Number 3 ) :minutes # ( Number 45 ) ) ) ) :subject ( ?= # ( String \" Soccer Practice \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" Soccer Practice \"),starts_at(previousDayOfWeek(Today(),DayOfWeek(\" FRIDAY \"))),starts_at(HourMinutePm(hours=3,minutes=45))))","qid":"cf9ba1c8-1743-430e-aa7d-8221c17e5a99.3"}
{"source":"Create Staff Lunch after meeting with Jen but before 6 PM .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( DateTimeAndConstraint :dateTime1 ( :end ( singleton ( :results ( FindEventWrapperWithDefaults :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipientConstraint :recipientConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jen \" ) ) ) ) ) ) ) ) :dateTime2 ( TimeAfterDateTime :dateTime ( :end ( singleton ( :results ( FindEventWrapperWithDefaults :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipientConstraint :recipientConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jen \" ) ) ) ) ) ) ) ) :time ( NumberPM :number # ( Number 6 ) ) ) ) :subject ( ?= # ( String \" Staff Lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" Staff Lunch \"),starts_at(DateTimeRange(start=:end(FindEvents(with_attendee(\" Jen \"))),end=AND(GE(:end(FindEvents(with_attendee(\" Jen \")))),NumberPM(6))))))","qid":"2220f100-7ce7-4765-81e3-a3f4001d0816.4"}
{"source":"Add the hiking trip to my calendar to be from Monday through Wednesday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( EventAllDayForDateRange :dateRange ( DateAndConstraint :date1 ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :date2 ( nextDayOfWeek ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) # ( DayOfWeek \" WEDNESDAY \" ) ) ) :event ( Constraint[Event] :subject ( ?= # ( String \" hiking trip \" ) ) ) ) ) ) )","target":"CreateEvent(AND(spans_time(DateAndConstraint(date1=NextDOW(\" MONDAY \"),date2=nextDayOfWeek(NextDOW(\" MONDAY \"),DayOfWeek(\" WEDNESDAY \")))),has_subject(\" hiking trip \")))","qid":"4978de75-bd61-44aa-a981-9fc20cc3bafa.0"}
{"source":"Can you set up an appointment with Dr. Kristen Clifford Wednesday at 3 : 00 pm ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kristen Clifford \" ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" WEDNESDAY \" ) ) :time ( NumberPM :number # ( Number 3 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Kristen Clifford \"),starts_at(NextDOW(\" WEDNESDAY \")),starts_at(NumberPM(3))))","qid":"f28baee0-3c1b-4442-82bd-019171fbcc04.10"}
{"source":"Put on my calendar that I had a meeting with Rachel last Tuesday at 4 : 15 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Rachel \" ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( previousDayOfWeek ( Today ) # ( DayOfWeek \" TUESDAY \" ) ) :time ( HourMinutePm :hours # ( Number 4 ) :minutes # ( Number 15 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Rachel \"),starts_at(previousDayOfWeek(Today(),DayOfWeek(\" TUESDAY \"))),starts_at(HourMinutePm(hours=4,minutes=15))))","qid":"6af99ce9-cce8-4319-881d-269a8a965353.2"}
{"source":"make a appointment for tomorrow","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) ) ) ) )","target":"CreateEvent(starts_at(Tomorrow()))","qid":"65e11734-3e24-437a-9aba-ac59c0971d6f.1"}
{"source":"I need to pick up a dog next spring","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( SeasonSpring ) ) :subject ( ?= # ( String \" pick up a dog \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" pick up a dog \"),starts_at(SeasonSpring())))","qid":"d6f2f80c-9e2c-49fa-8c94-5db657291006.0"}
{"source":"Schedule golf for Saturday from 9 AM until 2 PM .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :end ( ?= ( TimeAfterDateTime :dateTime ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" SATURDAY \" ) ) :time ( NumberAM :number # ( Number 9 ) ) ) :time ( NumberPM :number # ( Number 2 ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" SATURDAY \" ) ) :time ( NumberAM :number # ( Number 9 ) ) ) ) :subject ( ?= # ( String \" golf \" ) ) ) ) ) )","target":"CreateEvent(AND(ends_at(AND(GE(DateTime?(date=NextDOW(\" SATURDAY \"),time=NumberAM(9))),NumberPM(2))),has_subject(\" golf \"),starts_at(NextDOW(\" SATURDAY \")),starts_at(NumberAM(9))))","qid":"230c307d-6802-40b3-912c-e2dac33db673.0"}
{"source":"Hi , I need to meet with Alex tomorrow afternoon for an hour .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Alex \" ) ) ) ) ) ) :duration ( ?= ( toHours # ( Number 1 ) ) ) :start ( DateTimeConstraint :constraint ( Afternoon ) :date ( Tomorrow ) ) ) ) ) )","target":"CreateEvent(AND(has_duration(toHours(1)),with_attendee(\" Alex \"),starts_at(Afternoon()),starts_at(Tomorrow())))","qid":"5129d757-35a5-4121-b12c-e5f9d0e38dd8.0"}
{"source":"Set an appointment for my Super Smash Tournaments for this Saturday at noon .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" SATURDAY \" ) ) :time ( Noon ) ) ) :subject ( ?= # ( String \" Super Smash Tournaments \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" Super Smash Tournaments \"),starts_at(NextDOW(\" SATURDAY \")),starts_at(Noon())))","qid":"a4bb5b41-149d-4b16-bc3a-c8e0ecdf4212.2"}
{"source":"put mom 's birthday party on the calendar for tomorrow at 5 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 5 ) ) ) ) :subject ( ?= # ( String \" mom's birthday party \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" mom's birthday party \"),starts_at(Tomorrow()),starts_at(NumberPM(5))))","qid":"e6e90407-a0ac-4469-8a1c-719bfcee6aee.4"}
{"source":"Please schedule a meeting with the Jack tomorrow .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jack \" ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jack \"),starts_at(Tomorrow())))","qid":"59862b7c-26cd-40e2-afa4-272094cec7df.4"}
{"source":"schedule grandma 's 100 th birthday party for March 8 2020 at 8 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( MDY :day # ( Number 8 ) :month # ( Month \" MARCH \" ) :year # ( Number 2020.0 ) ) :time ( NumberPM :number # ( Number 8 ) ) ) ) :subject ( ?= # ( String \" grandma's 100th birthday party \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" grandma's 100th birthday party \"),starts_at(MDY(month=Month(\" MARCH \"),day=8,year=2020)),starts_at(NumberPM(8))))","qid":"a30ce13e-8eb4-4efb-b914-bf48d419c883.0"}
{"source":"Schedule a Star Viewing past 8 but before midnight tomorrow .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( DateTimeAndConstraint :dateTime1 ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 8 ) ) ) :dateTime2 ( TimeAfterDateTime :dateTime ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 8 ) ) ) :time ( Midnight ) ) ) :subject ( ?= # ( String \" Star Viewing \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" Star Viewing \"),starts_at(DateTimeRange(start=DateTime?(date=Tomorrow(),time=NumberPM(8)),end=AND(GE(DateTime?(date=Tomorrow(),time=NumberPM(8))),Midnight())))))","qid":"93eacf8d-a0ec-43ea-8615-91ccb7e8b63a.2"}
{"source":"Add a team meeting for Wednesday at 2 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" WEDNESDAY \" ) ) :time ( NumberPM :number # ( Number 2 ) ) ) ) :subject ( ?= # ( String \" team meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" team meeting \"),starts_at(NextDOW(\" WEDNESDAY \")),starts_at(NumberPM(2))))","qid":"31c3dd44-e3fc-4161-a68c-8011b2416604.0"}
{"source":"I 'm going to be in Pittsburgh next week for a conference starting on Monday and lasting three days .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( EventAllDayStartingDateForPeriod :event ( Constraint[Event] :location ( ?= # ( LocationKeyphrase \" Pittsburgh \" ) ) :subject ( ?= # ( String \" conference \" ) ) ) :period ( toDays # ( Number 3 ) ) :startDate ( DowOfWeekNew :dow # ( DayOfWeek \" MONDAY \" ) :week ( NextWeekList ) ) ) ) ) )","target":"CreateEvent(AND(has_duration(toDays(3)),starts_at(DowOfWeekNew(dow=DayOfWeek(\" MONDAY \"),week=NextWeekList())),starts_at(Time(hour=0,minute=0)),at_location(\" Pittsburgh \"),has_subject(\" conference \")))","qid":"f1def0ea-4c23-41d9-97a8-3129999cb89c.4"}
{"source":"make the meeting sync on Friday with Jerry Skinner","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jerry Skinner \" ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jerry Skinner \"),starts_at(NextDOW(\" FRIDAY \"))))","qid":"6c54a450-bd3f-4ae0-a522-5e0fcdee69be.7"}
{"source":"Can you schedule a meeting with Kristen Clifford for Thursday ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kristen Clifford \" ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" THURSDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Kristen Clifford \"),starts_at(NextDOW(\" THURSDAY \"))))","qid":"2a8a13cb-49c2-4eea-858e-f58352d60928.7"}
{"source":"I want to create an appointment with Jerri Skinner","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jerri Skinner \" ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(\" Jerri Skinner \"))","qid":"b68e45cd-c729-4e6f-94cd-916ac9ae4705.0"}
{"source":"Can you mark down my Road Trip with Angela this Fall ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Angela \" ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( SeasonFall ) ) :subject ( ?= # ( String \" Road Trip \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Angela \"),has_subject(\" Road Trip \"),starts_at(SeasonFall())))","qid":"12a4dc2e-fc77-4499-b0be-f088cf6183d5.2"}
{"source":"Please add an all day swim competition for next Saturday with Jim starting at 10 .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jim \" ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" SATURDAY \" ) ) :time ( NumberAM :number # ( Number 10.0 ) ) ) ) :subject ( ?= # ( String \" all day swim competition \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jim \"),has_subject(\" all day swim competition \"),starts_at(NextDOW(\" SATURDAY \")),starts_at(NumberAM(10))))","qid":"ff28c3b2-e284-4f31-b9eb-86cd997e8693.2"}
{"source":"Please schedule dinner with Susie for Carrabas at 7 : 00 PM Friday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Susie \" ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( NumberPM :number # ( Number 7 ) ) ) ) :subject ( ?= # ( String \" dinner \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Susie \"),has_subject(\" dinner \"),starts_at(NextDOW(\" FRIDAY \")),starts_at(NumberPM(7))))","qid":"ce6f9351-f76b-4943-aa60-5e5eb45a6c36.0"}
{"source":"Add dog grooming appointment on the 18 th at 4","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( nextDayOfMonth ( Today ) # ( Number 18 ) ) :time ( NumberPM :number # ( Number 4 ) ) ) ) :subject ( ?= # ( String \" dog grooming appointment \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" dog grooming appointment \"),starts_at(nextDayOfMonth(Today(),18)),starts_at(NumberPM(4))))","qid":"34fb5e4d-68b4-40d4-9f47-aab54b008698.2"}
{"source":"set up evaluation meeting with Karl Boon for Tuesday morning .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Karl Boon \" ) ) ) ) ) ) :start ( DateTimeConstraint :constraint ( Morning ) :date ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) ) :subject ( ?= # ( String \" evaluation meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Karl Boon \"),has_subject(\" evaluation meeting \"),starts_at(Morning()),starts_at(NextDOW(\" TUESDAY \"))))","qid":"09ff5837-4812-49bc-9770-a8473d8d6e23.0"}
{"source":"I 'll be off work for 3 days from tomorrow","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( EventAllDayStartingDateForPeriod :event ( Constraint[Event] :subject ( ?= # ( String \" off work \" ) ) ) :period ( toDays # ( Number 3 ) ) :startDate ( Tomorrow ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" off work \"),has_duration(toDays(3)),starts_at(Tomorrow()),starts_at(Time(hour=0,minute=0))))","qid":"66b93f71-28cd-4b64-88f8-64722a92ea8f.2"}
{"source":"Add a trip to Canada with Michelle , Patti and Stephanie .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Michelle \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Patti \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Stephanie \" ) ) ) ) ) ) ) :subject ( ?= # ( String \" trip to Canada \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Stephanie \"),with_attendee(\" Michelle \"),with_attendee(\" Patti \"),has_subject(\" trip to Canada \")))","qid":"ba07414b-e2ae-4db2-89c7-785a49b9d1d8.3"}
{"source":"I need a late afternoon meeting to be added on the schedule for Friday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( DateTimeConstraint :constraint ( LateAfternoon ) :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) ) ) ) ) )","target":"CreateEvent(AND(starts_at(LateAfternoon()),starts_at(NextDOW(\" FRIDAY \"))))","qid":"6442e2a6-49bd-45ea-9959-35dfc64f323e.0"}
{"source":"can you make me an event next week that is nt a weekend ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( andConstraint ( Constraint[DateTime] :date ( Constraint[Date] :dayOfWeek ( negate ( Weekend ) ) ) ) ( Constraint[DateTime] :date ( NextWeekList ) ) ) ) ) ) )","target":"CreateEvent(AND(avoid_start(Date?(dayOfWeek=Weekend())),starts_at(NextWeekList())))","qid":"6cf5f194-8728-4fbd-9df8-918e8716a65d.0"}
{"source":"Let 's make a maybe lunch with dave for saturday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" dave \" ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" SATURDAY \" ) ) ) ) :subject ( ?= # ( String \" maybe lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" dave \"),has_subject(\" maybe lunch \"),starts_at(NextDOW(\" SATURDAY \"))))","qid":"0caa41d5-7846-4c9b-a4d1-aa5084257cf1.4"}
{"source":"I need to add a meeting at 4 pm today .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( Today ) :time ( NumberPM :number # ( Number 4 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(starts_at(Today()),starts_at(NumberPM(4))))","qid":"ba78a49a-16dc-4df9-93e1-951dde03f328.1"}
{"source":"Create Buy Birthday Gift for tomorrow at 1 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 1 ) ) ) ) :subject ( ?= # ( String \" Buy Birthday Gift \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" Buy Birthday Gift \"),starts_at(Tomorrow()),starts_at(NumberPM(1))))","qid":"f072df7d-19c5-4734-b535-d1e98508e4fe.1"}
{"source":"make a meeting in an hour","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( adjustByPeriodDuration ( Now ) ( PeriodDuration :duration ( toHours # ( Number 1 ) ) ) ) ) ) ) ) )","target":"CreateEvent(starts_at(adjustByPeriodDuration(Now(),PeriodDuration(duration=toHours(1)))))","qid":"0f3e3bc9-c16a-4497-ac16-ed8134f6076d.1"}
{"source":"Schedule sports meet in ' 23","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( FullYearofYear :year # ( Number 22 ) ) ) :subject ( ?= # ( String \" sports meet \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" sports meet \"),starts_at(FullYearofYear(22))))","qid":"bc46e136-4273-4564-ade8-66c5761df563.0"}
{"source":"Can you make a new appointment in the Blue Conference Room in July ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :location ( ?= # ( LocationKeyphrase \" Blue Conference Room \" ) ) :start ( Constraint[DateTime] :date ( FullMonthofMonth :month # ( Month \" JULY \" ) ) ) ) ) ) )","target":"CreateEvent(AND(at_location(\" Blue Conference Room \"),starts_at(FullMonthofMonth(\" JULY \"))))","qid":"9ae4fe73-ca39-4dae-b4ab-376d49ec4055.3"}
{"source":"Can you schedule me a meeting with Fiona Mason and Karl Boon tomorrow from 2 pm - 4 pm ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Fiona Mason \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Karl Boon \" ) ) ) ) ) ) ) :end ( ?= ( TimeAfterDateTime :dateTime ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 2 ) ) ) :time ( NumberPM :number # ( Number 4 ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 2 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(ends_at(AND(GE(DateTime?(date=Tomorrow(),time=NumberPM(2))),NumberPM(4))),with_attendee(\" Fiona Mason \"),with_attendee(\" Karl Boon \"),starts_at(Tomorrow()),starts_at(NumberPM(2))))","qid":"ca7da13b-e1a8-447f-a921-13902ddd01c8.12"}
{"source":"Schedule a dentist appointment for Friday afternoon .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( DateTimeConstraint :constraint ( Afternoon ) :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) ) :subject ( ?= # ( String \" dentist appointment \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" dentist appointment \"),starts_at(Afternoon()),starts_at(NextDOW(\" FRIDAY \"))))","qid":"91a40f6a-7f55-4c42-ab05-1c93a369b505.0"}
{"source":"i also have team meeting this Thursday at 2 pm for an hour","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :duration ( ?= ( toHours # ( Number 1 ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" THURSDAY \" ) ) :time ( NumberPM :number # ( Number 2 ) ) ) ) :subject ( ?= # ( String \" team meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(has_duration(toHours(1)),has_subject(\" team meeting \"),starts_at(NextDOW(\" THURSDAY \")),starts_at(NumberPM(2))))","qid":"6b3ab3cb-df66-48c4-9298-4fc6cdd2dedd.2"}
{"source":"Can You update my Calendar to add that tomorrow there is a meeting at 2 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 2 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(starts_at(Tomorrow()),starts_at(NumberPM(2))))","qid":"891f1fcf-3cbf-4fe1-b993-e316a4d91ced.0"}
{"source":"Can you setup a meeting with karl next Tuesday ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" karl \" ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" karl \"),starts_at(NextDOW(\" TUESDAY \"))))","qid":"63e79dfa-b6c3-4324-8093-07b1285f964c.1"}
{"source":"I need Breakfast set to 0630 next friday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( HourMinuteMilitary :hours # ( Number 6 ) :minutes # ( Number 30.0 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(starts_at(NextDOW(\" FRIDAY \")),starts_at(HourMinuteMilitary(hours=6,minutes=30))))","qid":"d653d0dd-193a-45db-b1f1-b629f0a96208.0"}
{"source":"Create 20 minutes jogging time tonight","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :duration ( ?= ( toMinutes # ( Number 20.0 ) ) ) :start ( DateTimeConstraint :constraint ( Night ) :date ( Today ) ) :subject ( ?= # ( String \" jogging time \" ) ) ) ) ) )","target":"CreateEvent(AND(has_duration(toMinutes(20)),has_subject(\" jogging time \"),starts_at(Night()),starts_at(Today())))","qid":"3da2c57e-b567-46db-adaf-bcd91faf4ebc.0"}
{"source":"Ok , I have a test on Monday from 3 - 6 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :end ( ?= ( TimeAfterDateTime :dateTime ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :time ( NumberPM :number # ( Number 3 ) ) ) :time ( NumberPM :number # ( Number 6 ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :time ( NumberPM :number # ( Number 3 ) ) ) ) :subject ( ?= # ( String \" test \" ) ) ) ) ) )","target":"CreateEvent(AND(ends_at(AND(GE(DateTime?(date=NextDOW(\" MONDAY \"),time=NumberPM(3))),NumberPM(6))),has_subject(\" test \"),starts_at(NextDOW(\" MONDAY \")),starts_at(NumberPM(3))))","qid":"29e1da15-36c5-47f7-be10-3483a767a212.1"}
{"source":"I 'm going Apple Bobbing tomorrow","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) :subject ( ?= # ( String \" Apple Bobbing \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" Apple Bobbing \"),starts_at(Tomorrow())))","qid":"ddad50d7-bb22-4e38-9c9c-404ea6386575.0"}
{"source":"hi , help me set a meeting tomorrow","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) ) ) ) )","target":"CreateEvent(starts_at(Tomorrow()))","qid":"b9e5fd5d-55e0-47c2-8e50-c3d0868f4faa.0"}
{"source":"set up a meeting with cornelio sunday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" cornelio \" ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" SUNDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" cornelio \"),starts_at(NextDOW(\" SUNDAY \"))))","qid":"53471ce5-360d-4f6c-94ce-8406283c3d09.0"}
{"source":"Make a new event for monday at 5 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :time ( NumberPM :number # ( Number 5 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(starts_at(NextDOW(\" MONDAY \")),starts_at(NumberPM(5))))","qid":"3c70c591-8b69-4c97-a0cc-f91c0bc612ed.2"}
{"source":"Put shopping at 5 pm on the schedule .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( NextTime :time ( NumberPM :number # ( Number 5 ) ) ) ) :subject ( ?= # ( String \" shopping \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" shopping \"),starts_at(NextTime(time=NumberPM(5)))))","qid":"cf562ee7-21d6-4b7e-a732-305df9776dd5.2"}
{"source":"make an appointment thursday morning with alex","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" alex \" ) ) ) ) ) ) :start ( DateTimeConstraint :constraint ( Morning ) :date ( NextDOW :dow # ( DayOfWeek \" THURSDAY \" ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" alex \"),starts_at(Morning()),starts_at(NextDOW(\" THURSDAY \"))))","qid":"af94c456-7b01-4735-ba4e-68dc4f190c10.2"}
{"source":"can you put start the day tomorrow at 8 am and then my morning routine should only be 30 minutes tomorrow since i m not wearing makeup","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :duration ( ?= ( toMinutes # ( Number 30.0 ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberAM :number # ( Number 8 ) ) ) ) :subject ( ?= # ( String \" start the day \" ) ) ) ) ) )","target":"CreateEvent(AND(has_duration(toMinutes(30)),has_subject(\" start the day \"),starts_at(Tomorrow()),starts_at(NumberAM(8))))","qid":"2611de6f-7056-4b44-a702-982fee80dfc9.0"}
{"source":"Please add an event with Paige Ashworth for May 5 th , 2020","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Paige Ashworth \" ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( MDY :day # ( Number 5 ) :month # ( Month \" MAY \" ) :year # ( Number 2020.0 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Paige Ashworth \"),starts_at(MDY(month=Month(\" MAY \"),day=5,year=2020))))","qid":"166fb7e8-4e13-49b4-97c6-f26af3fa2425.1"}
{"source":"Great . can you schedule dinner with Tina tonight ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Tina \" ) ) ) ) ) ) :start ( DateTimeConstraint :constraint ( Night ) :date ( Today ) ) :subject ( ?= # ( String \" dinner \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Tina \"),has_subject(\" dinner \"),starts_at(Night()),starts_at(Today())))","qid":"74fd0ad7-766f-48f7-a6d9-f7dcff5c308c.4"}
{"source":"Now make me an event called Ultimate Friendlies , and have it anytime not on the weekend because i m busy on the weekend","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( Constraint[Date] :dayOfWeek ( negate ( Weekend ) ) ) ) :subject ( ?= # ( String \" Ultimate Friendlies \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" Ultimate Friendlies \"),avoid_start(Date?(dayOfWeek=Weekend()))))","qid":"22e295ff-ae92-43a2-84e6-5831d2681dfa.2"}
{"source":"Can you set one up for me for Friday ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(starts_at(NextDOW(\" FRIDAY \")))","qid":"e219a748-51be-4768-a7e8-fc56d1b77a37.1"}
{"source":"Set my status as out of the office while I go lay siege on Portland tomorrow .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :location ( ?= # ( LocationKeyphrase \" Portland \" ) ) :showAs ( ?= # ( ShowAsStatus \" OutOfOffice \" ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) :subject ( ?= # ( String \" go lay siege \" ) ) ) ) ) )","target":"CreateEvent(AND(at_location(\" Portland \"),has_subject(\" go lay siege \"),starts_at(Tomorrow()),has_status(ShowAsStatus(\" OutOfOffice \"))))","qid":"f97a5051-32a7-4f2c-bb4a-abad1c817e2e.0"}
{"source":"schedule a staff meeting on Monday morning for 45 minutes after 9 am","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :duration ( ?= ( toMinutes # ( Number 45 ) ) ) :start ( DateTimeConstraint :constraint ( ?= ( NumberAM :number # ( Number 9 ) ) ) :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) ) :subject ( ?= # ( String \" staff meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(has_duration(toMinutes(45)),has_subject(\" staff meeting \"),starts_at(NumberAM(9)),starts_at(NextDOW(\" MONDAY \"))))","qid":"9a4b4032-e4c7-48ec-8f4e-0fd7ed98466e.1"}
{"source":"I need to add the dogs vet appointment to my schedule for Friday at 10 am","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( NumberAM :number # ( Number 10.0 ) ) ) ) :subject ( ?= # ( String \" dogs vet appointment \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" dogs vet appointment \"),starts_at(NextDOW(\" FRIDAY \")),starts_at(NumberAM(10))))","qid":"615fa725-5f6d-481d-b2a7-dbd7e8782e4d.0"}
{"source":"set an appointment for 5","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( NextTime :time ( NumberPM :number # ( Number 5 ) ) ) ) ) ) ) )","target":"CreateEvent(starts_at(NextTime(time=NumberPM(5))))","qid":"be4bef4b-9657-495a-9b89-5fe8945302ea.3"}
{"source":"I want to go to lunch tomorrow at Burger Shot","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :location ( ?= # ( LocationKeyphrase \" Burger Shot \" ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) :subject ( ?= # ( String \" lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(at_location(\" Burger Shot \"),has_subject(\" lunch \"),starts_at(Tomorrow())))","qid":"2f4d8248-fa36-4f65-86ee-f9fd0dbe68b3.3"}
{"source":"create 1 more event on the 30 of aug titled Sleep Talk","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( MD :day # ( Number 30.0 ) :month # ( Month \" AUGUST \" ) ) ) ) :subject ( ?= # ( String \" Sleep Talk \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" Sleep Talk \"),starts_at(MD(month=\" AUGUST \",day=30))))","qid":"f58c0d3d-d97f-4b4f-89ad-f1f9747eace9.1"}
{"source":"hi , i need to book a dental appointment tomorrow afternoon","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( DateTimeConstraint :constraint ( Afternoon ) :date ( Tomorrow ) ) :subject ( ?= # ( String \" dental appointment \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" dental appointment \"),starts_at(Afternoon()),starts_at(Tomorrow())))","qid":"ae6a22a1-b08b-4261-8c92-d498cfbdf352.0"}
{"source":"Make an event for Tuesday at 9 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) :time ( NumberPM :number # ( Number 9 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(starts_at(NextDOW(\" TUESDAY \")),starts_at(NumberPM(9))))","qid":"61bf79c6-a313-40a5-b982-70ab50123b54.4"}
{"source":"Add an appointment for me at 5","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( NextTime :time ( NumberPM :number # ( Number 5 ) ) ) ) ) ) ) )","target":"CreateEvent(starts_at(NextTime(time=NumberPM(5))))","qid":"97416129-dbc6-4991-a39d-5bb238d48ceb.0"}
{"source":"Schedule snowboarding for Saturday at 3 : 00 PM .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" SATURDAY \" ) ) :time ( NumberPM :number # ( Number 3 ) ) ) ) :subject ( ?= # ( String \" snowboarding \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" snowboarding \"),starts_at(NextDOW(\" SATURDAY \")),starts_at(NumberPM(3))))","qid":"a7b300b6-1bd7-4e5c-8cd0-2a2c6b06099b.0"}
{"source":"If it 's possible , can you create a morning appointment ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :time ( Morning ) ) ) ) ) )","target":"CreateEvent(starts_at(Morning()))","qid":"638662c7-137a-48eb-9a0b-bca3cdceecf4.0"}
{"source":"schedule a vacation in the summer time","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( SeasonSummer ) ) :subject ( ?= # ( String \" vacation \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" vacation \"),starts_at(SeasonSummer())))","qid":"0680b59f-4f6d-4e27-8ce7-f1ed0fc7463d.0"}
{"source":"Who is Sally 's manager ?","original_target":"( Yield :output ( FindManager :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Sally \" ) ) ) ) ) ) )","target":"FindManager(\" Sally \")","qid":"b6f2fdcb-2f51-4226-9a90-4d7ad5cc23fc.2"}
{"source":"could you schedule a dentist appointment for me in one week ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( adjustByPeriod ( Today ) ( toWeeks # ( Number 1 ) ) ) ) ) :subject ( ?= # ( String \" dentist appointment \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" dentist appointment \"),starts_at(adjustByPeriod(Today(),toWeeks(1)))))","qid":"b283120f-0d0d-4afd-a7a6-05fefb3af87d.0"}
{"source":"Create a breakfast meeting with Abby , Jesse , and Parker on Monday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jesse \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Parker \" ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) ) ) :subject ( ?= # ( String \" breakfast meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Parker \"),with_attendee(\" Abby \"),with_attendee(\" Jesse \"),has_subject(\" breakfast meeting \"),starts_at(NextDOW(\" MONDAY \"))))","qid":"e00d495c-956c-45a0-ba9b-f76e1d840d32.4"}
{"source":"Hey make an event named \" REEEEEEEEE \"","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :subject ( ?= # ( String \" REEEEEEEEE \" ) ) ) ) ) )","target":"CreateEvent(has_subject(\" REEEEEEEEE \"))","qid":"9e26a30c-33f2-4942-9afc-84c3b9828da1.1"}
{"source":"set upa a doctors appt on Dec 3 at 7 : 50 am","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( MD :day # ( Number 3 ) :month # ( Month \" DECEMBER \" ) ) :time ( HourMinuteAm :hours # ( Number 7 ) :minutes # ( Number 50.0 ) ) ) ) :subject ( ?= # ( String \" doctors appt \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" doctors appt \"),starts_at(MD(month=\" DECEMBER \",day=3)),starts_at(HourMinuteAm(hours=7,minutes=50))))","qid":"2ab81433-e73e-450e-9d1c-b0628b55b706.0"}
{"source":"Add to calendar meeting at outback steakhouse on Friday at 12 : 00 to 1 : 00 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :end ( ?= ( TimeAfterDateTime :dateTime ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( NumberPM :number # ( Number 12 ) ) ) :time ( NumberPM :number # ( Number 1 ) ) ) ) :location ( ?= # ( LocationKeyphrase \" outback steakhouse \" ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( NumberPM :number # ( Number 12 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(ends_at(AND(GE(DateTime?(date=NextDOW(\" FRIDAY \"),time=NumberPM(12))),NumberPM(1))),at_location(\" outback steakhouse \"),starts_at(NextDOW(\" FRIDAY \")),starts_at(NumberPM(12))))","qid":"8136bde5-d66a-42eb-8f34-7d7e20ae4674.0"}
{"source":"I have a meeting with her on July 7 th . Can you add that ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( MD :day # ( Number 7 ) :month # ( Month \" JULY \" ) ) ) ) ) ) ) )","target":"CreateEvent(starts_at(MD(month=\" JULY \",day=7)))","qid":"49a8ad21-218f-4cf5-a3de-385cb8dc79f1.1"}
{"source":"create a meeting at 5 pm with Grace","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Grace \" ) ) ) ) ) ) :start ( ?= ( NextTime :time ( NumberPM :number # ( Number 5 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Grace \"),starts_at(NextTime(time=NumberPM(5)))))","qid":"ee88c762-0c85-4259-9fc9-ada621999a99.0"}
{"source":"Create luncheon at city centre before 2 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :location ( ?= # ( LocationKeyphrase \" city centre \" ) ) :start ( OnDateBeforeTime :date ( Execute :intension ( refer ( extensionConstraint ( Constraint[Date] ) ) ) ) :time ( NumberPM :number # ( Number 2 ) ) ) :subject ( ?= # ( String \" luncheon \" ) ) ) ) ) )","target":"CreateEvent(AND(at_location(\" city centre \"),has_subject(\" luncheon \"),starts_at(OnDateBeforeTime(date=refer(Date?()),time=NumberPM(2)))))","qid":"cc24a2a0-f268-4308-9444-d5d78e175475.0"}
{"source":"Add an event on March 5 th at 6 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( MD :day # ( Number 5 ) :month # ( Month \" MARCH \" ) ) :time ( NumberPM :number # ( Number 6 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(starts_at(MD(month=\" MARCH \",day=5)),starts_at(NumberPM(6))))","qid":"7c55a705-d4b9-4dd0-aa2a-74db45b1883f.4"}
{"source":"Set a doctor appointment for Monday at 9 : 00 am","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :time ( NumberAM :number # ( Number 9 ) ) ) ) :subject ( ?= # ( String \" doctor appointment \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" doctor appointment \"),starts_at(NextDOW(\" MONDAY \")),starts_at(NumberAM(9))))","qid":"0ad0aa6d-425e-44ba-a484-d2da9875107d.0"}
{"source":"Add to the schedule a dress appointment with the bridal shop on Friday at 5 pm to get fitted for my bridesmaids dress for my sisters wedding .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( NumberPM :number # ( Number 5 ) ) ) ) :subject ( ?= # ( String \" dress appointment with the bridal shop \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" dress appointment with the bridal shop \"),starts_at(NextDOW(\" FRIDAY \")),starts_at(NumberPM(5))))","qid":"ccfb5f52-4c2e-467e-af33-7153bdf17840.0"}
{"source":"I need a doctors appointment made for tomorrow","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) :subject ( ?= # ( String \" doctors appointment \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" doctors appointment \"),starts_at(Tomorrow())))","qid":"c338dc91-cee4-41ea-86be-8dc45087f7e3.1"}
{"source":"I had a football game with Brent last Friday at 2 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Brent \" ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( previousDayOfWeek ( Today ) # ( DayOfWeek \" FRIDAY \" ) ) :time ( NumberPM :number # ( Number 2 ) ) ) ) :subject ( ?= # ( String \" football game \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Brent \"),has_subject(\" football game \"),starts_at(previousDayOfWeek(Today(),DayOfWeek(\" FRIDAY \"))),starts_at(NumberPM(2))))","qid":"f2cbed03-bf3c-46f1-ae0e-a8b3cf8c6279.3"}
{"source":"Add meeting for Tuesday of next week .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( DowOfWeekNew :dow # ( DayOfWeek \" TUESDAY \" ) :week ( NextWeekList ) ) ) ) ) ) ) )","target":"CreateEvent(starts_at(DowOfWeekNew(dow=DayOfWeek(\" TUESDAY \"),week=NextWeekList())))","qid":"b1233512-d354-4665-bed3-170ea9c9352c.0"}
{"source":"Set up Tea Time with Alice on Sunday at 11 am .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Alice \" ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" SUNDAY \" ) ) :time ( NumberAM :number # ( Number 11 ) ) ) ) :subject ( ?= # ( String \" Tea Time \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Alice \"),has_subject(\" Tea Time \"),starts_at(NextDOW(\" SUNDAY \")),starts_at(NumberAM(11))))","qid":"b985a427-261b-4991-b5c3-6549d3c2c9b7.2"}
{"source":"put dinner with ben","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" ben \" ) ) ) ) ) ) :subject ( ?= # ( String \" dinner \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" ben \"),has_subject(\" dinner \")))","qid":"f9ca697c-a219-419c-a2a6-0ca2df2802e0.3"}
{"source":"Find 15 minutes for Deep Breathing on Monday after 1 PM .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :duration ( ?= ( toMinutes # ( Number 15 ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :time ( NumberPM :number # ( Number 1 ) ) ) ) :subject ( ?= # ( String \" Deep Breathing \" ) ) ) ) ) )","target":"CreateEvent(AND(has_duration(toMinutes(15)),has_subject(\" Deep Breathing \"),starts_at(NextDOW(\" MONDAY \")),starts_at(NumberPM(1))))","qid":"2f5cc000-8c2d-4a39-8ad9-3554471211fa.2"}
{"source":"Book bike ride at 4 pm today .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( Today ) :time ( NumberPM :number # ( Number 4 ) ) ) ) :subject ( ?= # ( String \" bike ride \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" bike ride \"),starts_at(Today()),starts_at(NumberPM(4))))","qid":"555cfbaa-ebf4-4952-865b-0fd00f28ede8.0"}
{"source":"My run on sunday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" SUNDAY \" ) ) ) ) :subject ( ?= # ( String \" run \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" run \"),starts_at(NextDOW(\" SUNDAY \"))))","qid":"d880bbce-7db3-4c89-b45c-f965caf24b3c.5"}
{"source":"Put a meeting on my calendar tomorrow to go buy a coat","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) :subject ( ?= # ( String \" go buy a coat \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" go buy a coat \"),starts_at(Tomorrow())))","qid":"a00dd69b-1427-41a1-805d-079d32a8838b.4"}
{"source":"Schedule a meeting called Updates at 4 pm on Friday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( NumberPM :number # ( Number 4 ) ) ) ) :subject ( ?= # ( String \" Updates \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" Updates \"),starts_at(NextDOW(\" FRIDAY \")),starts_at(NumberPM(4))))","qid":"6af6d216-328d-46da-a07b-350343f36859.3"}
{"source":"Add walk the dogs at 1 : 30 PM to my schedule","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( NextTime :time ( HourMinutePm :hours # ( Number 1 ) :minutes # ( Number 30.0 ) ) ) ) :subject ( ?= # ( String \" walk the dogs \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" walk the dogs \"),starts_at(NextTime(time=HourMinutePm(hours=1,minutes=30)))))","qid":"ac6b6256-648f-42f4-9b4f-fd8c11d1cf55.2"}
{"source":"I had a luncheon last Tuesday ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( previousDayOfWeek ( Today ) # ( DayOfWeek \" TUESDAY \" ) ) ) ) :subject ( ?= # ( String \" luncheon \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" luncheon \"),starts_at(previousDayOfWeek(Today(),DayOfWeek(\" TUESDAY \")))))","qid":"eecbaa84-5def-40cb-afbd-c3364a99571e.1"}
{"source":"I need to schedule a meeting with Damien next week .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Damien \" ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( NextWeekList ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Damien \"),starts_at(NextWeekList())))","qid":"48891f3b-05b1-49ca-99ad-533e87ce60ec.0"}
{"source":"Meeting today at 4 pm , I need you to put it on the schedule .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( Today ) :time ( NumberPM :number # ( Number 4 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(starts_at(Today()),starts_at(NumberPM(4))))","qid":"b0cda7f9-ab70-464c-b0ce-20a26ce644fe.0"}
{"source":"Schedule a meeting with Leslie tomorrow at 11 : 00 AM .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Leslie \" ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberAM :number # ( Number 11 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Leslie \"),starts_at(Tomorrow()),starts_at(NumberAM(11))))","qid":"8e499779-76f9-41f2-a947-2854098ec053.0"}
{"source":"Can you add \" Hamptons trip \" to friday through sunday of this week","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( EventAllDayForDateRange :dateRange ( DateAndConstraint :date1 ( DowOfWeekNew :dow # ( DayOfWeek \" FRIDAY \" ) :week ( ThisWeek ) ) :date2 ( nextDayOfWeek ( DowOfWeekNew :dow # ( DayOfWeek \" FRIDAY \" ) :week ( ThisWeek ) ) # ( DayOfWeek \" SUNDAY \" ) ) ) :event ( Constraint[Event] :subject ( ?= # ( String \" Hamptons trip \" ) ) ) ) ) ) )","target":"CreateEvent(AND(spans_time(DateAndConstraint(date1=DowOfWeekNew(dow=DayOfWeek(\" FRIDAY \"),week=ThisWeek()),date2=nextDayOfWeek(DowOfWeekNew(dow=DayOfWeek(\" FRIDAY \"),week=ThisWeek()),DayOfWeek(\" SUNDAY \")))),has_subject(\" Hamptons trip \")))","qid":"4593f1ca-3417-4052-bbe6-093db312bb91.0"}
{"source":"add vaction for the week of july 4","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( WeekOfDateNew :date ( MD :day # ( Number 4 ) :month # ( Month \" JULY \" ) ) ) ) :subject ( ?= # ( String \" vacation \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" vacation \"),starts_at(WeekOfDateNew(date=MD(month=\" JULY \",day=4)))))","qid":"619e5158-a907-4244-bd11-cea939ffd64b.9"}
{"source":"Schedule a co - worker sync","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :subject ( ?= # ( String \" co-worker sync \" ) ) ) ) ) )","target":"CreateEvent(has_subject(\" co_worker sync \"))","qid":"170ff5ba-e79f-468c-85b4-7a3c46da5ef1.19"}
{"source":"Create brunch sales war meeting with Jeff at 11 : 00 am .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jeff \" ) ) ) ) ) ) :start ( ?= ( NextTime :time ( NumberAM :number # ( Number 11 ) ) ) ) :subject ( ?= # ( String \" brunch sales war meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jeff \"),has_subject(\" brunch sales war meeting \"),starts_at(NextTime(time=NumberAM(11)))))","qid":"b5817be2-db23-415b-a5ce-839725b471db.0"}
{"source":"I want meet my close friend at 3 am","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( NextTime :time ( NumberAM :number # ( Number 3 ) ) ) ) :subject ( ?= # ( String \" meet my close friend \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" meet my close friend \"),starts_at(NextTime(time=NumberAM(3)))))","qid":"ce994c7d-8a1f-4479-a090-c72d0da2c433.0"}
{"source":"Can you make a meeting Tuesday at 3 : 00 PM ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) :time ( NumberPM :number # ( Number 3 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(starts_at(NextDOW(\" TUESDAY \")),starts_at(NumberPM(3))))","qid":"3a4d2ea3-66e3-462c-b51c-ffcbd4fee9f1.1"}
{"source":"Ok - well get the staff meeting scheduled for Friday at 3 PM .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( NumberPM :number # ( Number 3 ) ) ) ) :subject ( ?= # ( String \" staff meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" staff meeting \"),starts_at(NextDOW(\" FRIDAY \")),starts_at(NumberPM(3))))","qid":"66d71b22-65aa-45c6-81e8-4a32f9680218.2"}
{"source":"Add return calls at 4 on tuesday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) :time ( NumberPM :number # ( Number 4 ) ) ) ) :subject ( ?= # ( String \" return calls \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" return calls \"),starts_at(NextDOW(\" TUESDAY \")),starts_at(NumberPM(4))))","qid":"c47d98cc-2290-48bd-8789-c19345878d34.3"}
{"source":"I want to make a meeting called Update with Jim at noon on Friday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jim \" ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( Noon ) ) ) :subject ( ?= # ( String \" Update \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jim \"),has_subject(\" Update \"),starts_at(NextDOW(\" FRIDAY \")),starts_at(Noon())))","qid":"bc1837c3-9624-4e87-b1f7-7bac18fa2db5.1"}
{"source":"I need to book 2 hours tomorrow for a Golf Tournament at 2 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :duration ( ?= ( toHours # ( Number 2 ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 2 ) ) ) ) :subject ( ?= # ( String \" Golf Tournament \" ) ) ) ) ) )","target":"CreateEvent(AND(has_duration(toHours(2)),has_subject(\" Golf Tournament \"),starts_at(Tomorrow()),starts_at(NumberPM(2))))","qid":"a1690d1b-d87b-4daa-aca3-d96f4cd34a06.4"}
{"source":"Please set up a meeting with Alexa next wednesday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Alexa \" ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" WEDNESDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Alexa \"),starts_at(NextDOW(\" WEDNESDAY \"))))","qid":"321ade99-c3f3-45dd-9ac4-bdc212a33903.0"}
{"source":"May you add Rex Poling to my calender","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Rex Poling \" ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(\" Rex Poling \"))","qid":"bf9cb97d-2a5f-41a6-9d09-9c2945e7cc06.13"}
{"source":"Also add a hair appointment on Tuesday the 19 th from 2 : 00 to 3 : 00 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :end ( ?= ( TimeAfterDateTime :dateTime ( DateAtTimeWithDefaults :date ( nextDayOfMonth ( Today ) # ( Number 19 ) ) :time ( NumberPM :number # ( Number 2 ) ) ) :time ( NumberPM :number # ( Number 3 ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( nextDayOfMonth ( Today ) # ( Number 19 ) ) :time ( NumberPM :number # ( Number 2 ) ) ) ) :subject ( ?= # ( String \" hair appointment \" ) ) ) ) ) )","target":"CreateEvent(AND(ends_at(AND(GE(DateTime?(date=nextDayOfMonth(Today(),19),time=NumberPM(2))),NumberPM(3))),has_subject(\" hair appointment \"),starts_at(nextDayOfMonth(Today(),19)),starts_at(NumberPM(2))))","qid":"a37d0782-2afb-4a6c-b7d9-577abcd085eb.2"}
{"source":"Plan a dinner date on the 17 th from 5 to 8 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :end ( ?= ( TimeAfterDateTime :dateTime ( DateAtTimeWithDefaults :date ( nextDayOfMonth ( Today ) # ( Number 17 ) ) :time ( NumberPM :number # ( Number 5 ) ) ) :time ( NumberPM :number # ( Number 8 ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( nextDayOfMonth ( Today ) # ( Number 17 ) ) :time ( NumberPM :number # ( Number 5 ) ) ) ) :subject ( ?= # ( String \" dinner date \" ) ) ) ) ) )","target":"CreateEvent(AND(ends_at(AND(GE(DateTime?(date=nextDayOfMonth(Today(),17),time=NumberPM(5))),NumberPM(8))),has_subject(\" dinner date \"),starts_at(nextDayOfMonth(Today(),17)),starts_at(NumberPM(5))))","qid":"f96e3539-31d2-4acb-be1b-bfc006b1ccd0.1"}
{"source":"I arrange a party for my kid birthday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :subject ( ?= # ( String \" party for my kid birthday \" ) ) ) ) ) )","target":"CreateEvent(has_subject(\" party for my kid birthday \"))","qid":"e1484094-a911-4419-b164-eb1fb43fc798.0"}
{"source":"Get a meeting in a room at the NERD for me please","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :location ( andConstraint ( ?= # ( LocationKeyphrase \" NERD \" ) ) ( roomRequest ) ) ) ) ) )","target":"CreateEvent(AND(at_location(\" NERD \"),at_location(roomRequest())))","qid":"2a4b36cd-d141-49d0-a90c-2631c8f32a01.2"}
{"source":"Create a budget meeting for tomorrow 8 am","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberAM :number # ( Number 8 ) ) ) ) :subject ( ?= # ( String \" budget meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" budget meeting \"),starts_at(Tomorrow()),starts_at(NumberAM(8))))","qid":"272a2405-7b50-4b6f-b6fb-df697059e003.0"}
{"source":"put big race on my schedule saturday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" SATURDAY \" ) ) ) ) :subject ( ?= # ( String \" big race \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" big race \"),starts_at(NextDOW(\" SATURDAY \"))))","qid":"816ddd9d-baa1-4a78-83a4-d3565f6f6f3f.0"}
{"source":"Add a meeting for Monday between 9 - 12","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :end ( ?= ( TimeAfterDateTime :dateTime ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :time ( NumberAM :number # ( Number 9 ) ) ) :time ( NumberPM :number # ( Number 12 ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :time ( NumberAM :number # ( Number 9 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(ends_at(AND(GE(DateTime?(date=NextDOW(\" MONDAY \"),time=NumberAM(9))),NumberPM(12))),starts_at(NextDOW(\" MONDAY \")),starts_at(NumberAM(9))))","qid":"327a2491-827c-4ef2-bac0-b64a121fcfd2.0"}
{"source":"Can you add a fall bbq to the calendar ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( SeasonFall ) ) :subject ( ?= # ( String \" bbq \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" bbq \"),starts_at(SeasonFall())))","qid":"0c188a2b-6a8b-417e-8b37-46e2426c44a8.1"}
{"source":"I need to schedule a appointment with Barack Obama on Thursday at 4 : 00 pm to go over the budget .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Barack Obama \" ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" THURSDAY \" ) ) :time ( NumberPM :number # ( Number 4 ) ) ) ) :subject ( ?= # ( String \" go over the budget \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Barack Obama \"),has_subject(\" go over the budget \"),starts_at(NextDOW(\" THURSDAY \")),starts_at(NumberPM(4))))","qid":"c28336e0-291d-4f2d-99ef-26d627f3c6ee.0"}
{"source":"Oh ... Okay . Could you also add to my calendar that I have a meeting on april 10 th at 9 am ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( MD :day # ( Number 10.0 ) :month # ( Month \" APRIL \" ) ) :time ( NumberAM :number # ( Number 9 ) ) ) ) :subject ( ?= # ( String \" meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" meeting \"),starts_at(MD(month=\" APRIL \",day=10)),starts_at(NumberAM(9))))","qid":"f9e922ed-881b-4d11-8dcf-22beaef80b25.2"}
{"source":"Schedule an event with Janice and Jerri on April 20","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Janice \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jerri \" ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( MD :day # ( Number 20.0 ) :month # ( Month \" APRIL \" ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Janice \"),with_attendee(\" Jerri \"),starts_at(MD(month=\" APRIL \",day=20))))","qid":"9a44bc04-e760-4ce9-a3d6-dcff0e712282.11"}
{"source":"Put a budget meeting with Beth , Richard , and Beverly on Tuesday at 1 : 00 PM .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Beth \" ) ) ) ) ) ) ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Richard \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Beverly \" ) ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) :time ( NumberPM :number # ( Number 1 ) ) ) ) :subject ( ?= # ( String \" budget meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Beth \"),with_attendee(\" Richard \"),with_attendee(\" Beverly \"),has_subject(\" budget meeting \"),starts_at(NextDOW(\" TUESDAY \")),starts_at(NumberPM(1))))","qid":"b5575986-5bb1-4907-b751-ed90f127d3bd.0"}
{"source":"put the dinner with jimmy at 9 . 00 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" jimmy \" ) ) ) ) ) ) :start ( ?= ( NextTime :time ( NumberPM :number # ( Number 9 ) ) ) ) :subject ( ?= # ( String \" dinner \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" jimmy \"),has_subject(\" dinner \"),starts_at(NextTime(time=NumberPM(9)))))","qid":"2460d7da-a6e0-416e-8a31-223a742a651c.2"}
{"source":"Schedule a doctor 's appointment on Tuesday at 8 : 30 PM .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) :time ( HourMinutePm :hours # ( Number 8 ) :minutes # ( Number 30.0 ) ) ) ) :subject ( ?= # ( String \" doctor's appointment \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" doctor's appointment \"),starts_at(NextDOW(\" TUESDAY \")),starts_at(HourMinutePm(hours=8,minutes=30))))","qid":"26c770e1-0346-4cfa-9de4-324cf0e9ce2f.0"}
{"source":"Can you add a meeting to today 's schedule ? At 3 pm with Sarah ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Sarah \" ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Today ) :time ( NumberPM :number # ( Number 3 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Sarah \"),starts_at(Today()),starts_at(NumberPM(3))))","qid":"acfc5256-adad-49fb-9cc8-48e3077190c0.0"}
{"source":"Add Pope meeting for tomorrow","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) :subject ( ?= # ( String \" Pope meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" Pope meeting \"),starts_at(Tomorrow())))","qid":"ef5b24ad-133b-4d08-b043-03fe6bbfa903.4"}
{"source":"Make an appointment in Portland Oregon at 5 pm on January 31 .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :location ( ?= # ( LocationKeyphrase \" Portland Oregon \" ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( MD :day # ( Number 31 ) :month # ( Month \" JANUARY \" ) ) :time ( NumberPM :number # ( Number 5 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(at_location(\" Portland Oregon \"),starts_at(MD(month=\" JANUARY \",day=31)),starts_at(NumberPM(5))))","qid":"f9107eeb-0c4a-4583-bda2-f2e50da1c359.2"}
{"source":"Can I add an event for March 31 st","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( MD :day # ( Number 31 ) :month # ( Month \" MARCH \" ) ) ) ) ) ) ) )","target":"CreateEvent(starts_at(MD(month=\" MARCH \",day=31)))","qid":"12a4e1ce-c56c-41d4-ab97-6494baf6fe95.8"}
{"source":"Make an event for tuesday at 6 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) :time ( NumberPM :number # ( Number 6 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(starts_at(NextDOW(\" TUESDAY \")),starts_at(NumberPM(6))))","qid":"61f2c494-c965-40f1-9c7f-14978eefc155.3"}
{"source":"Who is the boss for this account ?","original_target":"( Yield :output ( FindManager :recipient ( toRecipient ( CurrentUser ) ) ) )","target":"FindManager(CurrentUser())","qid":"2229a240-0808-4716-8373-dd66a2d26ab1.1"}
{"source":"On March 15 th , add an event called anniversary dinner at 6 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( MD :day # ( Number 15 ) :month # ( Month \" MARCH \" ) ) :time ( NumberPM :number # ( Number 6 ) ) ) ) :subject ( ?= # ( String \" anniversary dinner \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" anniversary dinner \"),starts_at(MD(month=\" MARCH \",day=15)),starts_at(NumberPM(6))))","qid":"48043d0b-c0dc-4197-9e1e-eceb4b21365f.3"}
{"source":"Add my date with Sam too .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Sam \" ) ) ) ) ) ) :subject ( ?= # ( String \" date \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Sam \"),has_subject(\" date \")))","qid":"d618c3a6-1ba8-4de4-ad8b-348ec1aa84d2.2"}
{"source":"Add a pool party with myself and Barack Obama to my calendar for tomorrow at 9 : 00 AM","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Barack Obama \" ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberAM :number # ( Number 9 ) ) ) ) :subject ( ?= # ( String \" pool party \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Barack Obama \"),has_subject(\" pool party \"),starts_at(Tomorrow()),starts_at(NumberAM(9))))","qid":"f8467e19-479c-4adb-83b7-ea3e56a47cbd.3"}
{"source":"Is there an opening next week for the meeting with Eric ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Eric \" ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( NextWeekList ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Eric \"),starts_at(NextWeekList())))","qid":"e5c6f543-0b11-4883-93ef-d3acce1574df.4"}
{"source":"Add a sales presentation with Abby , Kim , and Jake tomorrow at 3 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 3 ) ) ) ) :subject ( ?= # ( String \" sales presentation \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jake \"),with_attendee(\" Abby \"),with_attendee(\" Kim \"),has_subject(\" sales presentation \"),starts_at(Tomorrow()),starts_at(NumberPM(3))))","qid":"17464928-4d8e-40b4-ba02-571a2d9c8834.2"}
{"source":"Please set up a meeting with Abby for Friday at 1 pm through the end of the day","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) :end ( ?= ( TimeAfterDateTime :dateTime ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( NumberPM :number # ( Number 1 ) ) ) :time ( EndOfWorkDay ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( NumberPM :number # ( Number 1 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(ends_at(AND(GE(DateTime?(date=NextDOW(\" FRIDAY \"),time=NumberPM(1))),EndOfWorkDay())),with_attendee(\" Abby \"),starts_at(NextDOW(\" FRIDAY \")),starts_at(NumberPM(1))))","qid":"a77aa541-d96e-4510-8e59-ba20c056bd40.0"}
{"source":"Can I set up a dinner date tomorrow at the Chili 's off of highway 75 at 6 : 00 pm ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :location ( ?= # ( LocationKeyphrase \" Chili's off of highway 75 \" ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 6 ) ) ) ) :subject ( ?= # ( String \" dinner date \" ) ) ) ) ) )","target":"CreateEvent(AND(at_location(\" Chili's off of highway 75 \"),has_subject(\" dinner date \"),starts_at(Tomorrow()),starts_at(NumberPM(6))))","qid":"14916682-a226-4d70-b269-9f2323a84411.0"}
{"source":"Schedule time for a haircut early next Monday","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( DateTimeConstraint :constraint ( Early ) :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) ) :subject ( ?= # ( String \" haircut \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" haircut \"),starts_at(Early()),starts_at(NextDOW(\" MONDAY \"))))","qid":"5ec59550-b414-429f-8a0a-21a2ad666f57.0"}
{"source":"Can you find 3 hours of free time next week to schedule a planning meeting ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :duration ( ?= ( toHours # ( Number 3 ) ) ) :start ( Constraint[DateTime] :date ( NextWeekList ) ) :subject ( ?= # ( String \" planning meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" planning meeting \"),starts_at(NextWeekList()),has_duration(toHours(3))))","qid":"32d2d1ab-a9c0-40c7-923d-1528cfdc915d.0"}
{"source":"An appointment with Barack Obama ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Barack Obama \" ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(with_attendee(\" Barack Obama \"))","qid":"26f79290-b6ae-46c3-bfbf-3385e8526511.2"}
{"source":"Can you add a staff meeting to the calendar on Tuesday of next week late in the morning .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( DateTimeConstraint :constraint ( LateMorning ) :date ( DowOfWeekNew :dow # ( DayOfWeek \" TUESDAY \" ) :week ( NextWeekList ) ) ) :subject ( ?= # ( String \" staff meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" staff meeting \"),starts_at(LateMorning()),starts_at(DowOfWeekNew(dow=DayOfWeek(\" TUESDAY \"),week=NextWeekList()))))","qid":"3e91b806-1771-4a55-ae62-db62201ea410.0"}
{"source":"Put a doctor appointment on my calendar for the 14 th at 2 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( nextDayOfMonth ( Today ) # ( Number 14 ) ) :time ( NumberPM :number # ( Number 2 ) ) ) ) :subject ( ?= # ( String \" doctor appointment \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" doctor appointment \"),starts_at(nextDayOfMonth(Today(),14)),starts_at(NumberPM(2))))","qid":"e9c1f097-2eb9-406f-84b8-3a5143995b33.0"}
{"source":"put a appointment with shaun tomorrow 8 . 00 to 8 . 30 am","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" shaun \" ) ) ) ) ) ) :end ( ?= ( TimeAfterDateTime :dateTime ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberAM :number # ( Number 8 ) ) ) :time ( HourMinuteAm :hours # ( Number 8 ) :minutes # ( Number 30.0 ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberAM :number # ( Number 8 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(ends_at(AND(GE(DateTime?(date=Tomorrow(),time=NumberAM(8))),HourMinuteAm(hours=8,minutes=30))),with_attendee(\" shaun \"),starts_at(Tomorrow()),starts_at(NumberAM(8))))","qid":"aa413d6a-da1c-4eff-afbb-4f08a4cbbabb.0"}
{"source":"Add brainstorming meeting to the calendar for next Monday morning .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( DateTimeConstraint :constraint ( Morning ) :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) ) :subject ( ?= # ( String \" brainstorming meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" brainstorming meeting \"),starts_at(Morning()),starts_at(NextDOW(\" MONDAY \"))))","qid":"ed745646-aeca-46a5-837f-ce60b42b49b3.0"}
{"source":"add Party for 2020","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( Today ) ) ) :subject ( ?= # ( String \" Party for 2020 \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" Party for 2020 \"),starts_at(Today())))","qid":"97eecb14-0f9f-4a4a-aa08-a83e55bd63b0.2"}
{"source":"make an event for tuesday at 4 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) :time ( NumberPM :number # ( Number 4 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(starts_at(NextDOW(\" TUESDAY \")),starts_at(NumberPM(4))))","qid":"d827d74e-d1bb-4baa-a8b0-35093b776b4d.4"}
{"source":"Paige Ashworth will need to be added to the appointment book for Tuesday next week at 8 PM","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Paige Ashworth \" ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( DowOfWeekNew :dow # ( DayOfWeek \" TUESDAY \" ) :week ( NextWeekList ) ) :time ( NumberPM :number # ( Number 8 ) ) ) ) :subject ( ?= # ( String \" appointment book \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Paige Ashworth \"),has_subject(\" appointment book \"),starts_at(DowOfWeekNew(dow=DayOfWeek(\" TUESDAY \"),week=NextWeekList())),starts_at(NumberPM(8))))","qid":"c32300b2-7ecd-4b6f-834f-fe683847336c.1"}
{"source":"Schedule a Hawaii work trip for 5 days starting 10 \/ 31 \/ 19 .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( EventAllDayStartingDateForPeriod :event ( Constraint[Event] :subject ( ?= # ( String \" Hawaii work trip \" ) ) ) :period ( toDays # ( Number 5 ) ) :startDate ( MD :day # ( Number 31 ) :month ( toMonth # ( Number 10.0 ) ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" Hawaii work trip \"),has_duration(toDays(5)),starts_at(MD(month=toMonth(10),day=31)),starts_at(Time(hour=0,minute=0))))","qid":"db9666bc-c479-4ad3-8603-6d4c9d1618eb.0"}
{"source":"Cool , now schedule a meeting tomorrow at 2 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 2 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(starts_at(Tomorrow()),starts_at(NumberPM(2))))","qid":"8929980c-e579-4b83-9a03-d305c1a8f287.0"}
{"source":"Actually there 's a mushroom seminar that started an hour ago , and will end in an hour","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :end ( ?= ( adjustByPeriodDuration ( Now ) ( PeriodDuration :duration ( toHours # ( Number 1 ) ) ) ) ) :start ( ?= ( PeriodDurationBeforeDateTime :dateTime ( Now ) :periodDuration ( PeriodDuration :duration ( toHours # ( Number 1 ) ) ) ) ) :subject ( ?= # ( String \" mushroom seminar \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" mushroom seminar \"),starts_at(PeriodDurationBeforeDateTime(dateTime=Now(),periodDuration=PeriodDuration(duration=toHours(1)))),ends_at(adjustByPeriodDuration(Now(),PeriodDuration(duration=toHours(1))))))","qid":"8c8ac4b5-be4d-4357-aa5e-5728f274b435.1"}
{"source":"Make a meeting with Sam for Friday evening","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Sam \" ) ) ) ) ) ) :start ( DateTimeConstraint :constraint ( Evening ) :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Sam \"),starts_at(Evening()),starts_at(NextDOW(\" FRIDAY \"))))","qid":"11f1f836-0c3f-46da-844e-52c3c8764566.1"}
{"source":"Make me an event on friday at the end of the day until 8 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :end ( ?= ( TimeAfterDateTime :dateTime ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( EndOfWorkDay ) ) :time ( NumberPM :number # ( Number 8 ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( EndOfWorkDay ) ) ) ) ) ) )","target":"CreateEvent(AND(ends_at(AND(GE(DateTime?(date=NextDOW(\" FRIDAY \"),time=EndOfWorkDay())),NumberPM(8))),starts_at(NextDOW(\" FRIDAY \")),starts_at(EndOfWorkDay())))","qid":"014275d7-3d83-4b36-b7c7-75122ef2bd6f.2"}
{"source":"Let 's set up a coaching appointment for Monday at 7 : 45 am .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :time ( HourMinuteAm :hours # ( Number 7 ) :minutes # ( Number 45 ) ) ) ) :subject ( ?= # ( String \" coaching appointment \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" coaching appointment \"),starts_at(NextDOW(\" MONDAY \")),starts_at(HourMinuteAm(hours=7,minutes=45))))","qid":"23dab0bb-718c-4553-897e-505e7ed808d9.0"}
{"source":"Schedule a sales call with Carlos Friday at noon .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Carlos \" ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( Noon ) ) ) :subject ( ?= # ( String \" Sales Call \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Carlos \"),has_subject(\" Sales Call \"),starts_at(NextDOW(\" FRIDAY \")),starts_at(Noon())))","qid":"731fdce9-2d79-435f-bfeb-50102030bfb7.0"}
{"source":"Make me something to do tomorrow with Abby , Jesse , Kim , and Jake","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jesse \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jake \"),with_attendee(\" Kim \"),with_attendee(\" Abby \"),with_attendee(\" Jesse \"),starts_at(Tomorrow())))","qid":"04602ee9-158b-417d-81cc-dc6b7ba86393.0"}
{"source":"Please add Grand opening of Dusty 's Dairy Barn on Monday at 5 : 00 PM .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) :time ( NumberPM :number # ( Number 5 ) ) ) ) :subject ( ?= # ( String \" Grand opening of Dusty's Dairy Barn \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" Grand opening of Dusty's Dairy Barn \"),starts_at(NextDOW(\" MONDAY \")),starts_at(NumberPM(5))))","qid":"396ee518-0f12-4263-8a1e-1ce90f33e7b2.4"}
{"source":"Make me an all day event for tomorrow with Abby and Jake","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) ) :nonEmptyBase ( EventAllDayOnDate :date ( Tomorrow ) :event ( Constraint[Event] ) ) ) ) ) )","target":"CreateEvent(AND(spans_time(Tomorrow()),with_attendee(\" Abby \"),with_attendee(\" Jake \")))","qid":"c8914cd7-d0ba-459f-97ac-36b7b13be166.0"}
{"source":"Add lunch date with Bob for 2 pm tomorrow .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Bob \" ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 2 ) ) ) ) :subject ( ?= # ( String \" lunch date \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Bob \"),has_subject(\" lunch date \"),starts_at(Tomorrow()),starts_at(NumberPM(2))))","qid":"b21408be-2020-4d10-9954-74fc35d61135.0"}
{"source":"create a new event today at 1400","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( Today ) :time ( HourMinuteMilitary :hours # ( Number 14 ) :minutes # ( Number 0 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(starts_at(Today()),starts_at(HourMinuteMilitary(hours=14,minutes=0))))","qid":"13fb5152-b9ba-49c2-9da1-2cad2967349c.0"}
{"source":"Create a Client Presentation at 4 : 30 pm next Wednesday , and set my status to Busy .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :showAs ( ?= # ( ShowAsStatus \" Busy \" ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" WEDNESDAY \" ) ) :time ( HourMinutePm :hours # ( Number 4 ) :minutes # ( Number 30.0 ) ) ) ) :subject ( ?= # ( String \" Client Presentation \" ) ) ) ) ) )","target":"CreateEvent(AND(has_status(ShowAsStatus(\" Busy \")),has_subject(\" Client Presentation \"),starts_at(NextDOW(\" WEDNESDAY \")),starts_at(HourMinutePm(hours=4,minutes=30))))","qid":"e66e972e-e5b0-4a24-897c-bca4d70d530b.0"}
{"source":"And on the 1 st add an all day shopping trip","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( EventAllDayOnDate :date ( nextDayOfMonth ( Today ) # ( Number 1 ) ) :event ( Constraint[Event] :subject ( ?= # ( String \" shopping trip \" ) ) ) ) ) ) )","target":"CreateEvent(AND(spans_time(nextDayOfMonth(Today(),1)),has_subject(\" shopping trip \")))","qid":"d8ed64ea-625f-4fe1-8d9d-f739640f08d0.2"}
{"source":"Add dinner with Annie at Jax in Glendale to tomorrow 's calendar from 7 PM to 9 PM .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Annie \" ) ) ) ) ) ) :end ( ?= ( TimeAfterDateTime :dateTime ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 7 ) ) ) :time ( NumberPM :number # ( Number 9 ) ) ) ) :location ( ?= # ( LocationKeyphrase \" Jax in Glendale \" ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 7 ) ) ) ) :subject ( ?= # ( String \" dinner \" ) ) ) ) ) )","target":"CreateEvent(AND(ends_at(AND(GE(DateTime?(date=Tomorrow(),time=NumberPM(7))),NumberPM(9))),with_attendee(\" Annie \"),at_location(\" Jax in Glendale \"),has_subject(\" dinner \"),starts_at(Tomorrow()),starts_at(NumberPM(7))))","qid":"3cc46c91-2b60-4d95-ba56-17ffe823c995.1"}
{"source":"I need to meet with Ana and Michael tomorrow at noon","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Ana \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Michael \" ) ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( Noon ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Ana \"),with_attendee(\" Michael \"),starts_at(Tomorrow()),starts_at(Noon())))","qid":"9251c37b-8909-49ff-9288-ae16027e0fd3.0"}
{"source":"Make a 2 hour team meeting on Friday at 12 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :duration ( ?= ( toHours # ( Number 2 ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( NumberPM :number # ( Number 12 ) ) ) ) :subject ( ?= # ( String \" team meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(has_duration(toHours(2)),has_subject(\" team meeting \"),starts_at(NextDOW(\" FRIDAY \")),starts_at(NumberPM(12))))","qid":"f54b6a1e-b5d4-410a-8e88-952909eb0518.1"}
{"source":"I have to add lunch to my calendar tomorrow for 45 minutes starting at noon at \" Burger King \"","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :duration ( ?= ( toMinutes # ( Number 45 ) ) ) :location ( ?= # ( LocationKeyphrase \" Burger King \" ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( Noon ) ) ) :subject ( ?= # ( String \" lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(has_duration(toMinutes(45)),at_location(\" Burger King \"),has_subject(\" lunch \"),starts_at(Tomorrow()),starts_at(Noon())))","qid":"8f27a93e-7065-4770-b685-cdec868f351a.0"}
{"source":"create baseball game on saturday at 12 until 5","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :end ( ?= ( TimeAfterDateTime :dateTime ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" SATURDAY \" ) ) :time ( NumberPM :number # ( Number 12 ) ) ) :time ( NumberPM :number # ( Number 5 ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" SATURDAY \" ) ) :time ( NumberPM :number # ( Number 12 ) ) ) ) :subject ( ?= # ( String \" baseball game \" ) ) ) ) ) )","target":"CreateEvent(AND(ends_at(AND(GE(DateTime?(date=NextDOW(\" SATURDAY \"),time=NumberPM(12))),NumberPM(5))),has_subject(\" baseball game \"),starts_at(NextDOW(\" SATURDAY \")),starts_at(NumberPM(12))))","qid":"c2446acc-ca53-4e31-9c0c-8795641d0c97.0"}
{"source":"schedule 2 hours of volunteering saturday morning","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :duration ( ?= ( toHours # ( Number 2 ) ) ) :start ( DateTimeConstraint :constraint ( Morning ) :date ( NextDOW :dow # ( DayOfWeek \" SATURDAY \" ) ) ) :subject ( ?= # ( String \" volunteering \" ) ) ) ) ) )","target":"CreateEvent(AND(has_duration(toHours(2)),has_subject(\" volunteering \"),starts_at(Morning()),starts_at(NextDOW(\" SATURDAY \"))))","qid":"57bbffbc-fb3e-4343-8351-c2103019606f.1"}
{"source":"I need a family meeting tonight at a starbucks in Nashville","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :location ( ?= # ( LocationKeyphrase \" starbucks in Nashville \" ) ) :start ( DateTimeConstraint :constraint ( Night ) :date ( Today ) ) :subject ( ?= # ( String \" family meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(at_location(\" starbucks in Nashville \"),has_subject(\" family meeting \"),starts_at(Night()),starts_at(Today())))","qid":"b36c4daf-b294-4c02-b07b-f7c335ad8883.1"}
{"source":"Schedule a one hour phone conference with Angela at 4 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Angela \" ) ) ) ) ) ) :duration ( ?= ( toHours # ( Number 1 ) ) ) :start ( ?= ( NextTime :time ( NumberPM :number # ( Number 4 ) ) ) ) :subject ( ?= # ( String \" phone conference \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Angela \"),has_subject(\" phone conference \"),starts_at(NextTime(time=NumberPM(4))),has_duration(toHours(1))))","qid":"24ca9b90-d22b-4f4c-98c0-37d002bc5155.0"}
{"source":"add meeting for tuesday at 2 : 00 PM","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) :time ( NumberPM :number # ( Number 2 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(starts_at(NextDOW(\" TUESDAY \")),starts_at(NumberPM(2))))","qid":"34751e41-1e7d-4e38-bf18-db6abd34640b.2"}
{"source":"Block off 30 minutes on Wednesday from 1 to 130 pm to go to the salon .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :duration ( ?= ( toMinutes # ( Number 30.0 ) ) ) :end ( ?= ( TimeAfterDateTime :dateTime ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" WEDNESDAY \" ) ) :time ( NumberPM :number # ( Number 1 ) ) ) :time ( HourMinutePm :hours # ( Number 1 ) :minutes # ( Number 30.0 ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" WEDNESDAY \" ) ) :time ( NumberPM :number # ( Number 1 ) ) ) ) :subject ( ?= # ( String \" go to the salon \" ) ) ) ) ) )","target":"CreateEvent(AND(has_duration(toMinutes(30)),ends_at(AND(GE(DateTime?(date=NextDOW(\" WEDNESDAY \"),time=NumberPM(1))),HourMinutePm(hours=1,minutes=30))),has_subject(\" go to the salon \"),starts_at(NextDOW(\" WEDNESDAY \")),starts_at(NumberPM(1))))","qid":"6a4ee7b7-b56c-4504-a43a-945b4cead190.0"}
{"source":"I took a summer vacation last Monday at 1 pm","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( previousDayOfWeek ( Today ) # ( DayOfWeek \" MONDAY \" ) ) :time ( NumberPM :number # ( Number 1 ) ) ) ) :subject ( ?= # ( String \" summer vacation \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" summer vacation \"),starts_at(previousDayOfWeek(Today(),DayOfWeek(\" MONDAY \"))),starts_at(NumberPM(1))))","qid":"e7404cfd-8a90-49af-bccd-05c3694635d0.2"}
{"source":"Add dinner between 5 and 10 for tomorrow .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( DateTimeConstraint :constraint ( TimeToTime :time1 ( NumberPM :number # ( Number 5 ) ) :time2 ( NumberPM :number # ( Number 10.0 ) ) ) :date ( Tomorrow ) ) :subject ( ?= # ( String \" dinner \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" dinner \"),starts_at(TimeToTime(time1=NumberPM(5),time2=NumberPM(10))),starts_at(Tomorrow())))","qid":"53a00303-84cf-4205-9fdb-c74c219cda15.1"}
{"source":"Add breakfast at Vicky 's Place on Sunday at 10 am","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :location ( ?= # ( LocationKeyphrase \" Vicky's Place \" ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" SUNDAY \" ) ) :time ( NumberAM :number # ( Number 10.0 ) ) ) ) :subject ( ?= # ( String \" breakfast \" ) ) ) ) ) )","target":"CreateEvent(AND(at_location(\" Vicky's Place \"),has_subject(\" breakfast \"),starts_at(NextDOW(\" SUNDAY \")),starts_at(NumberAM(10))))","qid":"89b82402-0ae9-4b11-b3ac-8c209665f552.0"}
{"source":"create work conference on friday at 9","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( NumberAM :number # ( Number 9 ) ) ) ) :subject ( ?= # ( String \" work conference \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" work conference \"),starts_at(NextDOW(\" FRIDAY \")),starts_at(NumberAM(9))))","qid":"78929d1e-18e2-465f-8e16-fba2bf70e79d.0"}
{"source":"Can you create an event at 2 pm tomorrow","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 2 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(starts_at(Tomorrow()),starts_at(NumberPM(2))))","qid":"50aa7449-d897-4658-ac9e-76611bbd0779.3"}
{"source":"Also schedule toy story 3 all day starting September 21 .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( EventAllDayOnDate :date ( MD :day # ( Number 21 ) :month # ( Month \" SEPTEMBER \" ) ) :event ( Constraint[Event] :subject ( ?= # ( String \" toy story 3 \" ) ) ) ) ) ) )","target":"CreateEvent(AND(spans_time(MD(month=\" SEPTEMBER \",day=21)),has_subject(\" toy story 3 \")))","qid":"16b4d105-9e82-4570-afac-a542da3cf414.4"}
{"source":"Set up a visit the Alamo for four hours on Saturday starting at 10 AM .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :duration ( ?= ( toHours # ( Number 4 ) ) ) :location ( ?= # ( LocationKeyphrase \" the Alamo \" ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" SATURDAY \" ) ) :time ( NumberAM :number # ( Number 10.0 ) ) ) ) :subject ( ?= # ( String \" visit \" ) ) ) ) ) )","target":"CreateEvent(AND(has_duration(toHours(4)),at_location(\" the Alamo \"),has_subject(\" visit \"),starts_at(NextDOW(\" SATURDAY \")),starts_at(NumberAM(10))))","qid":"605ab6c6-a9ba-4f75-9187-f81e9b7c9e8a.0"}
{"source":"Can you make an event for next Tuesday ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" TUESDAY \" ) ) ) ) ) ) ) )","target":"CreateEvent(starts_at(NextDOW(\" TUESDAY \")))","qid":"f11e4d5f-cfc6-4768-b25a-1c92b265e4a7.1"}
{"source":"can you create an event for dinner next monday ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) ) ) :subject ( ?= # ( String \" dinner \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" dinner \"),starts_at(NextDOW(\" MONDAY \"))))","qid":"fce9e862-617c-4a5d-afa3-56c2f7b7f1f6.1"}
{"source":"add a lunch with Jerry Skinner tomorrow at 12 PM","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jerry Skinner \" ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 12 ) ) ) ) :subject ( ?= # ( String \" lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jerry Skinner \"),has_subject(\" lunch \"),starts_at(Tomorrow()),starts_at(NumberPM(12))))","qid":"6c54a450-bd3f-4ae0-a522-5e0fcdee69be.3"}
{"source":"Make a movie night with Robert","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Robert \" ) ) ) ) ) ) :subject ( ?= # ( String \" movie night \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Robert \"),has_subject(\" movie night \")))","qid":"87cb73ab-309e-4160-9a7c-a6c0db628bcc.1"}
{"source":"Yes , please book a haircut appointment at hairlines for 2 pm also .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :location ( ?= # ( LocationKeyphrase \" hairlines \" ) ) :start ( ?= ( NextTime :time ( NumberPM :number # ( Number 2 ) ) ) ) :subject ( ?= # ( String \" haircut appointment \" ) ) ) ) ) )","target":"CreateEvent(AND(at_location(\" hairlines \"),has_subject(\" haircut appointment \"),starts_at(NextTime(time=NumberPM(2)))))","qid":"568e9a32-f54b-401c-a096-fd72b933bd2a.3"}
{"source":"I finally scheduled a haircut at Studio 121 on the 21 st at 10 am and I need to be marked out of the office . I ca n't believe how hard it was to get an appointment .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :location ( ?= # ( LocationKeyphrase \" Studio 121 \" ) ) :showAs ( ?= # ( ShowAsStatus \" OutOfOffice \" ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( nextDayOfMonth ( Today ) # ( Number 21 ) ) :time ( NumberAM :number # ( Number 10.0 ) ) ) ) :subject ( ?= # ( String \" haircut \" ) ) ) ) ) )","target":"CreateEvent(AND(has_status(ShowAsStatus(\" OutOfOffice \")),at_location(\" Studio 121 \"),has_subject(\" haircut \"),starts_at(nextDayOfMonth(Today(),21)),starts_at(NumberAM(10))))","qid":"53dfedd4-90c4-4f1f-815b-fdf87cfccffb.0"}
{"source":"Put lunch from 12 PM to 1 PM please .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :end ( ?= ( TimeAfterDateTime :dateTime ( NextTime :time ( NumberPM :number # ( Number 12 ) ) ) :time ( NumberPM :number # ( Number 1 ) ) ) ) :start ( ?= ( NextTime :time ( NumberPM :number # ( Number 12 ) ) ) ) :subject ( ?= # ( String \" lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" lunch \"),starts_at(NextTime(time=NumberPM(12))),ends_at(AND(GE(NextTime(time=NumberPM(12))),NumberPM(1)))))","qid":"b7a00b7a-2da4-488e-b2eb-49c5e3f07428.2"}
{"source":"Can you schedule a meeting for today at 3 : 00 p.m. ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( Today ) :time ( NumberPM :number # ( Number 3 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(starts_at(Today()),starts_at(NumberPM(3))))","qid":"f186625a-ea7f-4d9b-accb-513d539f55e4.2"}
{"source":"Please add lunch with Barack Obama at 12 : 30 pm on Friday .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Barack Obama \" ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" FRIDAY \" ) ) :time ( HourMinutePm :hours # ( Number 12 ) :minutes # ( Number 30.0 ) ) ) ) :subject ( ?= # ( String \" lunch \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Barack Obama \"),has_subject(\" lunch \"),starts_at(NextDOW(\" FRIDAY \")),starts_at(HourMinutePm(hours=12,minutes=30))))","qid":"380d2b2c-f482-4705-ae0c-4053942da583.2"}
{"source":"Make a meeting tomorrow with Brenda .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Brenda \" ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Brenda \"),starts_at(Tomorrow())))","qid":"b2a72c26-93b8-4cbf-bd63-0dfd3c2d577d.3"}
{"source":"I need to see Abby , Jake , and Jesse tomorrow for some beers","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Abby \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jesse \" ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) :subject ( ?= # ( String \" beers \" ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jesse \"),with_attendee(\" Abby \"),with_attendee(\" Jake \"),has_subject(\" beers \"),starts_at(Tomorrow())))","qid":"9e209bb7-e6b9-49bc-a54c-9064f511a190.2"}
{"source":"make an appointment with alex at today 5 pm","original_target":"( do ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" alex \" ) ) ) ) ) ( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( Today ) :time ( NumberPM :number # ( Number 5 ) ) ) ) ) ) ) ) )","target":"do(refer(Recipient?(name=LIKE(alex))),CreateEvent(AND(starts_at(Today()),starts_at(NumberPM(5)))))","qid":"f9b28e69-e926-4fec-9635-12b5254a4211.0"}
{"source":"Can you make a lunch meeting for next monday ?","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( Constraint[DateTime] :date ( ?= ( NextDOW :dow # ( DayOfWeek \" MONDAY \" ) ) ) ) :subject ( ?= # ( String \" lunch meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" lunch meeting \"),starts_at(NextDOW(\" MONDAY \"))))","qid":"0096b08b-d945-4ef1-beb8-c94c38e13b4f.4"}
{"source":"make a meet with jane tomorrow 1 p.m.","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" jane \" ) ) ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 1 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" jane \"),starts_at(Tomorrow()),starts_at(NumberPM(1))))","qid":"1cb68cc2-2d70-4881-80ca-3c66f56d3c0a.0"}
{"source":"Add meeting at work on the 17 th at 9 am .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :location ( ?= # ( LocationKeyphrase \" work \" ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( nextDayOfMonth ( Today ) # ( Number 17 ) ) :time ( NumberAM :number # ( Number 9 ) ) ) ) ) ) ) )","target":"CreateEvent(AND(at_location(\" work \"),starts_at(nextDayOfMonth(Today(),17)),starts_at(NumberAM(9))))","qid":"922963e6-5b57-4f6e-99d5-2dc272f18e7f.4"}
{"source":"Hi ! we have lots of games coming up this week and weekend for the play - off . We have a game with Blanchet tomorrow at 5 pm at our home . Please add that event which should be end by 8 pm . Mark me as out of office also .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :end ( ?= ( TimeAfterDateTime :dateTime ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 5 ) ) ) :time ( NumberPM :number # ( Number 8 ) ) ) ) :location ( ?= # ( LocationKeyphrase \" our home \" ) ) :showAs ( ?= # ( ShowAsStatus \" OutOfOffice \" ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( Tomorrow ) :time ( NumberPM :number # ( Number 5 ) ) ) ) :subject ( ?= # ( String \" game with Blanchet \" ) ) ) ) ) )","target":"CreateEvent(AND(ends_at(AND(GE(DateTime?(date=Tomorrow(),time=NumberPM(5))),NumberPM(8))),has_status(ShowAsStatus(\" OutOfOffice \")),at_location(\" our home \"),has_subject(\" game with Blanchet \"),starts_at(Tomorrow()),starts_at(NumberPM(5))))","qid":"761d4066-ddb8-4051-b77d-f4723f85a6e9.0"}
{"source":"Please schedule a meeting with Kim , Elli , Jennifer , and Jake for tomorrow .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( andConstraint ( andConstraint ( andConstraint ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Kim \" ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Elli \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jennifer \" ) ) ) ) ) ) ) ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Jake \" ) ) ) ) ) ) ) :start ( Constraint[DateTime] :date ( ?= ( Tomorrow ) ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Jake \"),with_attendee(\" Jennifer \"),with_attendee(\" Kim \"),with_attendee(\" Elli \"),starts_at(Tomorrow())))","qid":"c35a697c-d61d-41d9-8dad-7ad7617864a2.2"}
{"source":"I have a meeting before my workshop","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :end ( ?= ( :start ( singleton ( :results ( FindEventWrapperWithDefaults :constraint ( Constraint[Event] :subject ( ?~= # ( String \" workshop \" ) ) ) ) ) ) ) ) ) ) ) )","target":"CreateEvent(ends_at(:start(FindEvents(has_subject(\" workshop \")))))","qid":"2ee53da9-bd07-4635-9da7-f6073504f29d.0"}
{"source":"Schedule a staff meeting on Thursday at 8 : 00 AM .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" THURSDAY \" ) ) :time ( NumberAM :number # ( Number 8 ) ) ) ) :subject ( ?= # ( String \" staff meeting \" ) ) ) ) ) )","target":"CreateEvent(AND(has_subject(\" staff meeting \"),starts_at(NextDOW(\" THURSDAY \")),starts_at(NumberAM(8))))","qid":"e9a375d5-ff56-4edb-9536-b86d9da53a9d.4"}
{"source":"Saturday I have family time from 1 to 4 pm .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :end ( ?= ( TimeAfterDateTime :dateTime ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" SATURDAY \" ) ) :time ( NumberPM :number # ( Number 1 ) ) ) :time ( NumberPM :number # ( Number 4 ) ) ) ) :start ( ?= ( DateAtTimeWithDefaults :date ( NextDOW :dow # ( DayOfWeek \" SATURDAY \" ) ) :time ( NumberPM :number # ( Number 1 ) ) ) ) :subject ( ?= # ( String \" family time \" ) ) ) ) ) )","target":"CreateEvent(AND(ends_at(AND(GE(DateTime?(date=NextDOW(\" SATURDAY \"),time=NumberPM(1))),NumberPM(4))),has_subject(\" family time \"),starts_at(NextDOW(\" SATURDAY \")),starts_at(NumberPM(1))))","qid":"ae8678d9-77d3-403b-b441-45f90098b2f5.4"}
{"source":"Schedule meet Blake at Welsh Park this weekend .","original_target":"( Yield :output ( CreateCommitEventWrapper :event ( CreatePreflightEventWrapper :constraint ( Constraint[Event] :attendees ( AttendeeListHasRecipient :recipient ( Execute :intension ( refer ( extensionConstraint ( RecipientWithNameLike :constraint ( Constraint[Recipient] ) :name # ( PersonName \" Blake \" ) ) ) ) ) ) :location ( ?= # ( LocationKeyphrase \" Welsh Park \" ) ) :start ( Constraint[DateTime] :date ( ThisWeekend ) ) ) ) ) )","target":"CreateEvent(AND(with_attendee(\" Blake \"),at_location(\" Welsh Park \"),starts_at(ThisWeekend())))","qid":"4cec429d-de32-476a-93d8-409c5da627bf.4"}
